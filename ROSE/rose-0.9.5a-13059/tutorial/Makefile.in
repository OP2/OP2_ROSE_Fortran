# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# These definitions are for the benefit of independent software contained			-*- makefile -*-
# in ROSE.  (Currently, this means SAGE and ROSETTA.)
# It defines ROSE_INCLUDES and ROSE_LIBS so they can use the ROSE codes.

# ROSE_INCLUDES contains the include flags for compiling with ROSE code.
# (ROSE software should set the include paths in their respective Makefile.am
# files, since they are expected to know the ROSE source tree structure.)
# To use ROSE_INCLUDES, the independent software packages contained in ROSE
# should define the variable ROSE_HOME to be the relative path to the root
# of the ROSE directory tree.

# This fixes some problem caused by automake or autoconf
# (detailed documentation is in the ChangeLog)
# MAKE=gmake

# DQ (8/10/2007): Valentin suggested this be commented out.
# DQ (4/23/2006): This is the default when build using automake version 1.6.3 but it
# causes errors so we would like to specify --run automake instead
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake-1.6
# AUTOMAKE = ${SHELL} $(top_srcdir)/config/missing --run automake

# force ranlib to just call touch so that *.so (dynamic libraries) will not
# be run with ranlib (which is a error).  This allows us to use dynamic 
# libraries as the default within ROSE.
# JJW 7/25/2008: Do we really need this?


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(srcdir)/exampleMakefile.in \
	$(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs
bin_PROGRAMS = buildCallGraph$(EXEEXT) defuseAnalysis$(EXEEXT) \
	livenessAnalysis$(EXEEXT) interproceduralCFG$(EXEEXT) \
	virtualCFG$(EXEEXT)
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@noinst_PROGRAMS = $(am__EXEEXT_1) \
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@	sharedMemoryTraversals$(EXEEXT)
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@noinst_PROGRAMS = $(am__EXEEXT_1)
subdir = tutorial
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acmacros/canonicalize-symlink.m4 \
	$(top_srcdir)/acmacros/compiler-ar.m4 \
	$(top_srcdir)/acmacros/compiler-id.m4 \
	$(top_srcdir)/acmacros/configure-log.m4 \
	$(top_srcdir)/acmacros/pkg.m4 $(top_srcdir)/config/EDG.m4 \
	$(top_srcdir)/config/ROSE.m4 \
	$(top_srcdir)/config/ac_pkg_swig.m4 \
	$(top_srcdir)/config/ax_boost_base.m4 \
	$(top_srcdir)/config/ax_boost_date_time.m4 \
	$(top_srcdir)/config/ax_boost_filesystem.m4 \
	$(top_srcdir)/config/ax_boost_program_options.m4 \
	$(top_srcdir)/config/ax_boost_regex.m4 \
	$(top_srcdir)/config/ax_boost_system.m4 \
	$(top_srcdir)/config/ax_boost_thread.m4 \
	$(top_srcdir)/config/ax_boost_wave.m4 \
	$(top_srcdir)/config/ax_lib_mysql.m4 \
	$(top_srcdir)/config/ax_lib_sqlite3.m4 \
	$(top_srcdir)/config/ax_with_prog.m4 \
	$(top_srcdir)/config/choose-backend-compiler.m4 \
	$(top_srcdir)/config/compiler-defs.m4 \
	$(top_srcdir)/config/determinte-os.m4 \
	$(top_srcdir)/config/enable-rosehpct.m4 \
	$(top_srcdir)/config/generate-backend-compiler-specific-headers.m4 \
	$(top_srcdir)/config/libxml.m4 \
	$(top_srcdir)/config/mdl_have_opengl.m4 \
	$(top_srcdir)/config/qrose_indigo_1.m4 \
	$(top_srcdir)/config/qrose_indigo_1_windows.m4 \
	$(top_srcdir)/config/support-GraphViz.m4 \
	$(top_srcdir)/config/support-IntelPin.m4 \
	$(top_srcdir)/config/support-backstroke.m4 \
	$(top_srcdir)/config/support-bddbddb.m4 \
	$(top_srcdir)/config/support-doxygen.m4 \
	$(top_srcdir)/config/support-dwarf.m4 \
	$(top_srcdir)/config/support-edg-debugging.m4 \
	$(top_srcdir)/config/support-gcc-omp.m4 \
	$(top_srcdir)/config/support-gomp-omp.m4 \
	$(top_srcdir)/config/support-haskell.m4 \
	$(top_srcdir)/config/support-ida.m4 \
	$(top_srcdir)/config/support-insure.m4 \
	$(top_srcdir)/config/support-java.m4 \
	$(top_srcdir)/config/support-libffi.m4 \
	$(top_srcdir)/config/support-llvm.m4 \
	$(top_srcdir)/config/support-maple.m4 \
	$(top_srcdir)/config/support-omp.m4 \
	$(top_srcdir)/config/support-php.m4 \
	$(top_srcdir)/config/support-purify.m4 \
	$(top_srcdir)/config/support-python.m4 \
	$(top_srcdir)/config/support-rose.m4 \
	$(top_srcdir)/config/support-rted.m4 \
	$(top_srcdir)/config/support-sat.m4 \
	$(top_srcdir)/config/support-ssl.m4 \
	$(top_srcdir)/config/support-visualization.m4 \
	$(top_srcdir)/config/support-windows.m4 \
	$(top_srcdir)/config/support-yices.m4 \
	$(top_srcdir)/config/swig_enable_cxx.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/config/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/rose_config.h
CONFIG_CLEAN_FILES = exampleMakefile
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
am__EXEEXT_1 = abstractHandle1$(EXEEXT) abstractHandle2$(EXEEXT) \
	accumulatorAttributeTraversal$(EXEEXT) \
	addAssignmentStmt$(EXEEXT) addComments$(EXEEXT) \
	addArbitraryTextForUnparser$(EXEEXT) addExpression$(EXEEXT) \
	addFunctionCalls$(EXEEXT) addFunctionDeclaration$(EXEEXT) \
	addFunctionDeclaration2$(EXEEXT) \
	addFunctionDeclaration3$(EXEEXT) addStruct$(EXEEXT) \
	addVariableDeclaration$(EXEEXT) \
	addVariableDeclaration2$(EXEEXT) AST_PDF_Generator$(EXEEXT) \
	astFileIO_GenerateBinaryFile$(EXEEXT) \
	astFileIO_ReadMultipleASTs$(EXEEXT) ASTGraphGenerator$(EXEEXT) \
	ASTGraphGeneratorCustomized$(EXEEXT) bin_example$(EXEEXT) \
	binaryAnalysisExample$(EXEEXT) \
	binaryAnalysis_symbolTable$(EXEEXT) binaryFileRead$(EXEEXT) \
	binaryFileWrite$(EXEEXT) sb_callgraphAnalysis$(EXEEXT) \
	buildCFG$(EXEEXT) changeFunction$(EXEEXT) \
	charmSupport$(EXEEXT) classHierarchyGraph$(EXEEXT) \
	classicObjectOrientedVisitorPatternMemoryPoolTraversal$(EXEEXT) \
	classicObjectOrientedVisitorPatternTraversal$(EXEEXT) \
	codeCoverage$(EXEEXT) codeGenerationFormatControl$(EXEEXT) \
	collectComments$(EXEEXT) collectDefineDirectives$(EXEEXT) \
	combinedTraversals$(EXEEXT) commandlineProcessing$(EXEEXT) \
	constantFoldingTransformation$(EXEEXT) \
	constantUnFoldingTransformation$(EXEEXT) \
	customGraphGeneration$(EXEEXT) \
	customGraphGenerationWithColors$(EXEEXT) \
	customGraphGenerationWithFiltering$(EXEEXT) \
	dataBaseUsage$(EXEEXT) dataFlowGraph$(EXEEXT) \
	debuggingIRnodeToString$(EXEEXT) \
	debuggingSourceCodePositionInformation$(EXEEXT) \
	dwarfAnalysis$(EXEEXT) \
	dwarfInstructionAddressToSourceLineAnalysis$(EXEEXT) \
	findVariableDeclarations$(EXEEXT) \
	generatingUniqueNamesFromDeclaration$(EXEEXT) \
	graphGenerationOfSubtree$(EXEEXT) graphTraversal$(EXEEXT) \
	identityTranslator$(EXEEXT) \
	inheritedAndSynthesizedAttributeTraversal$(EXEEXT) \
	inheritedAttributeTraversal$(EXEEXT) \
	inlineTransformations$(EXEEXT) instrumentationExample$(EXEEXT) \
	instrumentEndOfFunction$(EXEEXT) interveneAtVariables$(EXEEXT) \
	lineReplacement$(EXEEXT) loopNestingInfoProcessing$(EXEEXT) \
	loopOptimization$(EXEEXT) loopProcessor$(EXEEXT) \
	loopRecognition$(EXEEXT) nestedQueryExample$(EXEEXT) \
	nestedTraversal$(EXEEXT) partialRedundancyElimination$(EXEEXT) \
	persistantAttributes$(EXEEXT) prePostTraversal$(EXEEXT) \
	queryLibraryExample$(EXEEXT) reductionRecognition$(EXEEXT) \
	resolveOverloadedFunction$(EXEEXT) \
	seedBugsExample_arrayIndexing$(EXEEXT) \
	scopeInformation$(EXEEXT) selectedFileTranslation$(EXEEXT) \
	sprintf_to_snprintf$(EXEEXT) switchWithoutDefault$(EXEEXT) \
	symbolTableHandling$(EXEEXT) \
	synthesizedAttributeTraversal$(EXEEXT) \
	tauInstrumenter$(EXEEXT) templateParameter$(EXEEXT) \
	traversalShortCircuit$(EXEEXT) traverseIRnodeTypes$(EXEEXT) \
	typeInfoFromFunctionParameters$(EXEEXT) \
	typeTransformation$(EXEEXT) \
	virtualFunctionIdentification$(EXEEXT) \
	visitorMemoryPoolTraversal$(EXEEXT) visitorTraversal$(EXEEXT) \
	volatileTypeModifier$(EXEEXT) wholeASTGraphGenerator$(EXEEXT) \
	wholeGraphAST$(EXEEXT) \
	wholeGraphFilterOnPersistantAttributes$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_ASTGraphGenerator_OBJECTS = ASTGraphGenerator.$(OBJEXT)
ASTGraphGenerator_OBJECTS = $(am_ASTGraphGenerator_OBJECTS)
ASTGraphGenerator_LDADD = $(LDADD)
am__DEPENDENCIES_1 =
@ROSE_USE_SQLITE_DATABASE_TRUE@am__DEPENDENCIES_2 =  \
@ROSE_USE_SQLITE_DATABASE_TRUE@	$(am__DEPENDENCIES_1)
@HAVE_LIBYICES_TRUE@am__DEPENDENCIES_3 =  \
@HAVE_LIBYICES_TRUE@	@YICES_PREFIX@/lib/libyices.a
@ROSE_USE_PHP_TRUE@am__DEPENDENCIES_4 = $(php_path)/lib/libphc.so \
@ROSE_USE_PHP_TRUE@	$(php_path)/lib/libphp5.so \
@ROSE_USE_PHP_TRUE@	$(am__DEPENDENCIES_1)
@ROSE_USE_QT_TRUE@am__DEPENDENCIES_5 = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la
@ROSE_USE_QT_TRUE@am__DEPENDENCIES_6 = $(am__DEPENDENCIES_1)
am__DEPENDENCIES_7 = $(top_builddir)/src/librose.la \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_3) $(am__DEPENDENCIES_4) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_5) \
	$(am__DEPENDENCIES_6) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
am__DEPENDENCIES_8 = $(am__DEPENDENCIES_7)
ASTGraphGenerator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_ASTGraphGeneratorCustomized_OBJECTS =  \
	ASTGraphGeneratorCustomized.$(OBJEXT)
ASTGraphGeneratorCustomized_OBJECTS =  \
	$(am_ASTGraphGeneratorCustomized_OBJECTS)
ASTGraphGeneratorCustomized_LDADD = $(LDADD)
ASTGraphGeneratorCustomized_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_AST_PDF_Generator_OBJECTS = AST_PDF_Generator.$(OBJEXT)
AST_PDF_Generator_OBJECTS = $(am_AST_PDF_Generator_OBJECTS)
AST_PDF_Generator_LDADD = $(LDADD)
AST_PDF_Generator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_abstractHandle1_OBJECTS = abstractHandle1.$(OBJEXT)
abstractHandle1_OBJECTS = $(am_abstractHandle1_OBJECTS)
abstractHandle1_LDADD = $(LDADD)
abstractHandle1_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_abstractHandle2_OBJECTS = abstractHandle2.$(OBJEXT)
abstractHandle2_OBJECTS = $(am_abstractHandle2_OBJECTS)
abstractHandle2_LDADD = $(LDADD)
abstractHandle2_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_accumulatorAttributeTraversal_OBJECTS =  \
	accumulatorAttributeTraversal.$(OBJEXT)
accumulatorAttributeTraversal_OBJECTS =  \
	$(am_accumulatorAttributeTraversal_OBJECTS)
accumulatorAttributeTraversal_LDADD = $(LDADD)
accumulatorAttributeTraversal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addArbitraryTextForUnparser_OBJECTS =  \
	addArbitraryTextForUnparser.$(OBJEXT)
addArbitraryTextForUnparser_OBJECTS =  \
	$(am_addArbitraryTextForUnparser_OBJECTS)
addArbitraryTextForUnparser_LDADD = $(LDADD)
addArbitraryTextForUnparser_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addAssignmentStmt_OBJECTS = addAssignmentStmt.$(OBJEXT)
addAssignmentStmt_OBJECTS = $(am_addAssignmentStmt_OBJECTS)
addAssignmentStmt_LDADD = $(LDADD)
addAssignmentStmt_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addComments_OBJECTS = addComments.$(OBJEXT)
addComments_OBJECTS = $(am_addComments_OBJECTS)
addComments_LDADD = $(LDADD)
addComments_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_addExpression_OBJECTS = addExpression.$(OBJEXT)
addExpression_OBJECTS = $(am_addExpression_OBJECTS)
addExpression_LDADD = $(LDADD)
addExpression_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addFunctionCalls_OBJECTS = addFunctionCalls.$(OBJEXT)
addFunctionCalls_OBJECTS = $(am_addFunctionCalls_OBJECTS)
addFunctionCalls_LDADD = $(LDADD)
addFunctionCalls_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addFunctionDeclaration_OBJECTS = addFunctionDeclaration.$(OBJEXT)
addFunctionDeclaration_OBJECTS = $(am_addFunctionDeclaration_OBJECTS)
addFunctionDeclaration_LDADD = $(LDADD)
addFunctionDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addFunctionDeclaration2_OBJECTS =  \
	addFunctionDeclaration2.$(OBJEXT)
addFunctionDeclaration2_OBJECTS =  \
	$(am_addFunctionDeclaration2_OBJECTS)
addFunctionDeclaration2_LDADD = $(LDADD)
addFunctionDeclaration2_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addFunctionDeclaration3_OBJECTS =  \
	addFunctionDeclaration3.$(OBJEXT)
addFunctionDeclaration3_OBJECTS =  \
	$(am_addFunctionDeclaration3_OBJECTS)
addFunctionDeclaration3_LDADD = $(LDADD)
addFunctionDeclaration3_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addStruct_OBJECTS = addStruct.$(OBJEXT)
addStruct_OBJECTS = $(am_addStruct_OBJECTS)
addStruct_LDADD = $(LDADD)
addStruct_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_addVariableDeclaration_OBJECTS = addVariableDeclaration.$(OBJEXT)
addVariableDeclaration_OBJECTS = $(am_addVariableDeclaration_OBJECTS)
addVariableDeclaration_LDADD = $(LDADD)
addVariableDeclaration_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_addVariableDeclaration2_OBJECTS =  \
	addVariableDeclaration2.$(OBJEXT)
addVariableDeclaration2_OBJECTS =  \
	$(am_addVariableDeclaration2_OBJECTS)
addVariableDeclaration2_LDADD = $(LDADD)
addVariableDeclaration2_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_astFileIO_GenerateBinaryFile_OBJECTS =  \
	astFileIO_GenerateBinaryFile.$(OBJEXT)
astFileIO_GenerateBinaryFile_OBJECTS =  \
	$(am_astFileIO_GenerateBinaryFile_OBJECTS)
astFileIO_GenerateBinaryFile_LDADD = $(LDADD)
astFileIO_GenerateBinaryFile_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_astFileIO_ReadMultipleASTs_OBJECTS =  \
	astFileIO_ReadMultipleASTs.$(OBJEXT)
astFileIO_ReadMultipleASTs_OBJECTS =  \
	$(am_astFileIO_ReadMultipleASTs_OBJECTS)
astFileIO_ReadMultipleASTs_LDADD = $(LDADD)
astFileIO_ReadMultipleASTs_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_bin_example_OBJECTS = bin_example.$(OBJEXT)
bin_example_OBJECTS = $(am_bin_example_OBJECTS)
bin_example_LDADD = $(LDADD)
bin_example_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_binaryAnalysisExample_OBJECTS = binaryAnalysisExample.$(OBJEXT)
binaryAnalysisExample_OBJECTS = $(am_binaryAnalysisExample_OBJECTS)
binaryAnalysisExample_LDADD = $(LDADD)
binaryAnalysisExample_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_binaryAnalysis_symbolTable_OBJECTS =  \
	binaryAnalysis_symbolTable.$(OBJEXT)
binaryAnalysis_symbolTable_OBJECTS =  \
	$(am_binaryAnalysis_symbolTable_OBJECTS)
binaryAnalysis_symbolTable_LDADD = $(LDADD)
binaryAnalysis_symbolTable_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_binaryFileRead_OBJECTS = binaryFileRead.$(OBJEXT)
binaryFileRead_OBJECTS = $(am_binaryFileRead_OBJECTS)
binaryFileRead_LDADD = $(LDADD)
binaryFileRead_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_binaryFileWrite_OBJECTS = binaryFileWrite.$(OBJEXT)
binaryFileWrite_OBJECTS = $(am_binaryFileWrite_OBJECTS)
binaryFileWrite_LDADD = $(LDADD)
binaryFileWrite_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_buildCFG_OBJECTS = buildCFG.$(OBJEXT)
buildCFG_OBJECTS = $(am_buildCFG_OBJECTS)
buildCFG_LDADD = $(LDADD)
buildCFG_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_buildCallGraph_OBJECTS = buildCallGraph.$(OBJEXT)
buildCallGraph_OBJECTS = $(am_buildCallGraph_OBJECTS)
buildCallGraph_LDADD = $(LDADD)
buildCallGraph_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_changeFunction_OBJECTS = changeFunction.$(OBJEXT)
changeFunction_OBJECTS = $(am_changeFunction_OBJECTS)
changeFunction_LDADD = $(LDADD)
changeFunction_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_charmSupport_OBJECTS = CharmSupport.$(OBJEXT)
charmSupport_OBJECTS = $(am_charmSupport_OBJECTS)
charmSupport_LDADD = $(LDADD)
charmSupport_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_classHierarchyGraph_OBJECTS = classHierarchyGraph.$(OBJEXT)
classHierarchyGraph_OBJECTS = $(am_classHierarchyGraph_OBJECTS)
classHierarchyGraph_LDADD = $(LDADD)
classHierarchyGraph_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS = classicObjectOrientedVisitorPatternMemoryPoolTraversal.$(OBJEXT)
classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS = $(am_classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS)
classicObjectOrientedVisitorPatternMemoryPoolTraversal_LDADD =  \
	$(LDADD)
classicObjectOrientedVisitorPatternMemoryPoolTraversal_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_classicObjectOrientedVisitorPatternTraversal_OBJECTS =  \
	classicObjectOrientedVisitorPatternTraversal.$(OBJEXT)
classicObjectOrientedVisitorPatternTraversal_OBJECTS =  \
	$(am_classicObjectOrientedVisitorPatternTraversal_OBJECTS)
classicObjectOrientedVisitorPatternTraversal_LDADD = $(LDADD)
classicObjectOrientedVisitorPatternTraversal_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_codeCoverage_OBJECTS = codeCoverage.$(OBJEXT) \
	coverageCodeFromShmuel.$(OBJEXT)
codeCoverage_OBJECTS = $(am_codeCoverage_OBJECTS)
codeCoverage_LDADD = $(LDADD)
codeCoverage_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_codeGenerationFormatControl_OBJECTS =  \
	codeGenerationFormatControl.$(OBJEXT)
codeGenerationFormatControl_OBJECTS =  \
	$(am_codeGenerationFormatControl_OBJECTS)
codeGenerationFormatControl_LDADD = $(LDADD)
codeGenerationFormatControl_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_collectComments_OBJECTS = collectComments.$(OBJEXT)
collectComments_OBJECTS = $(am_collectComments_OBJECTS)
collectComments_LDADD = $(LDADD)
collectComments_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_collectDefineDirectives_OBJECTS =  \
	collectDefineDirectives.$(OBJEXT)
collectDefineDirectives_OBJECTS =  \
	$(am_collectDefineDirectives_OBJECTS)
collectDefineDirectives_LDADD = $(LDADD)
collectDefineDirectives_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_combinedTraversals_OBJECTS = combinedTraversals.$(OBJEXT)
combinedTraversals_OBJECTS = $(am_combinedTraversals_OBJECTS)
combinedTraversals_LDADD = $(LDADD)
combinedTraversals_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_commandlineProcessing_OBJECTS = commandlineProcessing.$(OBJEXT)
commandlineProcessing_OBJECTS = $(am_commandlineProcessing_OBJECTS)
commandlineProcessing_LDADD = $(LDADD)
commandlineProcessing_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_constantFoldingTransformation_OBJECTS =  \
	constantFoldingTransformation.$(OBJEXT)
constantFoldingTransformation_OBJECTS =  \
	$(am_constantFoldingTransformation_OBJECTS)
constantFoldingTransformation_LDADD = $(LDADD)
constantFoldingTransformation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_constantUnFoldingTransformation_OBJECTS =  \
	constantUnFoldingTransformation.$(OBJEXT)
constantUnFoldingTransformation_OBJECTS =  \
	$(am_constantUnFoldingTransformation_OBJECTS)
constantUnFoldingTransformation_LDADD = $(LDADD)
constantUnFoldingTransformation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_customGraphGeneration_OBJECTS = customGraphGeneration.$(OBJEXT)
customGraphGeneration_OBJECTS = $(am_customGraphGeneration_OBJECTS)
customGraphGeneration_LDADD = $(LDADD)
customGraphGeneration_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_customGraphGenerationWithColors_OBJECTS =  \
	customGraphGenerationWithColors.$(OBJEXT)
customGraphGenerationWithColors_OBJECTS =  \
	$(am_customGraphGenerationWithColors_OBJECTS)
customGraphGenerationWithColors_LDADD = $(LDADD)
customGraphGenerationWithColors_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_customGraphGenerationWithFiltering_OBJECTS =  \
	customGraphGenerationWithFiltering.$(OBJEXT)
customGraphGenerationWithFiltering_OBJECTS =  \
	$(am_customGraphGenerationWithFiltering_OBJECTS)
customGraphGenerationWithFiltering_LDADD = $(LDADD)
customGraphGenerationWithFiltering_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_dataBaseUsage_OBJECTS = dataBaseUsage.$(OBJEXT)
dataBaseUsage_OBJECTS = $(am_dataBaseUsage_OBJECTS)
dataBaseUsage_LDADD = $(LDADD)
dataBaseUsage_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_dataFlowGraph_OBJECTS = dataFlowGraph.$(OBJEXT)
dataFlowGraph_OBJECTS = $(am_dataFlowGraph_OBJECTS)
dataFlowGraph_LDADD = $(LDADD)
dataFlowGraph_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_debuggingIRnodeToString_OBJECTS =  \
	debuggingIRnodeToString.$(OBJEXT)
debuggingIRnodeToString_OBJECTS =  \
	$(am_debuggingIRnodeToString_OBJECTS)
debuggingIRnodeToString_LDADD = $(LDADD)
debuggingIRnodeToString_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_debuggingSourceCodePositionInformation_OBJECTS =  \
	debuggingSourceCodePositionInformation.$(OBJEXT)
debuggingSourceCodePositionInformation_OBJECTS =  \
	$(am_debuggingSourceCodePositionInformation_OBJECTS)
debuggingSourceCodePositionInformation_LDADD = $(LDADD)
debuggingSourceCodePositionInformation_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_defuseAnalysis_OBJECTS = defuseAnalysis.$(OBJEXT)
defuseAnalysis_OBJECTS = $(am_defuseAnalysis_OBJECTS)
defuseAnalysis_LDADD = $(LDADD)
defuseAnalysis_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_dwarfAnalysis_OBJECTS = dwarfAnalysis.$(OBJEXT)
dwarfAnalysis_OBJECTS = $(am_dwarfAnalysis_OBJECTS)
dwarfAnalysis_LDADD = $(LDADD)
dwarfAnalysis_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_dwarfInstructionAddressToSourceLineAnalysis_OBJECTS =  \
	dwarfInstructionAddressToSourceLineAnalysis.$(OBJEXT)
dwarfInstructionAddressToSourceLineAnalysis_OBJECTS =  \
	$(am_dwarfInstructionAddressToSourceLineAnalysis_OBJECTS)
dwarfInstructionAddressToSourceLineAnalysis_LDADD = $(LDADD)
dwarfInstructionAddressToSourceLineAnalysis_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_findVariableDeclarations_OBJECTS =  \
	findVariableDeclarations.$(OBJEXT)
findVariableDeclarations_OBJECTS =  \
	$(am_findVariableDeclarations_OBJECTS)
findVariableDeclarations_LDADD = $(LDADD)
findVariableDeclarations_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_generatingUniqueNamesFromDeclaration_OBJECTS =  \
	generatingUniqueNamesFromDeclaration.$(OBJEXT)
generatingUniqueNamesFromDeclaration_OBJECTS =  \
	$(am_generatingUniqueNamesFromDeclaration_OBJECTS)
generatingUniqueNamesFromDeclaration_LDADD = $(LDADD)
generatingUniqueNamesFromDeclaration_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_graphGenerationOfSubtree_OBJECTS =  \
	graphGenerationOfSubtree.$(OBJEXT)
graphGenerationOfSubtree_OBJECTS =  \
	$(am_graphGenerationOfSubtree_OBJECTS)
graphGenerationOfSubtree_LDADD = $(LDADD)
graphGenerationOfSubtree_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_graphTraversal_OBJECTS = graphTraversal.$(OBJEXT)
graphTraversal_OBJECTS = $(am_graphTraversal_OBJECTS)
graphTraversal_LDADD = $(LDADD)
graphTraversal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_identityTranslator_OBJECTS = identityTranslator.$(OBJEXT)
identityTranslator_OBJECTS = $(am_identityTranslator_OBJECTS)
identityTranslator_LDADD = $(LDADD)
identityTranslator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_inheritedAndSynthesizedAttributeTraversal_OBJECTS =  \
	inheritedAndSynthesizedAttributeTraversal.$(OBJEXT)
inheritedAndSynthesizedAttributeTraversal_OBJECTS =  \
	$(am_inheritedAndSynthesizedAttributeTraversal_OBJECTS)
inheritedAndSynthesizedAttributeTraversal_LDADD = $(LDADD)
inheritedAndSynthesizedAttributeTraversal_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_inheritedAttributeTraversal_OBJECTS =  \
	inheritedAttributeTraversal.$(OBJEXT)
inheritedAttributeTraversal_OBJECTS =  \
	$(am_inheritedAttributeTraversal_OBJECTS)
inheritedAttributeTraversal_LDADD = $(LDADD)
inheritedAttributeTraversal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_inlineTransformations_OBJECTS = inlineTransformations.$(OBJEXT)
inlineTransformations_OBJECTS = $(am_inlineTransformations_OBJECTS)
inlineTransformations_LDADD = $(LDADD)
inlineTransformations_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_instrumentEndOfFunction_OBJECTS =  \
	instrumentEndOfFunction.$(OBJEXT)
instrumentEndOfFunction_OBJECTS =  \
	$(am_instrumentEndOfFunction_OBJECTS)
instrumentEndOfFunction_LDADD = $(LDADD)
instrumentEndOfFunction_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_instrumentationExample_OBJECTS = instrumentationExample.$(OBJEXT)
instrumentationExample_OBJECTS = $(am_instrumentationExample_OBJECTS)
instrumentationExample_LDADD = $(LDADD)
instrumentationExample_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_interproceduralCFG_OBJECTS = interproceduralCFG.$(OBJEXT)
interproceduralCFG_OBJECTS = $(am_interproceduralCFG_OBJECTS)
interproceduralCFG_LDADD = $(LDADD)
interproceduralCFG_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_interveneAtVariables_OBJECTS = interveneAtVariables.$(OBJEXT)
interveneAtVariables_OBJECTS = $(am_interveneAtVariables_OBJECTS)
interveneAtVariables_LDADD = $(LDADD)
interveneAtVariables_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_lineReplacement_OBJECTS = lineReplacement.$(OBJEXT)
lineReplacement_OBJECTS = $(am_lineReplacement_OBJECTS)
lineReplacement_LDADD = $(LDADD)
lineReplacement_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_livenessAnalysis_OBJECTS = livenessAnalysis.$(OBJEXT)
livenessAnalysis_OBJECTS = $(am_livenessAnalysis_OBJECTS)
livenessAnalysis_LDADD = $(LDADD)
livenessAnalysis_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_loopNestingInfoProcessing_OBJECTS =  \
	loopNestingInfoProcessing.$(OBJEXT)
loopNestingInfoProcessing_OBJECTS =  \
	$(am_loopNestingInfoProcessing_OBJECTS)
loopNestingInfoProcessing_LDADD = $(LDADD)
loopNestingInfoProcessing_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_loopOptimization_OBJECTS = loopOptimization.$(OBJEXT)
loopOptimization_OBJECTS = $(am_loopOptimization_OBJECTS)
loopOptimization_LDADD = $(LDADD)
loopOptimization_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_loopProcessor_OBJECTS = LoopProcessor.$(OBJEXT)
loopProcessor_OBJECTS = $(am_loopProcessor_OBJECTS)
loopProcessor_LDADD = $(LDADD)
loopProcessor_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_loopRecognition_OBJECTS = loopRecognition.$(OBJEXT)
loopRecognition_OBJECTS = $(am_loopRecognition_OBJECTS)
loopRecognition_LDADD = $(LDADD)
loopRecognition_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_nestedQueryExample_OBJECTS = nestedQueryExample.$(OBJEXT)
nestedQueryExample_OBJECTS = $(am_nestedQueryExample_OBJECTS)
nestedQueryExample_LDADD = $(LDADD)
nestedQueryExample_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_nestedTraversal_OBJECTS = nestedTraversal.$(OBJEXT)
nestedTraversal_OBJECTS = $(am_nestedTraversal_OBJECTS)
nestedTraversal_LDADD = $(LDADD)
nestedTraversal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_partialRedundancyElimination_OBJECTS =  \
	partialRedundancyElimination.$(OBJEXT)
partialRedundancyElimination_OBJECTS =  \
	$(am_partialRedundancyElimination_OBJECTS)
partialRedundancyElimination_LDADD = $(LDADD)
partialRedundancyElimination_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_persistantAttributes_OBJECTS = persistantAttributes.$(OBJEXT)
persistantAttributes_OBJECTS = $(am_persistantAttributes_OBJECTS)
persistantAttributes_LDADD = $(LDADD)
persistantAttributes_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_prePostTraversal_OBJECTS = prePostTraversal.$(OBJEXT)
prePostTraversal_OBJECTS = $(am_prePostTraversal_OBJECTS)
prePostTraversal_LDADD = $(LDADD)
prePostTraversal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_queryLibraryExample_OBJECTS = queryLibraryExample.$(OBJEXT)
queryLibraryExample_OBJECTS = $(am_queryLibraryExample_OBJECTS)
queryLibraryExample_LDADD = $(LDADD)
queryLibraryExample_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_reductionRecognition_OBJECTS = reductionRecognition.$(OBJEXT)
reductionRecognition_OBJECTS = $(am_reductionRecognition_OBJECTS)
reductionRecognition_LDADD = $(LDADD)
reductionRecognition_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_resolveOverloadedFunction_OBJECTS =  \
	resolveOverloadedFunction.$(OBJEXT)
resolveOverloadedFunction_OBJECTS =  \
	$(am_resolveOverloadedFunction_OBJECTS)
resolveOverloadedFunction_LDADD = $(LDADD)
resolveOverloadedFunction_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_sb_callgraphAnalysis_OBJECTS =  \
	callGraphSourceBinaryExample.$(OBJEXT)
sb_callgraphAnalysis_OBJECTS = $(am_sb_callgraphAnalysis_OBJECTS)
sb_callgraphAnalysis_LDADD = $(LDADD)
sb_callgraphAnalysis_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_scopeInformation_OBJECTS = scopeInformation.$(OBJEXT)
scopeInformation_OBJECTS = $(am_scopeInformation_OBJECTS)
scopeInformation_LDADD = $(LDADD)
scopeInformation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_seedBugsExample_arrayIndexing_OBJECTS =  \
	seedBugsExample_arrayIndexing.$(OBJEXT)
seedBugsExample_arrayIndexing_OBJECTS =  \
	$(am_seedBugsExample_arrayIndexing_OBJECTS)
seedBugsExample_arrayIndexing_LDADD = $(LDADD)
seedBugsExample_arrayIndexing_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_selectedFileTranslation_OBJECTS =  \
	selectedFileTranslation.$(OBJEXT)
selectedFileTranslation_OBJECTS =  \
	$(am_selectedFileTranslation_OBJECTS)
selectedFileTranslation_LDADD = $(LDADD)
selectedFileTranslation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am__sharedMemoryTraversals_SOURCES_DIST = sharedMemoryTraversals.C
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@am_sharedMemoryTraversals_OBJECTS = sharedMemoryTraversals.$(OBJEXT)
sharedMemoryTraversals_OBJECTS = $(am_sharedMemoryTraversals_OBJECTS)
sharedMemoryTraversals_LDADD = $(LDADD)
sharedMemoryTraversals_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_sprintf_to_snprintf_OBJECTS = sprintf_to_snprintf.$(OBJEXT)
sprintf_to_snprintf_OBJECTS = $(am_sprintf_to_snprintf_OBJECTS)
sprintf_to_snprintf_LDADD = $(LDADD)
sprintf_to_snprintf_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_switchWithoutDefault_OBJECTS = switchWithoutDefault.$(OBJEXT)
switchWithoutDefault_OBJECTS = $(am_switchWithoutDefault_OBJECTS)
switchWithoutDefault_LDADD = $(LDADD)
switchWithoutDefault_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_symbolTableHandling_OBJECTS = symbolTableHandling.$(OBJEXT)
symbolTableHandling_OBJECTS = $(am_symbolTableHandling_OBJECTS)
symbolTableHandling_LDADD = $(LDADD)
symbolTableHandling_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_synthesizedAttributeTraversal_OBJECTS =  \
	synthesizedAttributeTraversal.$(OBJEXT)
synthesizedAttributeTraversal_OBJECTS =  \
	$(am_synthesizedAttributeTraversal_OBJECTS)
synthesizedAttributeTraversal_LDADD = $(LDADD)
synthesizedAttributeTraversal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_tauInstrumenter_OBJECTS = tauInstrumenter.$(OBJEXT)
tauInstrumenter_OBJECTS = $(am_tauInstrumenter_OBJECTS)
tauInstrumenter_LDADD = $(LDADD)
tauInstrumenter_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_templateParameter_OBJECTS = templateParameter.$(OBJEXT)
templateParameter_OBJECTS = $(am_templateParameter_OBJECTS)
templateParameter_LDADD = $(LDADD)
templateParameter_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_traversalShortCircuit_OBJECTS = traversalShortCircuit.$(OBJEXT)
traversalShortCircuit_OBJECTS = $(am_traversalShortCircuit_OBJECTS)
traversalShortCircuit_LDADD = $(LDADD)
traversalShortCircuit_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_traverseIRnodeTypes_OBJECTS = traverseIRnodeTypes.$(OBJEXT)
traverseIRnodeTypes_OBJECTS = $(am_traverseIRnodeTypes_OBJECTS)
traverseIRnodeTypes_LDADD = $(LDADD)
traverseIRnodeTypes_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_typeInfoFromFunctionParameters_OBJECTS =  \
	typeInfoFromFunctionParameters.$(OBJEXT)
typeInfoFromFunctionParameters_OBJECTS =  \
	$(am_typeInfoFromFunctionParameters_OBJECTS)
typeInfoFromFunctionParameters_LDADD = $(LDADD)
typeInfoFromFunctionParameters_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_typeTransformation_OBJECTS = typeTransformation.$(OBJEXT)
typeTransformation_OBJECTS = $(am_typeTransformation_OBJECTS)
typeTransformation_LDADD = $(LDADD)
typeTransformation_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_virtualCFG_OBJECTS = virtualCFG.$(OBJEXT)
virtualCFG_OBJECTS = $(am_virtualCFG_OBJECTS)
virtualCFG_LDADD = $(LDADD)
virtualCFG_DEPENDENCIES = $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
am_virtualFunctionIdentification_OBJECTS =  \
	virtualFunctionIdentification.$(OBJEXT)
virtualFunctionIdentification_OBJECTS =  \
	$(am_virtualFunctionIdentification_OBJECTS)
virtualFunctionIdentification_LDADD = $(LDADD)
virtualFunctionIdentification_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_visitorMemoryPoolTraversal_OBJECTS =  \
	visitorMemoryPoolTraversal.$(OBJEXT)
visitorMemoryPoolTraversal_OBJECTS =  \
	$(am_visitorMemoryPoolTraversal_OBJECTS)
visitorMemoryPoolTraversal_LDADD = $(LDADD)
visitorMemoryPoolTraversal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_visitorTraversal_OBJECTS = visitorTraversal.$(OBJEXT)
visitorTraversal_OBJECTS = $(am_visitorTraversal_OBJECTS)
visitorTraversal_LDADD = $(LDADD)
visitorTraversal_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_volatileTypeModifier_OBJECTS = volatileTypeModifier.$(OBJEXT)
volatileTypeModifier_OBJECTS = $(am_volatileTypeModifier_OBJECTS)
volatileTypeModifier_LDADD = $(LDADD)
volatileTypeModifier_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_wholeASTGraphGenerator_OBJECTS = wholeASTGraphGenerator.$(OBJEXT)
wholeASTGraphGenerator_OBJECTS = $(am_wholeASTGraphGenerator_OBJECTS)
wholeASTGraphGenerator_LDADD = $(LDADD)
wholeASTGraphGenerator_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_wholeGraphAST_OBJECTS = wholeGraphAST.$(OBJEXT)
wholeGraphAST_OBJECTS = $(am_wholeGraphAST_OBJECTS)
wholeGraphAST_LDADD = $(LDADD)
wholeGraphAST_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_8)
am_wholeGraphFilterOnPersistantAttributes_OBJECTS =  \
	wholeGraphFilterOnPersistantAttributes.$(OBJEXT)
wholeGraphFilterOnPersistantAttributes_OBJECTS =  \
	$(am_wholeGraphFilterOnPersistantAttributes_OBJECTS)
wholeGraphFilterOnPersistantAttributes_LDADD = $(LDADD)
wholeGraphFilterOnPersistantAttributes_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_8)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp =
am__depfiles_maybe =
CXXCOMPILE = @echo "  COMPILE $@"; $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = @echo "  COMPILE $@"; $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLINK = @echo "  LINK    $@"; $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
COMPILE = @echo "  COMPILE $@"; $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = @echo "  COMPILE $@"; $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
LINK = @echo "  LINK    $@"; $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(ASTGraphGenerator_SOURCES) \
	$(ASTGraphGeneratorCustomized_SOURCES) \
	$(AST_PDF_Generator_SOURCES) $(abstractHandle1_SOURCES) \
	$(abstractHandle2_SOURCES) \
	$(accumulatorAttributeTraversal_SOURCES) \
	$(addArbitraryTextForUnparser_SOURCES) \
	$(addAssignmentStmt_SOURCES) $(addComments_SOURCES) \
	$(addExpression_SOURCES) $(addFunctionCalls_SOURCES) \
	$(addFunctionDeclaration_SOURCES) \
	$(addFunctionDeclaration2_SOURCES) \
	$(addFunctionDeclaration3_SOURCES) $(addStruct_SOURCES) \
	$(addVariableDeclaration_SOURCES) \
	$(addVariableDeclaration2_SOURCES) \
	$(astFileIO_GenerateBinaryFile_SOURCES) \
	$(astFileIO_ReadMultipleASTs_SOURCES) $(bin_example_SOURCES) \
	$(binaryAnalysisExample_SOURCES) \
	$(binaryAnalysis_symbolTable_SOURCES) \
	$(binaryFileRead_SOURCES) $(binaryFileWrite_SOURCES) \
	$(buildCFG_SOURCES) $(buildCallGraph_SOURCES) \
	$(changeFunction_SOURCES) $(charmSupport_SOURCES) \
	$(classHierarchyGraph_SOURCES) \
	$(classicObjectOrientedVisitorPatternMemoryPoolTraversal_SOURCES) \
	$(classicObjectOrientedVisitorPatternTraversal_SOURCES) \
	$(codeCoverage_SOURCES) $(codeGenerationFormatControl_SOURCES) \
	$(collectComments_SOURCES) $(collectDefineDirectives_SOURCES) \
	$(combinedTraversals_SOURCES) $(commandlineProcessing_SOURCES) \
	$(constantFoldingTransformation_SOURCES) \
	$(constantUnFoldingTransformation_SOURCES) \
	$(customGraphGeneration_SOURCES) \
	$(customGraphGenerationWithColors_SOURCES) \
	$(customGraphGenerationWithFiltering_SOURCES) \
	$(dataBaseUsage_SOURCES) $(dataFlowGraph_SOURCES) \
	$(debuggingIRnodeToString_SOURCES) \
	$(debuggingSourceCodePositionInformation_SOURCES) \
	$(defuseAnalysis_SOURCES) $(dwarfAnalysis_SOURCES) \
	$(dwarfInstructionAddressToSourceLineAnalysis_SOURCES) \
	$(findVariableDeclarations_SOURCES) \
	$(generatingUniqueNamesFromDeclaration_SOURCES) \
	$(graphGenerationOfSubtree_SOURCES) $(graphTraversal_SOURCES) \
	$(identityTranslator_SOURCES) \
	$(inheritedAndSynthesizedAttributeTraversal_SOURCES) \
	$(inheritedAttributeTraversal_SOURCES) \
	$(inlineTransformations_SOURCES) \
	$(instrumentEndOfFunction_SOURCES) \
	$(instrumentationExample_SOURCES) \
	$(interproceduralCFG_SOURCES) $(interveneAtVariables_SOURCES) \
	$(lineReplacement_SOURCES) $(livenessAnalysis_SOURCES) \
	$(loopNestingInfoProcessing_SOURCES) \
	$(loopOptimization_SOURCES) $(loopProcessor_SOURCES) \
	$(loopRecognition_SOURCES) $(nestedQueryExample_SOURCES) \
	$(nestedTraversal_SOURCES) \
	$(partialRedundancyElimination_SOURCES) \
	$(persistantAttributes_SOURCES) $(prePostTraversal_SOURCES) \
	$(queryLibraryExample_SOURCES) $(reductionRecognition_SOURCES) \
	$(resolveOverloadedFunction_SOURCES) \
	$(sb_callgraphAnalysis_SOURCES) $(scopeInformation_SOURCES) \
	$(seedBugsExample_arrayIndexing_SOURCES) \
	$(selectedFileTranslation_SOURCES) \
	$(sharedMemoryTraversals_SOURCES) \
	$(sprintf_to_snprintf_SOURCES) $(switchWithoutDefault_SOURCES) \
	$(symbolTableHandling_SOURCES) \
	$(synthesizedAttributeTraversal_SOURCES) \
	$(tauInstrumenter_SOURCES) $(templateParameter_SOURCES) \
	$(traversalShortCircuit_SOURCES) \
	$(traverseIRnodeTypes_SOURCES) \
	$(typeInfoFromFunctionParameters_SOURCES) \
	$(typeTransformation_SOURCES) $(virtualCFG_SOURCES) \
	$(virtualFunctionIdentification_SOURCES) \
	$(visitorMemoryPoolTraversal_SOURCES) \
	$(visitorTraversal_SOURCES) $(volatileTypeModifier_SOURCES) \
	$(wholeASTGraphGenerator_SOURCES) $(wholeGraphAST_SOURCES) \
	$(wholeGraphFilterOnPersistantAttributes_SOURCES)
DIST_SOURCES = $(ASTGraphGenerator_SOURCES) \
	$(ASTGraphGeneratorCustomized_SOURCES) \
	$(AST_PDF_Generator_SOURCES) $(abstractHandle1_SOURCES) \
	$(abstractHandle2_SOURCES) \
	$(accumulatorAttributeTraversal_SOURCES) \
	$(addArbitraryTextForUnparser_SOURCES) \
	$(addAssignmentStmt_SOURCES) $(addComments_SOURCES) \
	$(addExpression_SOURCES) $(addFunctionCalls_SOURCES) \
	$(addFunctionDeclaration_SOURCES) \
	$(addFunctionDeclaration2_SOURCES) \
	$(addFunctionDeclaration3_SOURCES) $(addStruct_SOURCES) \
	$(addVariableDeclaration_SOURCES) \
	$(addVariableDeclaration2_SOURCES) \
	$(astFileIO_GenerateBinaryFile_SOURCES) \
	$(astFileIO_ReadMultipleASTs_SOURCES) $(bin_example_SOURCES) \
	$(binaryAnalysisExample_SOURCES) \
	$(binaryAnalysis_symbolTable_SOURCES) \
	$(binaryFileRead_SOURCES) $(binaryFileWrite_SOURCES) \
	$(buildCFG_SOURCES) $(buildCallGraph_SOURCES) \
	$(changeFunction_SOURCES) $(charmSupport_SOURCES) \
	$(classHierarchyGraph_SOURCES) \
	$(classicObjectOrientedVisitorPatternMemoryPoolTraversal_SOURCES) \
	$(classicObjectOrientedVisitorPatternTraversal_SOURCES) \
	$(codeCoverage_SOURCES) $(codeGenerationFormatControl_SOURCES) \
	$(collectComments_SOURCES) $(collectDefineDirectives_SOURCES) \
	$(combinedTraversals_SOURCES) $(commandlineProcessing_SOURCES) \
	$(constantFoldingTransformation_SOURCES) \
	$(constantUnFoldingTransformation_SOURCES) \
	$(customGraphGeneration_SOURCES) \
	$(customGraphGenerationWithColors_SOURCES) \
	$(customGraphGenerationWithFiltering_SOURCES) \
	$(dataBaseUsage_SOURCES) $(dataFlowGraph_SOURCES) \
	$(debuggingIRnodeToString_SOURCES) \
	$(debuggingSourceCodePositionInformation_SOURCES) \
	$(defuseAnalysis_SOURCES) $(dwarfAnalysis_SOURCES) \
	$(dwarfInstructionAddressToSourceLineAnalysis_SOURCES) \
	$(findVariableDeclarations_SOURCES) \
	$(generatingUniqueNamesFromDeclaration_SOURCES) \
	$(graphGenerationOfSubtree_SOURCES) $(graphTraversal_SOURCES) \
	$(identityTranslator_SOURCES) \
	$(inheritedAndSynthesizedAttributeTraversal_SOURCES) \
	$(inheritedAttributeTraversal_SOURCES) \
	$(inlineTransformations_SOURCES) \
	$(instrumentEndOfFunction_SOURCES) \
	$(instrumentationExample_SOURCES) \
	$(interproceduralCFG_SOURCES) $(interveneAtVariables_SOURCES) \
	$(lineReplacement_SOURCES) $(livenessAnalysis_SOURCES) \
	$(loopNestingInfoProcessing_SOURCES) \
	$(loopOptimization_SOURCES) $(loopProcessor_SOURCES) \
	$(loopRecognition_SOURCES) $(nestedQueryExample_SOURCES) \
	$(nestedTraversal_SOURCES) \
	$(partialRedundancyElimination_SOURCES) \
	$(persistantAttributes_SOURCES) $(prePostTraversal_SOURCES) \
	$(queryLibraryExample_SOURCES) $(reductionRecognition_SOURCES) \
	$(resolveOverloadedFunction_SOURCES) \
	$(sb_callgraphAnalysis_SOURCES) $(scopeInformation_SOURCES) \
	$(seedBugsExample_arrayIndexing_SOURCES) \
	$(selectedFileTranslation_SOURCES) \
	$(am__sharedMemoryTraversals_SOURCES_DIST) \
	$(sprintf_to_snprintf_SOURCES) $(switchWithoutDefault_SOURCES) \
	$(symbolTableHandling_SOURCES) \
	$(synthesizedAttributeTraversal_SOURCES) \
	$(tauInstrumenter_SOURCES) $(templateParameter_SOURCES) \
	$(traversalShortCircuit_SOURCES) \
	$(traverseIRnodeTypes_SOURCES) \
	$(typeInfoFromFunctionParameters_SOURCES) \
	$(typeTransformation_SOURCES) $(virtualCFG_SOURCES) \
	$(virtualFunctionIdentification_SOURCES) \
	$(visitorMemoryPoolTraversal_SOURCES) \
	$(visitorTraversal_SOURCES) $(volatileTypeModifier_SOURCES) \
	$(wholeASTGraphGenerator_SOURCES) $(wholeGraphAST_SOURCES) \
	$(wholeGraphFilterOnPersistantAttributes_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AUX_LINKER = @AUX_LINKER@
AWK = @AWK@
AXXPXX_SPECIFIC_TESTS_FALSE = @AXXPXX_SPECIFIC_TESTS_FALSE@
AXXPXX_SPECIFIC_TESTS_TRUE = @AXXPXX_SPECIFIC_TESTS_TRUE@
Axx_INCLUDES = @Axx_INCLUDES@
Axx_LIBS = @Axx_LIBS@
BACKEND_COMPILER_VERSION_MAJOR_NUMBER = @BACKEND_COMPILER_VERSION_MAJOR_NUMBER@
BACKEND_COMPILER_VERSION_MINOR_NUMBER = @BACKEND_COMPILER_VERSION_MINOR_NUMBER@
BACKEND_COMPILER_VERSION_NAME = @BACKEND_COMPILER_VERSION_NAME@
BACKEND_COMPILER_VERSION_OK_FOR_ROSE_TESTING_FALSE = @BACKEND_COMPILER_VERSION_OK_FOR_ROSE_TESTING_FALSE@
BACKEND_COMPILER_VERSION_OK_FOR_ROSE_TESTING_TRUE = @BACKEND_COMPILER_VERSION_OK_FOR_ROSE_TESTING_TRUE@
BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER = @BACKEND_COMPILER_VERSION_PATCHLEVEL_NUMBER@
BACKSTROKE_ROSS_INCLUDE = @BACKSTROKE_ROSS_INCLUDE@
BACKSTROKE_SPEEDES_INCLUDE = @BACKSTROKE_SPEEDES_INCLUDE@
BINARY_EDG_TARBALL_ENABLED_FALSE = @BINARY_EDG_TARBALL_ENABLED_FALSE@
BINARY_EDG_TARBALL_ENABLED_TRUE = @BINARY_EDG_TARBALL_ENABLED_TRUE@
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@
BOOST_DATE_TIME_LIB = @BOOST_DATE_TIME_LIB@
BOOST_FILESYSTEM_LIB = @BOOST_FILESYSTEM_LIB@
BOOST_LDFLAGS = @BOOST_LDFLAGS@
BOOST_PROGRAM_OPTIONS_LIB = @BOOST_PROGRAM_OPTIONS_LIB@
BOOST_REGEX_LIB = @BOOST_REGEX_LIB@
BOOST_SYSTEM_LIB = @BOOST_SYSTEM_LIB@
BOOST_THREAD_LIB = @BOOST_THREAD_LIB@
BOOST_WAVE_LIB = @BOOST_WAVE_LIB@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CCLD = @CCLD@
CFLAGS = @CFLAGS@
CLASSPATH = @CLASSPATH@
CONVENIENCE_LTDL_FALSE = @CONVENIENCE_LTDL_FALSE@
CONVENIENCE_LTDL_TRUE = @CONVENIENCE_LTDL_TRUE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CXXLD = @CXXLD@
CXX_DEBUG = @CXX_DEBUG@
CXX_OPTIMIZE = @CXX_OPTIMIZE@
CXX_SHARED_LIB_UPDATE = @CXX_SHARED_LIB_UPDATE@
CXX_STATIC_LIB_UPDATE = @CXX_STATIC_LIB_UPDATE@
CXX_TEMPLATE_OBJECTS = @CXX_TEMPLATE_OBJECTS@
CXX_TEMPLATE_REPOSITORY_PATH = @CXX_TEMPLATE_REPOSITORY_PATH@
CXX_WARNINGS = @CXX_WARNINGS@
CYGPATH_W = @CYGPATH_W@
C_DEBUG = @C_DEBUG@
C_OPTIMIZE = @C_OPTIMIZE@
C_WARNINGS = @C_WARNINGS@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DOT_TO_GML_TRANSLATOR_FALSE = @DOT_TO_GML_TRANSLATOR_FALSE@
DOT_TO_GML_TRANSLATOR_TRUE = @DOT_TO_GML_TRANSLATOR_TRUE@
DOXYGEN_ADDED_DIRECTORY_1 = @DOXYGEN_ADDED_DIRECTORY_1@
DOXYGEN_ADDED_DIRECTORY_2 = @DOXYGEN_ADDED_DIRECTORY_2@
DOXYGEN_ENABLED_SECTIONS = @DOXYGEN_ENABLED_SECTIONS@
DOXYGEN_EXTRACT_ALL = @DOXYGEN_EXTRACT_ALL@
DOXYGEN_EXTRACT_PRIVATE = @DOXYGEN_EXTRACT_PRIVATE@
DOXYGEN_EXTRACT_STATIC = @DOXYGEN_EXTRACT_STATIC@
DOXYGEN_HIDE_FRIEND_COMPOUNDS = @DOXYGEN_HIDE_FRIEND_COMPOUNDS@
DOXYGEN_HIDE_UNDOC_CLASSES = @DOXYGEN_HIDE_UNDOC_CLASSES@
DOXYGEN_HIDE_UNDOC_MEMBERS = @DOXYGEN_HIDE_UNDOC_MEMBERS@
DOXYGEN_INTERNAL_DOCS = @DOXYGEN_INTERNAL_DOCS@
DOXYGEN_USE_TAG_FILE = @DOXYGEN_USE_TAG_FILE@
DWARF_INCLUDE = @DWARF_INCLUDE@
DWARF_LINK = @DWARF_LINK@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_JAVAPORT_FALSE = @ENABLE_JAVAPORT_FALSE@
ENABLE_JAVAPORT_TRUE = @ENABLE_JAVAPORT_TRUE@
ETHER_PREFIX = @ETHER_PREFIX@
EXE = @EXE@
EXEEXT = @EXEEXT@
F77 = @F77@
FADA_CPPFLAGS = @FADA_CPPFLAGS@
FADA_LDFLAGS = @FADA_LDFLAGS@
FFLAGS = @FFLAGS@
FLTK_include_path = @FLTK_include_path@
FLTK_libs_path = @FLTK_libs_path@
GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX = @GENERATED_COMPILER_NAME_AND_VERSION_SUFFIX@
GEN_BE = @GEN_BE@
GFORTRAN_PATH = @GFORTRAN_PATH@
GHCBIN = @GHCBIN@
GLUT_include_path = @GLUT_include_path@
GLUT_libs_path = @GLUT_libs_path@
GL_CFLAGS = @GL_CFLAGS@
GL_LIBS = @GL_LIBS@
GraphViz_include_path = @GraphViz_include_path@
GraphViz_libs_path = @GraphViz_libs_path@
HAVE_LIBYICES_FALSE = @HAVE_LIBYICES_FALSE@
HAVE_LIBYICES_TRUE = @HAVE_LIBYICES_TRUE@
HAVE_YICES_FALSE = @HAVE_YICES_FALSE@
HAVE_YICES_TRUE = @HAVE_YICES_TRUE@
HS_CONFIG_OPTS = @HS_CONFIG_OPTS@
INCLUDE_COMPASS_MAKEFILE_INC = @INCLUDE_COMPASS_MAKEFILE_INC@
INDENT = @INDENT@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_LTDL_FALSE = @INSTALL_LTDL_FALSE@
INSTALL_LTDL_TRUE = @INSTALL_LTDL_TRUE@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSURE_OPTIONS = @INSURE_OPTIONS@
IntelPin_path = @IntelPin_path@
JAR = @JAR@
JAVA = @JAVA@
JAVAC = @JAVAC@
JAVAH = @JAVAH@
JAVA_JVM_INCLUDE = @JAVA_JVM_INCLUDE@
JAVA_JVM_LINK = @JAVA_JVM_LINK@
JAVA_PATH = @JAVA_PATH@
LDFLAGS = @LDFLAGS@
LEX = @LEX@
LEXLIB = @LEXLIB@
LEX_OUTPUT_ROOT = @LEX_OUTPUT_ROOT@
LIBADD_DL = @LIBADD_DL@
LIBFFI_CFLAGS = @LIBFFI_CFLAGS@
LIBFFI_LIBS = @LIBFFI_LIBS@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBS_WITH_RPATH = @LIBS_WITH_RPATH@
LIBTOOL = @LIBTOOL@ --quiet
LN_S = @LN_S@
LTDLINCL = @LTDLINCL@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAPLE_INCLUDES = @MAPLE_INCLUDES@
MAPLE_LIBS = @MAPLE_LIBS@
MD5 = @MD5@
MOC = @MOC@
MPICXX = @MPICXX@
MYSQL_CFLAGS = @MYSQL_CFLAGS@
MYSQL_CONFIG = @MYSQL_CONFIG@
MYSQL_INCLUDE = @MYSQL_INCLUDE@
MYSQL_LDFLAGS = @MYSQL_LDFLAGS@
MYSQL_VERSION = @MYSQL_VERSION@
OBJ = @OBJ@
OBJEXT = @OBJEXT@
OLD_COMPILER_VERSION_FALSE = @OLD_COMPILER_VERSION_FALSE@
OLD_COMPILER_VERSION_TRUE = @OLD_COMPILER_VERSION_TRUE@
OPEN_FORTRAN_PARSER_PATH = @OPEN_FORTRAN_PARSER_PATH@
OS_32BIT_FALSE = @OS_32BIT_FALSE@
OS_32BIT_TRUE = @OS_32BIT_TRUE@
OS_64BIT_FALSE = @OS_64BIT_FALSE@
OS_64BIT_TRUE = @OS_64BIT_TRUE@
OS_LINUX_FALSE = @OS_LINUX_FALSE@
OS_LINUX_TRUE = @OS_LINUX_TRUE@
OS_MACOSX_FALSE = @OS_MACOSX_FALSE@
OS_MACOSX_TRUE = @OS_MACOSX_TRUE@
OS_MINGW_FALSE = @OS_MINGW_FALSE@
OS_MINGW_TRUE = @OS_MINGW_TRUE@
OS_MSDOS_FALSE = @OS_MSDOS_FALSE@
OS_MSDOS_TRUE = @OS_MSDOS_TRUE@
OS_VENDOR_APPLE_FALSE = @OS_VENDOR_APPLE_FALSE@
OS_VENDOR_APPLE_TRUE = @OS_VENDOR_APPLE_TRUE@
OS_VENDOR_CENTOS_FALSE = @OS_VENDOR_CENTOS_FALSE@
OS_VENDOR_CENTOS_TRUE = @OS_VENDOR_CENTOS_TRUE@
OS_VENDOR_DEBIAN_FALSE = @OS_VENDOR_DEBIAN_FALSE@
OS_VENDOR_DEBIAN_TRUE = @OS_VENDOR_DEBIAN_TRUE@
OS_VENDOR_REDHAT_32BIT_FALSE = @OS_VENDOR_REDHAT_32BIT_FALSE@
OS_VENDOR_REDHAT_32BIT_TRUE = @OS_VENDOR_REDHAT_32BIT_TRUE@
OS_VENDOR_REDHAT_FALSE = @OS_VENDOR_REDHAT_FALSE@
OS_VENDOR_REDHAT_TRUE = @OS_VENDOR_REDHAT_TRUE@
OS_VENDOR_UBUNTU_FALSE = @OS_VENDOR_UBUNTU_FALSE@
OS_VENDOR_UBUNTU_TRUE = @OS_VENDOR_UBUNTU_TRUE@
OS_release = @OS_release@
OS_vendor = @OS_vendor@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PACKAGE_VERSION_NUMERIC = @PACKAGE_VERSION_NUMERIC@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
PIP_CPPFLAGS = @PIP_CPPFLAGS@
PIP_LDFLAGS = @PIP_LDFLAGS@
PKG_CONFIG = @PKG_CONFIG@
PPL_CPPFLAGS = @PPL_CPPFLAGS@
PPL_LDFLAGS = @PPL_LDFLAGS@
PURIFY_OPTIONS = @PURIFY_OPTIONS@
Pxx_INCLUDES = @Pxx_INCLUDES@
Pxx_LIBS = @Pxx_LIBS@
QROSE_PREFIX = @QROSE_PREFIX@
QROSE_USE_MINGW32_FALSE = @QROSE_USE_MINGW32_FALSE@
QROSE_USE_MINGW32_TRUE = @QROSE_USE_MINGW32_TRUE@
QROSE_USE_WINDOWS_FALSE = @QROSE_USE_WINDOWS_FALSE@
QROSE_USE_WINDOWS_TRUE = @QROSE_USE_WINDOWS_TRUE@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
QT_VERSION = @QT_VERSION@
QT_VERSION_MAJOR = @QT_VERSION_MAJOR@
QT_VERSION_MINOR = @QT_VERSION_MINOR@
RANLIB = @RANLIB@
RCC = @RCC@
ROSEHPCT_DEP_INCLUDES = @ROSEHPCT_DEP_INCLUDES@
ROSEHPCT_DEP_LIBS = @ROSEHPCT_DEP_LIBS@
ROSE_BOOST_NORMAL_INCLUDE_PATH = @ROSE_BOOST_NORMAL_INCLUDE_PATH@

# DQ (12/22/2008): Specification of Boost path for use with "-isystem" option (may be GNU
# specific).  We use this option only if the configuration of ROSE has detected a
# previously installed version of Boost (which we do not want to use). 
# Note that only one of these will be non-empty makefile variables.
ROSE_BOOST_PREINCLUDE_PATH = @ROSE_BOOST_PREINCLUDE_PATH@
ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE = @ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_FALSE@
ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE = @ROSE_BUILD_BINARY_ANALYSIS_SUPPORT_TRUE@
ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_FALSE = @ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_FALSE@
ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_TRUE = @ROSE_BUILD_CUDA_LANGUAGE_SUPPORT_TRUE@
ROSE_BUILD_CXX_LANGUAGE_SUPPORT_FALSE = @ROSE_BUILD_CXX_LANGUAGE_SUPPORT_FALSE@
ROSE_BUILD_CXX_LANGUAGE_SUPPORT_TRUE = @ROSE_BUILD_CXX_LANGUAGE_SUPPORT_TRUE@
ROSE_BUILD_C_LANGUAGE_SUPPORT_FALSE = @ROSE_BUILD_C_LANGUAGE_SUPPORT_FALSE@
ROSE_BUILD_C_LANGUAGE_SUPPORT_TRUE = @ROSE_BUILD_C_LANGUAGE_SUPPORT_TRUE@
ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_FALSE = @ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_FALSE@
ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE = @ROSE_BUILD_FORTRAN_LANGUAGE_SUPPORT_TRUE@
ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_FALSE = @ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_FALSE@
ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE = @ROSE_BUILD_JAVA_LANGUAGE_SUPPORT_TRUE@
ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_FALSE = @ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_FALSE@
ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_TRUE = @ROSE_BUILD_OPENCL_LANGUAGE_SUPPORT_TRUE@
ROSE_BUILD_OS_IS_CYGWIN_FALSE = @ROSE_BUILD_OS_IS_CYGWIN_FALSE@
ROSE_BUILD_OS_IS_CYGWIN_TRUE = @ROSE_BUILD_OS_IS_CYGWIN_TRUE@
ROSE_BUILD_OS_IS_OSX_FALSE = @ROSE_BUILD_OS_IS_OSX_FALSE@
ROSE_BUILD_OS_IS_OSX_TRUE = @ROSE_BUILD_OS_IS_OSX_TRUE@
ROSE_BUILD_PHP_LANGUAGE_SUPPORT_FALSE = @ROSE_BUILD_PHP_LANGUAGE_SUPPORT_FALSE@
ROSE_BUILD_PHP_LANGUAGE_SUPPORT_TRUE = @ROSE_BUILD_PHP_LANGUAGE_SUPPORT_TRUE@
ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_FALSE = @ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_FALSE@
ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_TRUE = @ROSE_BUILD_PROJECTS_DIRECTORY_SUPPORT_TRUE@
ROSE_BUILD_ROSEHPCT_FALSE = @ROSE_BUILD_ROSEHPCT_FALSE@
ROSE_BUILD_ROSEHPCT_TRUE = @ROSE_BUILD_ROSEHPCT_TRUE@
ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_FALSE = @ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_FALSE@
ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_TRUE = @ROSE_BUILD_TESTS_DIRECTORY_SUPPORT_TRUE@
ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_FALSE = @ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_FALSE@
ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_TRUE = @ROSE_BUILD_TUTORIAL_DIRECTORY_SUPPORT_TRUE@
ROSE_EDG_MAJOR_VERSION_NUMBER = @ROSE_EDG_MAJOR_VERSION_NUMBER@
ROSE_EDG_MINOR_VERSION_NUMBER = @ROSE_EDG_MINOR_VERSION_NUMBER@
ROSE_HAS_EDG_SOURCE_FALSE = @ROSE_HAS_EDG_SOURCE_FALSE@
ROSE_HAS_EDG_SOURCE_TRUE = @ROSE_HAS_EDG_SOURCE_TRUE@
ROSE_HOME = @ROSE_HOME@
ROSE_LSB_RELEASE = @ROSE_LSB_RELEASE@
ROSE_MPI_FALSE = @ROSE_MPI_FALSE@
ROSE_MPI_TRUE = @ROSE_MPI_TRUE@
ROSE_OBJDUMP_PATH = @ROSE_OBJDUMP_PATH@
ROSE_OFP_CONTAINS_JAVA_FILE_FALSE = @ROSE_OFP_CONTAINS_JAVA_FILE_FALSE@
ROSE_OFP_CONTAINS_JAVA_FILE_TRUE = @ROSE_OFP_CONTAINS_JAVA_FILE_TRUE@
ROSE_OFP_MAJOR_VERSION_NUMBER = @ROSE_OFP_MAJOR_VERSION_NUMBER@
ROSE_OFP_MINOR_VERSION_NUMBER = @ROSE_OFP_MINOR_VERSION_NUMBER@
ROSE_OFP_PATCH_VERSION_NUMBER = @ROSE_OFP_PATCH_VERSION_NUMBER@
ROSE_PCH_FALSE = @ROSE_PCH_FALSE@
ROSE_PCH_TRUE = @ROSE_PCH_TRUE@
ROSE_SUPPORT_GNU_EXTENSIONS = @ROSE_SUPPORT_GNU_EXTENSIONS@
ROSE_SUPPORT_MICROSOFT_EXTENSIONS = @ROSE_SUPPORT_MICROSOFT_EXTENSIONS@
ROSE_USE_ASSEMBLY_SEMANTICS_FALSE = @ROSE_USE_ASSEMBLY_SEMANTICS_FALSE@
ROSE_USE_ASSEMBLY_SEMANTICS_TRUE = @ROSE_USE_ASSEMBLY_SEMANTICS_TRUE@
ROSE_USE_BDDBDDB_FALSE = @ROSE_USE_BDDBDDB_FALSE@
ROSE_USE_BDDBDDB_TRUE = @ROSE_USE_BDDBDDB_TRUE@
ROSE_USE_BINARYCONTEXTLOOKUP_FALSE = @ROSE_USE_BINARYCONTEXTLOOKUP_FALSE@
ROSE_USE_BINARYCONTEXTLOOKUP_TRUE = @ROSE_USE_BINARYCONTEXTLOOKUP_TRUE@
ROSE_USE_BOOST_WAVE_FALSE = @ROSE_USE_BOOST_WAVE_FALSE@
ROSE_USE_BOOST_WAVE_TRUE = @ROSE_USE_BOOST_WAVE_TRUE@
ROSE_USE_CUDA_SUPPORT = @ROSE_USE_CUDA_SUPPORT@
ROSE_USE_CUDA_SUPPORT_FALSE = @ROSE_USE_CUDA_SUPPORT_FALSE@
ROSE_USE_CUDA_SUPPORT_TRUE = @ROSE_USE_CUDA_SUPPORT_TRUE@
ROSE_USE_DWARF_FALSE = @ROSE_USE_DWARF_FALSE@
ROSE_USE_DWARF_TRUE = @ROSE_USE_DWARF_TRUE@
ROSE_USE_ETHER_FALSE = @ROSE_USE_ETHER_FALSE@
ROSE_USE_ETHER_TRUE = @ROSE_USE_ETHER_TRUE@
ROSE_USE_FADALIB = @ROSE_USE_FADALIB@
ROSE_USE_FADALIB_FALSE = @ROSE_USE_FADALIB_FALSE@
ROSE_USE_FADALIB_TRUE = @ROSE_USE_FADALIB_TRUE@
ROSE_USE_GCC_OMP_FALSE = @ROSE_USE_GCC_OMP_FALSE@
ROSE_USE_GCC_OMP_TRUE = @ROSE_USE_GCC_OMP_TRUE@
ROSE_USE_GRAPHVIZ_DOT_FALSE = @ROSE_USE_GRAPHVIZ_DOT_FALSE@
ROSE_USE_GRAPHVIZ_DOT_TRUE = @ROSE_USE_GRAPHVIZ_DOT_TRUE@
ROSE_USE_IDA_FALSE = @ROSE_USE_IDA_FALSE@
ROSE_USE_IDA_TRUE = @ROSE_USE_IDA_TRUE@
ROSE_USE_INDENT_FALSE = @ROSE_USE_INDENT_FALSE@
ROSE_USE_INDENT_TRUE = @ROSE_USE_INDENT_TRUE@
ROSE_USE_INTEL_PIN_FALSE = @ROSE_USE_INTEL_PIN_FALSE@
ROSE_USE_INTEL_PIN_TRUE = @ROSE_USE_INTEL_PIN_TRUE@
ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_FALSE = @ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_FALSE@
ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_TRUE = @ROSE_USE_INTERNAL_JAVA_SUPPORT_AM_CONDITIONAL_TRUE@
ROSE_USE_INTERNAL_JAVA_SUPPORT_FALSE = @ROSE_USE_INTERNAL_JAVA_SUPPORT_FALSE@
ROSE_USE_INTERNAL_JAVA_SUPPORT_TRUE = @ROSE_USE_INTERNAL_JAVA_SUPPORT_TRUE@
ROSE_USE_LIBFFI_FALSE = @ROSE_USE_LIBFFI_FALSE@
ROSE_USE_LIBFFI_TRUE = @ROSE_USE_LIBFFI_TRUE@
ROSE_USE_LLVM_FALSE = @ROSE_USE_LLVM_FALSE@
ROSE_USE_LLVM_TRUE = @ROSE_USE_LLVM_TRUE@
ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE = @ROSE_USE_LONG_MAKE_CHECK_RULE_FALSE@
ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE = @ROSE_USE_LONG_MAKE_CHECK_RULE_TRUE@
ROSE_USE_MAPLE_FALSE = @ROSE_USE_MAPLE_FALSE@
ROSE_USE_MAPLE_TRUE = @ROSE_USE_MAPLE_TRUE@
ROSE_USE_MYSQL_FALSE = @ROSE_USE_MYSQL_FALSE@
ROSE_USE_MYSQL_TRUE = @ROSE_USE_MYSQL_TRUE@
ROSE_USE_NEW_EDG_INTERFACE_FALSE = @ROSE_USE_NEW_EDG_INTERFACE_FALSE@
ROSE_USE_NEW_EDG_INTERFACE_TRUE = @ROSE_USE_NEW_EDG_INTERFACE_TRUE@
ROSE_USE_OBJDUMP_FALSE = @ROSE_USE_OBJDUMP_FALSE@
ROSE_USE_OBJDUMP_TRUE = @ROSE_USE_OBJDUMP_TRUE@
ROSE_USE_OMNI_OPENMP_FALSE = @ROSE_USE_OMNI_OPENMP_FALSE@
ROSE_USE_OMNI_OPENMP_TRUE = @ROSE_USE_OMNI_OPENMP_TRUE@
ROSE_USE_OPENCL_SUPPORT = @ROSE_USE_OPENCL_SUPPORT@
ROSE_USE_OPENCL_SUPPORT_FALSE = @ROSE_USE_OPENCL_SUPPORT_FALSE@
ROSE_USE_OPENCL_SUPPORT_TRUE = @ROSE_USE_OPENCL_SUPPORT_TRUE@
ROSE_USE_OPENGL_FALSE = @ROSE_USE_OPENGL_FALSE@
ROSE_USE_OPENGL_TRUE = @ROSE_USE_OPENGL_TRUE@
ROSE_USE_PHP_FALSE = @ROSE_USE_PHP_FALSE@
ROSE_USE_PHP_TRUE = @ROSE_USE_PHP_TRUE@
ROSE_USE_PPL = @ROSE_USE_PPL@
ROSE_USE_PPL_FALSE = @ROSE_USE_PPL_FALSE@
ROSE_USE_PPL_TRUE = @ROSE_USE_PPL_TRUE@
ROSE_USE_QROSE_FALSE = @ROSE_USE_QROSE_FALSE@
ROSE_USE_QROSE_TRUE = @ROSE_USE_QROSE_TRUE@
ROSE_USE_QT_FALSE = @ROSE_USE_QT_FALSE@
ROSE_USE_QT_TRUE = @ROSE_USE_QT_TRUE@
ROSE_USE_RTED_FALSE = @ROSE_USE_RTED_FALSE@
ROSE_USE_RTED_TRUE = @ROSE_USE_RTED_TRUE@
ROSE_USE_SAT_FALSE = @ROSE_USE_SAT_FALSE@
ROSE_USE_SAT_TRUE = @ROSE_USE_SAT_TRUE@
ROSE_USE_SMALLER_GENERATED_FILES_FALSE = @ROSE_USE_SMALLER_GENERATED_FILES_FALSE@
ROSE_USE_SMALLER_GENERATED_FILES_TRUE = @ROSE_USE_SMALLER_GENERATED_FILES_TRUE@
ROSE_USE_SQLITE_DATABASE_FALSE = @ROSE_USE_SQLITE_DATABASE_FALSE@
ROSE_USE_SQLITE_DATABASE_TRUE = @ROSE_USE_SQLITE_DATABASE_TRUE@
ROSE_USE_SSL_SUPPORT_FALSE = @ROSE_USE_SSL_SUPPORT_FALSE@
ROSE_USE_SSL_SUPPORT_TRUE = @ROSE_USE_SSL_SUPPORT_TRUE@
ROSE_USE_TCLSH_FALSE = @ROSE_USE_TCLSH_FALSE@
ROSE_USE_TCLSH_TRUE = @ROSE_USE_TCLSH_TRUE@
ROSE_USE_TEST_SMT_SOLVER_FALSE = @ROSE_USE_TEST_SMT_SOLVER_FALSE@
ROSE_USE_TEST_SMT_SOLVER_TRUE = @ROSE_USE_TEST_SMT_SOLVER_TRUE@
ROSE_USE_TRACE_ANALYSIS_FALSE = @ROSE_USE_TRACE_ANALYSIS_FALSE@
ROSE_USE_TRACE_ANALYSIS_TRUE = @ROSE_USE_TRACE_ANALYSIS_TRUE@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_FALSE = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_FALSE@
ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_TRUE = @ROSE_USE_UNIFORM_ADVANCED_WARNINGS_SUPPORT_TRUE@
ROSE_USE_VISUALIZATION_FALSE = @ROSE_USE_VISUALIZATION_FALSE@
ROSE_USE_VISUALIZATION_TRUE = @ROSE_USE_VISUALIZATION_TRUE@
ROSE_USE_WGET_FALSE = @ROSE_USE_WGET_FALSE@
ROSE_USE_WGET_TRUE = @ROSE_USE_WGET_TRUE@
ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_FALSE = @ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_FALSE@
ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE = @ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE@
ROSE_USE_XML_FALSE = @ROSE_USE_XML_FALSE@
ROSE_USE_XML_TRUE = @ROSE_USE_XML_TRUE@
ROSE_USING_BOOST_VERSION_1_35_FALSE = @ROSE_USING_BOOST_VERSION_1_35_FALSE@
ROSE_USING_BOOST_VERSION_1_35_TRUE = @ROSE_USING_BOOST_VERSION_1_35_TRUE@
ROSE_USING_BOOST_VERSION_1_36_FALSE = @ROSE_USING_BOOST_VERSION_1_36_FALSE@
ROSE_USING_BOOST_VERSION_1_36_TRUE = @ROSE_USING_BOOST_VERSION_1_36_TRUE@
ROSE_USING_BOOST_VERSION_1_37_FALSE = @ROSE_USING_BOOST_VERSION_1_37_FALSE@
ROSE_USING_BOOST_VERSION_1_37_TRUE = @ROSE_USING_BOOST_VERSION_1_37_TRUE@
ROSE_USING_BOOST_VERSION_1_38_FALSE = @ROSE_USING_BOOST_VERSION_1_38_FALSE@
ROSE_USING_BOOST_VERSION_1_38_TRUE = @ROSE_USING_BOOST_VERSION_1_38_TRUE@
ROSE_USING_BOOST_VERSION_1_39_FALSE = @ROSE_USING_BOOST_VERSION_1_39_FALSE@
ROSE_USING_BOOST_VERSION_1_39_TRUE = @ROSE_USING_BOOST_VERSION_1_39_TRUE@
ROSE_USING_BOOST_VERSION_1_40_FALSE = @ROSE_USING_BOOST_VERSION_1_40_FALSE@
ROSE_USING_BOOST_VERSION_1_40_TRUE = @ROSE_USING_BOOST_VERSION_1_40_TRUE@
ROSE_USING_BOOST_VERSION_1_41_FALSE = @ROSE_USING_BOOST_VERSION_1_41_FALSE@
ROSE_USING_BOOST_VERSION_1_41_TRUE = @ROSE_USING_BOOST_VERSION_1_41_TRUE@
ROSE_USING_BOOST_VERSION_1_42_FALSE = @ROSE_USING_BOOST_VERSION_1_42_FALSE@
ROSE_USING_BOOST_VERSION_1_42_TRUE = @ROSE_USING_BOOST_VERSION_1_42_TRUE@
ROSE_USING_BOOST_VERSION_1_43_FALSE = @ROSE_USING_BOOST_VERSION_1_43_FALSE@
ROSE_USING_BOOST_VERSION_1_43_TRUE = @ROSE_USING_BOOST_VERSION_1_43_TRUE@
ROSE_USING_BOOST_VERSION_1_44_FALSE = @ROSE_USING_BOOST_VERSION_1_44_FALSE@
ROSE_USING_BOOST_VERSION_1_44_TRUE = @ROSE_USING_BOOST_VERSION_1_44_TRUE@
ROSE_USING_BOOST_VERSION_1_45_FALSE = @ROSE_USING_BOOST_VERSION_1_45_FALSE@
ROSE_USING_BOOST_VERSION_1_45_TRUE = @ROSE_USING_BOOST_VERSION_1_45_TRUE@
ROSE_USING_GFORTRAN_VERSION_4_0_FALSE = @ROSE_USING_GFORTRAN_VERSION_4_0_FALSE@
ROSE_USING_GFORTRAN_VERSION_4_0_TRUE = @ROSE_USING_GFORTRAN_VERSION_4_0_TRUE@
ROSE_USING_GFORTRAN_VERSION_4_1_FALSE = @ROSE_USING_GFORTRAN_VERSION_4_1_FALSE@
ROSE_USING_GFORTRAN_VERSION_4_1_TRUE = @ROSE_USING_GFORTRAN_VERSION_4_1_TRUE@
ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_FALSE = @ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_FALSE@
ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_TRUE = @ROSE_USING_GRAPH_IR_NODES_FOR_BACKWARD_COMPATABILITY_TRUE@
ROSE_USING_ROSE_ANALYSIS_FALSE = @ROSE_USING_ROSE_ANALYSIS_FALSE@
ROSE_USING_ROSE_ANALYSIS_TRUE = @ROSE_USING_ROSE_ANALYSIS_TRUE@
ROSE_USING_ROSE_AST_FILE_IO_FALSE = @ROSE_USING_ROSE_AST_FILE_IO_FALSE@
ROSE_USING_ROSE_AST_FILE_IO_TRUE = @ROSE_USING_ROSE_AST_FILE_IO_TRUE@
ROSE_USING_ROSE_CODE_GENERATION_FALSE = @ROSE_USING_ROSE_CODE_GENERATION_FALSE@
ROSE_USING_ROSE_CODE_GENERATION_TRUE = @ROSE_USING_ROSE_CODE_GENERATION_TRUE@
ROSE_USING_ROSE_FALSE = @ROSE_USING_ROSE_FALSE@
ROSE_USING_ROSE_TRANSLATOR_FALSE = @ROSE_USING_ROSE_TRANSLATOR_FALSE@
ROSE_USING_ROSE_TRANSLATOR_TRUE = @ROSE_USING_ROSE_TRANSLATOR_TRUE@
ROSE_USING_ROSE_TRUE = @ROSE_USING_ROSE_TRUE@
ROSE_WGET_PATH = @ROSE_WGET_PATH@
ROSE_WITH_ROSEQT_FALSE = @ROSE_WITH_ROSEQT_FALSE@
ROSE_WITH_ROSEQT_TRUE = @ROSE_WITH_ROSEQT_TRUE@
RT_LIBS = @RT_LIBS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SQLITE3_CFLAGS = @SQLITE3_CFLAGS@
SQLITE3_LDFLAGS = @SQLITE3_LDFLAGS@
SQLITE3_VERSION = @SQLITE3_VERSION@
STRIP = @STRIP@
SWIG = @SWIG@
SWIG_LIB = @SWIG_LIB@
TCLSH = @TCLSH@
TEST_SMT_SOLVER = @TEST_SMT_SOLVER@
UIC = @UIC@
USE_BINARY_ANALYSIS_TESTS_FALSE = @USE_BINARY_ANALYSIS_TESTS_FALSE@
USE_BINARY_ANALYSIS_TESTS_TRUE = @USE_BINARY_ANALYSIS_TESTS_TRUE@
USE_GCJ_FALSE = @USE_GCJ_FALSE@
USE_GCJ_TRUE = @USE_GCJ_TRUE@
USE_HASKELL_FALSE = @USE_HASKELL_FALSE@
USE_HASKELL_TRUE = @USE_HASKELL_TRUE@
USE_ROSE_GLUT_SUPPORT_FALSE = @USE_ROSE_GLUT_SUPPORT_FALSE@
USE_ROSE_GLUT_SUPPORT_TRUE = @USE_ROSE_GLUT_SUPPORT_TRUE@
USE_ROSE_IN_BUILD_TREE_VAR_FALSE = @USE_ROSE_IN_BUILD_TREE_VAR_FALSE@
USE_ROSE_IN_BUILD_TREE_VAR_TRUE = @USE_ROSE_IN_BUILD_TREE_VAR_TRUE@
USE_VALGRIND_FALSE = @USE_VALGRIND_FALSE@
USE_VALGRIND_TRUE = @USE_VALGRIND_TRUE@
USING_GNU_COMPILER_FALSE = @USING_GNU_COMPILER_FALSE@
USING_GNU_COMPILER_TRUE = @USING_GNU_COMPILER_TRUE@
USING_INTEL_COMPILER_FALSE = @USING_INTEL_COMPILER_FALSE@
USING_INTEL_COMPILER_TRUE = @USING_INTEL_COMPILER_TRUE@
USING_WINDOWS = @USING_WINDOWS@
VALGRIND_BINARY = @VALGRIND_BINARY@
VERSION = @VERSION@
WITH_GOMP_OPENMP_LIB_FALSE = @WITH_GOMP_OPENMP_LIB_FALSE@
WITH_GOMP_OPENMP_LIB_TRUE = @WITH_GOMP_OPENMP_LIB_TRUE@
XML2_CONFIG = @XML2_CONFIG@
XML_CPPFLAGS = @XML_CPPFLAGS@
XML_LIBS = @XML_LIBS@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
YACC = @YACC@
YICES = @YICES@
YICES_PREFIX = @YICES_PREFIX@
absolute_path_srcdir = @absolute_path_srcdir@
ac_boost_path = @ac_boost_path@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_MPICXX = @ac_ct_MPICXX@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_ROSE_LSB_RELEASE = @ac_ct_ROSE_LSB_RELEASE@
ac_ct_ROSE_OBJDUMP_PATH = @ac_ct_ROSE_OBJDUMP_PATH@
ac_ct_ROSE_WGET_PATH = @ac_ct_ROSE_WGET_PATH@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
backstroke_ross_path = @backstroke_ross_path@
backstroke_speedes_path = @backstroke_speedes_path@
bddbddb_path = @bddbddb_path@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_triplet_without_redhat = @build_triplet_without_redhat@
build_vendor = @build_vendor@
configure_date = @configure_date@
datadir = @datadir@
dwarf_path = @dwarf_path@
edg_union_struct_debugging_value = @edg_union_struct_debugging_value@
exec_prefix = @exec_prefix@
glut_path = @glut_path@
gomp_omp_runtime_library_path = @gomp_omp_runtime_library_path@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
ida_path = @ida_path@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
insure_BIN = @insure_BIN@
insure_INCLUDES = @insure_INCLUDES@
insure_LIBS = @insure_LIBS@
insure_PREFIX = @insure_PREFIX@
libdir = @libdir@
libexecdir = @libexecdir@
llvm_path = @llvm_path@
localstatedir = @localstatedir@
mandir = @mandir@
maple_path = @maple_path@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
omni_omp_runtime_support_path = @omni_omp_runtime_support_path@
optional_Visualization_subdirs = @optional_Visualization_subdirs@
parallel_ast_traversal_omp_path = @parallel_ast_traversal_omp_path@
php_path = @php_path@
prefix = @prefix@
program_transform_name = @program_transform_name@
purify_BIN = @purify_BIN@
purify_INCLUDES = @purify_INCLUDES@
purify_LIBS = @purify_LIBS@
purify_PREFIX = @purify_PREFIX@
python_path = @python_path@
rted_path = @rted_path@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
subdirs = @subdirs@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_pwd = @top_pwd@
wine_path = @wine_path@

# SQLite is a simpler database to use than MySQL
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS)
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_INCLUDE = $(SQLITE3_CFLAGS) -I$(top_srcdir)/src/roseExtensions/sqlite3x
@ROSE_USE_SQLITE_DATABASE_TRUE@SQLITE_DATABASE_LIBS = $(SQLITE3_LDFLAGS)
#   ROSE_SQLITE_DATABASE_OBJS     = $(top_builddir)/src/roseExtensions/sqlite3x/*o
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_NAME = RoseSQLite3xDatabase
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIB_FILE = lib$(ROSE_SQLITE_DATABASE_LIB_NAME).la
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SQLITE_DATABASE_LIBS = -l$(ROSE_SQLITE_DATABASE_LIB_NAME)
@ROSE_USE_SQLITE_DATABASE_TRUE@ROSE_SIDEEFFECT_INCLUDE = -I$(top_srcdir)/src/midend/programAnalysis/sideEffectAnalysis

# This is properly handled by automake even when specified in an include file
EDG_LIBS = @EDG_LIBS@

# Conditional support for Gabriel's QRose GUI Library 
#  ROSE_GUI_INCLUDE =   -I${QROSE_PREFIX}/include
@ROSE_USE_QT_TRUE@ROSE_GUI_INCLUDE = -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/Common -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/TreeBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/QueryBox -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Components/SourceBox

# ROSE_GUI_LIBS = -lqrose
#  ROSE_GUI_LIBS_WITH_PATH = -L${QROSE_PREFIX}/lib -lqrose
#  ROSE_GUI_LIBS_WITH_PATH =  -L${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/  -lqrose
@ROSE_USE_QT_TRUE@ROSE_GUI_LIBS_WITH_PATH = ${top_builddir}/src/3rdPartyLibraries/qrose/QRoseLib/libqrose.la

# ROSE_GUI_LIB_FILE = libqrose.a
@ROSE_USE_QT_TRUE@ROSE_QT_INCLUDE = $(QT_INCLUDES)
# ROSE_QT_LIBS = -lqt
@ROSE_USE_QT_TRUE@ROSE_QT_LIBS_WITH_PATH = ${QT_LDFLAGS}
# ROSE_QT_LIB_FILE = libqt.a

# ROSE-HPCToolkit module
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_INCLUDES = -I$(top_srcdir)/src/roseExtensions/roseHPCToolkit/include
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS = -lrosehpct
@ROSE_BUILD_ROSEHPCT_TRUE@ROSE_ROSEHPCT_LIBS_WITH_PATH = $(top_builddir)/src/roseExtensions/roseHPCToolkit/src/librosehpct.la
# ROSE_ROSEHPCT_LIB_FILE = librosehpct.so

# ROSE-YICES Package (destributed by SRI as a static library)
@HAVE_LIBYICES_TRUE@ROSE_YICES_INCLUDES = -I@YICES_PREFIX@/include
@HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS = -lyices
@HAVE_LIBYICES_TRUE@ROSE_YICES_LIBS_WITH_PATH = @YICES_PREFIX@/lib/libyices.a
GLUT_LIBS = ${glut_path}

# ROSE-DWARF libdwarf support
@ROSE_USE_DWARF_TRUE@ROSE_DWARF_INCLUDES = -I$(dwarf_path)
# DQ (3/15/2009): Use the usual static linking when not using Intel Pin (what we used to do).
# DQ (3/13/2009): Fixup libdwarf support in ROSE to always use the dynamic (shared) library.
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(dwarf_path) -L$(dwarf_path) -ldwarf -lelf
# DQ (6/5/2010): Fixed to use the value set in the configure step (requires the dynamic library).
# ROSE_DWARF_LIBS_WITH_PATH = $(dwarf_path)/libdwarf.a -lelf
@ROSE_USE_DWARF_TRUE@@ROSE_USE_INTEL_PIN_FALSE@ROSE_DWARF_LIBS_WITH_PATH = @DWARF_LINK@

# DQ (3/13/2009): These do not appear to be used anywhere.
# ROSE_DWARF_LIBS = -ldwarf
# ROSE_DWARF_LIB_FILE = libdwarf.a

# DQ (3/13/2009):
# If Dwarf is used with Intel Pin then reference the same copy of libdwarf.a (in the same
# directory).  However, it does NOT work to link both references to libdwarf into more
# than one dynamic (shared) library, so we need to link libdwarf dynamically.
# To avoid additional LD_LIBRARY_PATH requirements, we do so using rpath.
# To support this the libdwarf.so should be placed into $(INTEL_PIN_PATH)/intel64/lib-ext
# and the static libdwarf.a moved out (renamed) so that it will not be used.
# Note that this will also cause librose.so to use the shared library for 
# dwarf when used with Intel Pin.
# ROSE_DWARF_LIBS_WITH_PATH = $(INTEL_PIN_PATH)/intel64/lib-ext/libdwarf.a -lelf
# ROSE_DWARF_LIBS_WITH_PATH = -Wl,--rpath $(INTEL_PIN_PATH)/intel64/lib-ext -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
@ROSE_USE_DWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@ROSE_DWARF_LIBS_WITH_PATH = -L$(INTEL_PIN_PATH)/intel64/lib-ext -ldwarf -lelf
# DQ (3/14/2009): This factors the lib paths.
@ROSE_USE_DWARF_TRUE@@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_WITH_DWARF_LIBS_PATH = $(INTEL_PIN_LIB_PATHS) -lpin -lxed -ldl $(ROSE_DWARF_LIBS_WITH_PATH)

# ROSE-WINE Package (Wine is a package to permit execution of Windows binaries under Linux)
@ROSE_USE_WINDOWS_ANALYSIS_SUPPORT_TRUE@ROSE_WINE_INCLUDES = -I$(wine_path)/include
@ROSE_USE_PHP_TRUE@ROSE_PHP_INCLUDES = -I$(php_path)/include/phc -I$(php_path)/include/php
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS = -lphp5 -lphc -lltdl
@ROSE_USE_PHP_TRUE@ROSE_PHP_LIBS_WITH_PATH = $(php_path)/lib/libphc.so $(php_path)/lib/libphp5.so $(LIBLTDL)

# ASR (06/09/2010): adding llvm support variables
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_INCLUDES = -I$(llvm_path)/include
@ROSE_USE_LLVM_TRUE@ROSE_LLVM_LIBS = -L$(llvm_path)/lib \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreCodeGen -lLLVMXCoreAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMXCoreInfo -lLLVMSystemZCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystemZAsmPrinter -lLLVMSystemZInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcCodeGen -lLLVMSparcAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMSparcInfo -lLLVMPowerPCCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMPowerPCAsmPrinter -lLLVMPowerPCInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMpic16passes -lLLVMPIC16AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMPIC16CodeGen -lLLVMPIC16Info \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430CodeGen -lLLVMMSP430AsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMSP430Info -lLLVMMSIL -lLLVMMSILInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsAsmPrinter -lLLVMMipsCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMMipsInfo -lLLVMMBlazeAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMMBlazeCodeGen -lLLVMMBlazeInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMLinker -lLLVMipo -lLLVMInterpreter \
@ROSE_USE_LLVM_TRUE@	-lLLVMInstrumentation -lLLVMJIT \
@ROSE_USE_LLVM_TRUE@	-lLLVMExecutionEngine -lLLVMCppBackend \
@ROSE_USE_LLVM_TRUE@	-lLLVMCppBackendInfo -lLLVMCellSPUCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMCellSPUAsmPrinter -lLLVMCellSPUInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMCBackend -lLLVMCBackendInfo \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMBlackfinInfo -lLLVMBitWriter \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Disassembler -lLLVMX86AsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86AsmPrinter -lLLVMX86CodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMX86Info -lLLVMAsmParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmParser -lLLVMMCParser \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMAsmPrinter -lLLVMARMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMARMInfo -lLLVMArchive \
@ROSE_USE_LLVM_TRUE@	-lLLVMBitReader -lLLVMAlphaCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMSelectionDAG -lLLVMAlphaAsmPrinter \
@ROSE_USE_LLVM_TRUE@	-lLLVMAsmPrinter -lLLVMCodeGen \
@ROSE_USE_LLVM_TRUE@	-lLLVMScalarOpts -lLLVMInstCombine \
@ROSE_USE_LLVM_TRUE@	-lLLVMTransformUtils -lLLVMipa \
@ROSE_USE_LLVM_TRUE@	-lLLVMAnalysis -lLLVMTarget -lLLVMMC \
@ROSE_USE_LLVM_TRUE@	-lLLVMCore -lLLVMAlphaInfo -lLLVMSupport \
@ROSE_USE_LLVM_TRUE@	-lLLVMSystem

# adding all libraries for now
#ROSE_LLVM_LIB_WITH_PATH = $(llvm_path)/lib/libLLVMXCoreCodeGen.a $(llvm_path)/lib/libLLVMXCoreAsmPrinter.a $(llvm_path)/lib/libLLVMXCoreInfo.a $(llvm_path)/lib/libLLVMSystemZCodeGen.a $(llvm_path)/lib/libLLVMSystemZAsmPrinter.a $(llvm_path)/lib/libLLVMSystemZInfo.a $(llvm_path)/lib/libLLVMSparcCodeGen.a $(llvm_path)/lib/libLLVMSparcAsmPrinter.a $(llvm_path)/lib/libLLVMSparcInfo.a $(llvm_path)/lib/libLLVMPowerPCCodeGen.a $(llvm_path)/lib/libLLVMPowerPCAsmPrinter.a $(llvm_path)/lib/libLLVMPowerPCInfo.a $(llvm_path)/lib/libLLVMpic16passes.a $(llvm_path)/lib/libLLVMPIC16AsmPrinter.a $(llvm_path)/lib/libLLVMPIC16CodeGen.a $(llvm_path)/lib/libLLVMPIC16Info.a $(llvm_path)/lib/libLLVMMSP430CodeGen.a $(llvm_path)/lib/libLLVMMSP430AsmPrinter.a $(llvm_path)/lib/libLLVMMSP430Info.a $(llvm_path)/lib/libLLVMMSIL.a $(llvm_path)/lib/libLLVMMSILInfo.a $(llvm_path)/lib/libLLVMMipsAsmPrinter.a $(llvm_path)/lib/libLLVMMipsCodeGen.a $(llvm_path)/lib/libLLVMMipsInfo.a $(llvm_path)/lib/libLLVMMBlazeAsmPrinter.a $(llvm_path)/lib/libLLVMMBlazeCodeGen.a $(llvm_path)/lib/libLLVMMBlazeInfo.a $(llvm_path)/lib/libLLVMLinker.a $(llvm_path)/lib/libLLVMipo.a $(llvm_path)/lib/libLLVMInterpreter.a $(llvm_path)/lib/libLLVMInstrumentation.a $(llvm_path)/lib/libLLVMJIT.a $(llvm_path)/lib/libLLVMExecutionEngine.a $(llvm_path)/lib/libLLVMCppBackend.a $(llvm_path)/lib/libLLVMCppBackendInfo.a $(llvm_path)/lib/libLLVMCellSPUCodeGen.a $(llvm_path)/lib/libLLVMCellSPUAsmPrinter.a $(llvm_path)/lib/libLLVMCellSPUInfo.a $(llvm_path)/lib/libLLVMCBackend.a $(llvm_path)/lib/libLLVMCBackendInfo.a $(llvm_path)/lib/libLLVMBlackfinCodeGen.a $(llvm_path)/lib/libLLVMBlackfinAsmPrinter.a $(llvm_path)/lib/libLLVMBlackfinInfo.a $(llvm_path)/lib/libLLVMBitWriter.a $(llvm_path)/lib/libLLVMX86Disassembler.a $(llvm_path)/lib/libLLVMX86AsmParser.a $(llvm_path)/lib/libLLVMX86AsmPrinter.a $(llvm_path)/lib/libLLVMX86CodeGen.a $(llvm_path)/lib/libLLVMX86Info.a $(llvm_path)/lib/libLLVMAsmParser.a $(llvm_path)/lib/libLLVMARMAsmParser.a $(llvm_path)/lib/libLLVMMCParser.a $(llvm_path)/lib/libLLVMARMAsmPrinter.a $(llvm_path)/lib/libLLVMARMCodeGen.a $(llvm_path)/lib/libLLVMARMInfo.a $(llvm_path)/lib/libLLVMArchive.a $(llvm_path)/lib/libLLVMBitReader.a $(llvm_path)/lib/libLLVMAlphaCodeGen.a $(llvm_path)/lib/libLLVMSelectionDAG.a $(llvm_path)/lib/libLLVMAlphaAsmPrinter.a $(llvm_path)/lib/libLLVMAsmPrinter.a $(llvm_path)/lib/libLLVMCodeGen.a $(llvm_path)/lib/libLLVMScalarOpts.a $(llvm_path)/lib/libLLVMInstCombine.a $(llvm_path)/lib/libLLVMTransformUtils.a $(llvm_path)/lib/libLLVMipa.a $(llvm_path)/lib/libLLVMAnalysis.a $(llvm_path)/lib/libLLVMTarget.a $(llvm_path)/lib/libLLVMMC.a $(llvm_path)/lib/libLLVMCore.a $(llvm_path)/lib/libLLVMAlphaInfo.a $(llvm_path)/lib/libLLVMSupport.a $(llvm_path)/lib/libLLVMSystem.a

# SSL support permits use of MD5 checksums internally for binary library identification.
@ROSE_USE_SSL_SUPPORT_TRUE@ROSE_SSL_LIBS = -lssl -lcrypto

# support for precompiled headers
@ROSE_PCH_TRUE@ROSE_PCH_INCLUDE = -Winvalid-pch -fPIC -DPIC
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_PATH = @IntelPin_path@
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_INCLUDE_PATHS = -I$(INTEL_PIN_PATH)/source/include -I$(INTEL_PIN_PATH)/source/include/gen -I$(INTEL_PIN_PATH)/extras/xed2-intel64/include -I$(INTEL_PIN_PATH)/source/tools/InstLib

# DQ (3/8/2009): These cause rose/src/testSharedRoseLib to fail, I don't know why (fails in system call to map()).
# INTEL_PIN_LIB_PATHS     = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib -L$(INTEL_PIN_PATH)/intel64/lib-ext
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIB_PATHS = -L$(INTEL_PIN_PATH)/intel64/lib -L$(INTEL_PIN_PATH)/extras/xed2-intel64/lib

# Do we want to handle this differently when Dwarf is used optionally with ROSE.
@ROSE_USE_INTEL_PIN_TRUE@INTEL_PIN_LIBS = -lpin -lxed -ldwarf -lelf -ldl
#if ROSE_USE_DWARF
#  INTEL_PIN_LIBS          = -lpin -lxed -lelf -ldl
#else
#  INTEL_PIN_LIBS          = -lpin -lxed -ldwarf -lelf -ldl
#endif
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_INCLUDE = -I$(ETHER_PREFIX)/include
@ROSE_USE_ETHER_TRUE@ROSE_ETHER_LIBS = -L$(ETHER_PREFIX)/lib -lxenctrl

# DQ (1/9/2010): Added use of libimf with libm (the two go together when using Intel icc and icpc)
@USING_INTEL_COMPILER_TRUE@ROSE_INTEL_COMPILER_MATH_LIBS = -limf -lm

# Note use of "-isystem" option in ROSE_BOOST_PREINCLUDE_PATH to have the 
# boost specified on the configure
# command-line be used instead of the OS version of boost that is sometimes
# installed with Linux (it is always a version too old to be used with ROSE).
# This is used only when the ROSE configuration detects a previously installed
# version of Boost (e.g /usr/include/boost) that we don't want to use.
ROSE_INCLUDES = \
     $(ROSE_BOOST_PREINCLUDE_PATH) \
     -I$(top_builddir)/src/roseSupport \
     -I$(top_builddir)/src/frontend/SageIII \
     -I$(top_srcdir)/src \
     -I$(top_srcdir)/src/frontend/SageIII \
     -I$(top_srcdir)/src/frontend/SageIII/astFixup \
     -I$(top_srcdir)/src/frontend/SageIII/astPostProcessing \
     -I$(top_srcdir)/src/frontend/SageIII/astMerge \
     -I$(top_srcdir)/src/frontend/SageIII/astVisualization \
     -I$(top_srcdir)/src/frontend/SageIII/astFileIO \
     -I$(top_srcdir)/src/frontend/SageIII/sageInterface \
     -I$(top_srcdir)/src/frontend/SageIII/virtualCFG \
     -I$(top_srcdir)/src/frontend/SageIII/astTokenStream \
     -I$(top_srcdir)/src/frontend/SageIII/astHiddenTypeAndDeclarationLists \
     -I$(top_builddir)/src/frontend/SageIII/astFileIO \
     -I$(top_srcdir)/src/frontend/OpenFortranParser_SAGE_Connection \
     -I$(top_srcdir)/src/frontend/ECJ_ROSE_Connection \
     -I$(top_srcdir)/src/frontend/PHPFrontend \
     -I$(top_srcdir)/src/frontend/BinaryDisassembly \
     -I$(top_srcdir)/src/frontend/BinaryFormats \
     -I$(top_srcdir)/src/frontend/BinaryLoader \
     -I$(top_srcdir)/src/frontend/Disassemblers \
     -I$(top_srcdir)/src/backend/unparser \
     -I$(top_srcdir)/src/backend/unparser/formatSupport \
     -I$(top_srcdir)/src/backend/unparser/languageIndependenceSupport \
     -I$(top_srcdir)/src/backend/unparser/CxxCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/FortranCodeGeneration \
     -I$(top_srcdir)/src/backend/unparser/PHPCodeGeneration \
     -I$(top_srcdir)/src/backend/asmUnparser \
     -I$(top_srcdir)/src/util \
     -I$(top_srcdir)/src/util/support \
     -I$(top_srcdir)/src/util/graphs  \
     -I$(top_srcdir)/src/util/stringSupport \
     -I$(top_srcdir)/src/util/commandlineProcessing \
     -I$(top_srcdir)/src/midend/abstractHandle \
     -I$(top_srcdir)/src/midend/astDiagnostics \
     -I$(top_srcdir)/src/midend/programTransformation/astInlining \
     -I$(top_srcdir)/src/midend/programTransformation/astOutlining  \
     -I$(top_srcdir)/src/midend/astProcessing \
     -I$(top_srcdir)/src/midend/astQuery \
     -I$(top_srcdir)/src/midend/astRewriteMechanism \
     -I$(top_srcdir)/src/midend/astUtil/annotation \
     -I$(top_srcdir)/src/midend/astUtil/astInterface \
     -I$(top_srcdir)/src/midend/astUtil/astSupport \
     -I$(top_srcdir)/src/midend/astUtil/symbolicVal \
     -I$(top_srcdir)/src/midend/binaryAnalyses \
     -I$(top_srcdir)/src/midend/binaryAnalyses/dataflowanalyses \
     -I$(top_srcdir)/src/midend/binaryAnalyses/instructionSemantics \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/computation \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depGraph \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/depInfo \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/driver \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/outsideInterface \
     -I$(top_srcdir)/src/midend/programTransformation/loopProcessing/prepostTransformation \
     -I$(top_srcdir)/src/midend/programTransformation/ompLowering \
     -I$(top_srcdir)/src/midend/programAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/CFG \
     -I$(top_srcdir)/src/midend/programAnalysis/CallGraphAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/OAWrap \
     -I$(top_srcdir)/src/midend/programAnalysis/dataflowAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/defUseAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/distributedMemoryAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/dominanceAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/graphAnalysis \
     -I$(top_srcdir)/src/midend/programAnalysis/pointerAnal \
     -I$(top_srcdir)/src/midend/programAnalysis/staticInterproceduralSlicing \
     -I$(top_srcdir)/src/midend/programAnalysis/valuePropagation \
     -I$(top_srcdir)/src/midend/programAnalysis/variableRenaming \
      $(ROSE_SIDEEFFECTS_INCLUDE) \
      $(ROSE_DATABASE_INCLUDE) \
      $(ROSE_GUI_INCLUDE) \
      $(ROSE_QT_INCLUDE) \
      $(ROSE_SQLITE_DATABASE_INCLUDE) \
			$(ROSE_SIDEEFFECT_INCLUDE) \
      $(SQLITE_DATABASE_INCLUDE) \
     -I$(top_srcdir)/src/midend/programTransformation/partialRedundancyElimination \
     -I$(top_srcdir)/src/midend/programTransformation/finiteDifferencing \
     -I$(top_srcdir)/src/midend/programTransformation/functionCallNormalization \
     -I$(top_srcdir)/src/midend/programTransformation/constantFolding \
     -I$(top_srcdir)/src/midend/programTransformation/implicitCodeGeneration \
     -I$(top_srcdir)/src/roseSupport \
     -I$(top_srcdir)/src/3rdPartyLibraries/MSTL \
     -I$(top_srcdir)/src/3rdPartyLibraries/libharu-2.1.0/include \
     -I$(top_builddir)/src/3rdPartyLibraries/libharu-2.1.0/include \
     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Framework \
     -I$(top_srcdir)/src/3rdPartyLibraries/qrose/Widgets  \
     -I$(top_srcdir)/src/util/graphs \
     -I$(top_srcdir)/src/midend/astUtil/astInterface \
     -I$(top_srcdir)/libltdl \
     $(ROSE_PHP_INCLUDES) \
     $(ROSE_YICES_INCLUDES) \
     $(ROSE_DWARF_INCLUDES) \
     $(ROSE_WINE_INCLUDES) \
     $(VALGRIND_CFLAGS) \
     $(SQLITE3_CFLAGS) \
     $(ROSE_BOOST_NORMAL_INCLUDE_PATH) -DBOOST_REGEX_MATCH_EXTRA \
     $(ROSE_PCH_INCLUDE) \
     $(INTEL_PIN_INCLUDE_PATHS) \
     $(ROSE_ETHER_INCLUDE)


# DQ (8/15/2010): I have removed these directories from the include paths since it no longer exists.
# I expect that the directories were removed and the include list not properly cleaned up.
# -I$(top_srcdir)/src/midend/binaryAnalyses/graph 
# -I$(top_srcdir)/src/midend/programTransformation/runtimeTransformation
# -I$(top_srcdir)/projects/dataBase

# DQ (12/22/2008): Move Boost directory to front and used "-isystem" option so
# that a system with a previous (older) installation of boost does not interfer 
# with the use of ROSE (and the version of boost specified using "--with-boost").
# $(BOOST_CPPFLAGS)

# DQ (10/28/2008): I think these should be included, I don't know why they 
# were removed (used with Microsoft Windows tests, and Yices tests).
# DQ: Not used currently 
#     $(ROSE_WINE_INCLUDES)

# DQ (5/3/2007): Removed from ROSE
#     -I$(top_srcdir)/src/midend/programAnalysis/dominatorTreesAndDominanceFrontiers
#     -I$(top_srcdir)/src/midend/programAnalysis/staticProgramSlicing

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly with make distcheck rule
#     -I$(top_srcdir)/src/midend/programAnalysis/annotationLanguageParser

# New way using two libraries
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.a $(top_builddir)/src/libedg.a
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.so $(top_builddir)/src/libedg.so
# ROSE_LIBS_WITH_PATH = $(libdir)/librose.so $(libdir)/libedg.so
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la
# ROSE_LIBS_WITH_PATH = $(top_builddir)/src/librose.la $(JAVA_JVM_LIB)
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_LIBS_WITH_PATH = $(ROSE_LIBS)

# ROSE_LIBS = $(top_builddir)/src/librose.la -lm $(LEXLIB) $(SQLITE_DATABASE_LIBS) $(LIB_QT) $(WAVE_LDFLAGS) $(WAVE_LIBRARIES) $(WAVE_LIBS) $(JAVA_JVM_LIB) $(RT_LIBS)
ROSE_LIBS = $(top_builddir)/src/librose.la -lm  $(JAVA_JVM_LINK) \
  $(SQLITE_DATABASE_LIBS) $(QT_LIBS)  $(BOOST_LDFLAGS) $(BOOST_DATE_TIME_LIB) \
  $(BOOST_THREAD_LIB) $(BOOST_FILESYSTEM_LIB) $(BOOST_PROGRAM_OPTIONS_LIB) \
  $(BOOST_REGEX_LIB)  $(BOOST_SYSTEM_LIB) $(BOOST_SERIALIZATION_LIB)  \
  $(BOOST_WAVE_LIB) $(SQLITE3_LDFLAGS)  $(RT_LIBS) \
  $(ROSE_YICES_LIBS_WITH_PATH) $(ROSE_PHP_LIBS_WITH_PATH) $(ROSE_DWARF_LIBS_WITH_PATH) \
  $(ROSE_GUI_LIBS_WITH_PATH) $(ROSE_QT_LIBS_WITH_PATH) $(ROSE_SSL_LIBS) $(ROSE_ETHER_LIBS) \
  $(ROSE_INTEL_COMPILER_MATH_LIBS)


# DQ (3/13/2009): Removed this from ROSE_LIBS because libtool warnings say it should be in AM_LDFLAGS
# (this is because it has been moved from being linked statically to being linked dynamically).
# $(ROSE_DWARF_LIBS_WITH_PATH)
# AM_LDFLAGS = $(ROSE_DWARF_LIBS_WITH_PATH)

# DQ (3/8/2009): This fails when I try to include it (fails in rose/src/testSharedRoseLib).
#  $(INTEL_PIN_LIB_PATHS) $(INTEL_PIN_LIBS)

# DQ (3/14/2009): It is cleaner to just required that Intel Pin support require setting
# the LD_LIBRARYPATH to include: $(INTEL_PIN_PATH)/intel64/lib-ext
# DQ (3/14/2009): Need to add rpath to LDFLAGS instead of LDADD (to follow libtool rules).
# LDFLAGS += $(ROSE_DWARF_LIBS_WITH_PATH)

# This ROSE_SEPARATE_LIBS is used for the linking of preprocessor.C used within
# development. The use of the seperate libraries make the linking faster where the
# main librose library is not built.  Libtool may have changed this so that we could
# just link to librose now just as easily, but one has to rebuild librose each time
# instead of just the individual shared library.
# JJW 7/25/2008: This should probably just be the same as ROSE_LIBS
ROSE_SEPARATE_LIBS = $(ROSE_LIBS)
#   $(LIB_QT) $(JAVA_JVM_LIB) 

# QY (11/2/04): removed -lastoutlining from ROSE_SEPARATE_LIBS 

# DQ (10/22/2004): Removed when I could not get annotation work to compile properly 
# with make distcheck rule 
# -lannotationLanguageParser(appears after -lvaluePropagation)

# Location of sample binary files (executables, libraries, etc) that serve as input to
# some of the binary analysis tests.
BINARY_SAMPLES = $(top_srcdir)/binaries/samples

# Test harness variables. See "rth_run.pl --help" for more info.
RTH_RUN = $(top_srcdir)/scripts/rth_run.pl \
	srcdir=$(srcdir) top_srcdir=$(top_srcdir) \
	VALGRIND=$(VALGRIND) BINARY_SAMPLES=$(BINARY_SAMPLES)

RTH_STATS = $(top_srcdir)/scripts/rth_stats.pl

# Add Projects that are associated with capabilities that belong to ROSE here
SUBDIRS = roseHPCT outliner intelPin binaryAnalysis
INCLUDES = $(ROSE_INCLUDES)

# all: exampleMakefile
ROSE_FLAGS = --edg:no_warnings -w
noinst_HEADERS = \
   coverage_funcsC.h \
   inputCode_collectComments.h


#varSubstCopy , disabled this one Liao, and sorted the list
# tutorial examples which will not be installed to ROSE_INS/bin
NOINST_TUTORIAL_EXAMPLES = \
   abstractHandle1 \
   abstractHandle2 \
   accumulatorAttributeTraversal \
   addAssignmentStmt \
   addComments \
   addArbitraryTextForUnparser \
   addExpression \
   addFunctionCalls \
   addFunctionDeclaration \
   addFunctionDeclaration2 \
   addFunctionDeclaration3 \
   addStruct \
   addVariableDeclaration \
   addVariableDeclaration2 \
   AST_PDF_Generator \
   astFileIO_GenerateBinaryFile \
   astFileIO_ReadMultipleASTs \
   ASTGraphGenerator \
   ASTGraphGeneratorCustomized \
   bin_example \
   binaryAnalysisExample \
   binaryAnalysis_symbolTable \
   binaryFileRead \
   binaryFileWrite \
   sb_callgraphAnalysis \
   buildCFG \
   changeFunction \
   charmSupport \
   classHierarchyGraph \
   classicObjectOrientedVisitorPatternMemoryPoolTraversal \
   classicObjectOrientedVisitorPatternTraversal \
   codeCoverage \
   codeGenerationFormatControl \
   collectComments \
   collectDefineDirectives \
   combinedTraversals \
   commandlineProcessing \
   constantFoldingTransformation \
   constantUnFoldingTransformation \
   customGraphGeneration \
   customGraphGenerationWithColors \
   customGraphGenerationWithFiltering \
   dataBaseUsage \
   dataFlowGraph \
   debuggingIRnodeToString \
   debuggingSourceCodePositionInformation \
   dwarfAnalysis \
   dwarfInstructionAddressToSourceLineAnalysis \
   findVariableDeclarations \
   generatingUniqueNamesFromDeclaration \
   graphGenerationOfSubtree \
   graphTraversal \
   identityTranslator \
   inheritedAndSynthesizedAttributeTraversal \
   inheritedAttributeTraversal \
   inlineTransformations \
   instrumentationExample \
   instrumentEndOfFunction \
   interveneAtVariables \
   lineReplacement \
   loopNestingInfoProcessing \
   loopOptimization \
   loopProcessor \
   loopRecognition \
   nestedQueryExample \
   nestedTraversal \
   partialRedundancyElimination \
   persistantAttributes \
   prePostTraversal \
   queryLibraryExample \
   reductionRecognition \
   resolveOverloadedFunction \
   seedBugsExample_arrayIndexing \
   scopeInformation \
   selectedFileTranslation \
   sprintf_to_snprintf  \
   switchWithoutDefault \
   symbolTableHandling \
   synthesizedAttributeTraversal \
   tauInstrumenter \
   templateParameter \
   traversalShortCircuit \
   traverseIRnodeTypes \
   typeInfoFromFunctionParameters \
   typeTransformation \
   virtualFunctionIdentification \
   visitorMemoryPoolTraversal \
   visitorTraversal \
   volatileTypeModifier \
   wholeASTGraphGenerator \
   wholeGraphAST \
   wholeGraphFilterOnPersistantAttributes

@ROSE_BUILD_OS_IS_CYGWIN_FALSE@sharedMemoryTraversals_SOURCES = sharedMemoryTraversals.C
binaryFileRead_SOURCES = binaryFileRead.C
binaryFileWrite_SOURCES = binaryFileWrite.C
ASTGraphGenerator_SOURCES = ASTGraphGenerator.C
ASTGraphGeneratorCustomized_SOURCES = ASTGraphGeneratorCustomized.C
AST_PDF_Generator_SOURCES = AST_PDF_Generator.C
wholeASTGraphGenerator_SOURCES = wholeASTGraphGenerator.C
identityTranslator_SOURCES = identityTranslator.C
lineReplacement_SOURCES = lineReplacement.C
queryLibraryExample_SOURCES = queryLibraryExample.C
nestedQueryExample_SOURCES = nestedQueryExample.C

# need to call this something different since it is likely
# to be easily confused with the visitorPatternTraversal.C
visitorTraversal_SOURCES = visitorTraversal.C
prePostTraversal_SOURCES = prePostTraversal.C
combinedTraversals_SOURCES = combinedTraversals.C
traverseIRnodeTypes_SOURCES = traverseIRnodeTypes.C
classicObjectOrientedVisitorPatternTraversal_SOURCES = classicObjectOrientedVisitorPatternTraversal.C
inheritedAttributeTraversal_SOURCES = inheritedAttributeTraversal.C
synthesizedAttributeTraversal_SOURCES = synthesizedAttributeTraversal.C
inheritedAndSynthesizedAttributeTraversal_SOURCES = inheritedAndSynthesizedAttributeTraversal.C
accumulatorAttributeTraversal_SOURCES = accumulatorAttributeTraversal.C
persistantAttributes_SOURCES = persistantAttributes.C
nestedTraversal_SOURCES = nestedTraversal.C
visitorMemoryPoolTraversal_SOURCES = visitorMemoryPoolTraversal.C
classicObjectOrientedVisitorPatternMemoryPoolTraversal_SOURCES = classicObjectOrientedVisitorPatternMemoryPoolTraversal.C
loopRecognition_SOURCES = loopRecognition.C
typeInfoFromFunctionParameters_SOURCES = typeInfoFromFunctionParameters.C
resolveOverloadedFunction_SOURCES = resolveOverloadedFunction.C
templateParameter_SOURCES = templateParameter.C
instrumentEndOfFunction_SOURCES = instrumentEndOfFunction.C
reductionRecognition_SOURCES = reductionRecognition.C
instrumentationExample_SOURCES = instrumentationExample.C
abstractHandle1_SOURCES = abstractHandle1.cpp
abstractHandle2_SOURCES = abstractHandle2.cpp
addVariableDeclaration_SOURCES = addVariableDeclaration.C
addVariableDeclaration2_SOURCES = addVariableDeclaration2.C
addAssignmentStmt_SOURCES = addAssignmentStmt.C
addExpression_SOURCES = addExpression.C
addFunctionCalls_SOURCES = addFunctionCalls.C
addFunctionDeclaration_SOURCES = addFunctionDeclaration.C
addFunctionDeclaration2_SOURCES = addFunctionDeclaration2.C
addFunctionDeclaration3_SOURCES = addFunctionDeclaration3.C
loopOptimization_SOURCES = loopOptimization.C
loopProcessor_SOURCES = LoopProcessor.C
buildCFG_SOURCES = buildCFG.C
defuseAnalysis_SOURCES = defuseAnalysis.C
binaryAnalysisExample_SOURCES = binaryAnalysisExample.C
sb_callgraphAnalysis_SOURCES = callGraphSourceBinaryExample.C 
binaryAnalysis_symbolTable_SOURCES = binaryAnalysis_symbolTable.C
bin_example_SOURCES = bin_example.C
buildCallGraph_SOURCES = buildCallGraph.C
livenessAnalysis_SOURCES = livenessAnalysis.C
charmSupport_SOURCES = CharmSupport.C
debuggingIRnodeToString_SOURCES = debuggingIRnodeToString.C
debuggingSourceCodePositionInformation_SOURCES = debuggingSourceCodePositionInformation.C
commandlineProcessing_SOURCES = commandlineProcessing.C
codeCoverage_SOURCES = codeCoverage.C coverageCodeFromShmuel.c
interveneAtVariables_SOURCES = interveneAtVariables.C
changeFunction_SOURCES = changeFunction.C
classHierarchyGraph_SOURCES = classHierarchyGraph.C
dataBaseUsage_SOURCES = dataBaseUsage.C
dwarfAnalysis_SOURCES = dwarfAnalysis.C
dwarfInstructionAddressToSourceLineAnalysis_SOURCES = dwarfInstructionAddressToSourceLineAnalysis.C
loopNestingInfoProcessing_SOURCES = loopNestingInfoProcessing.C
tauInstrumenter_SOURCES = tauInstrumenter.C
typeTransformation_SOURCES = typeTransformation.C
astFileIO_GenerateBinaryFile_SOURCES = astFileIO_GenerateBinaryFile.C
generatingUniqueNamesFromDeclaration_SOURCES = generatingUniqueNamesFromDeclaration.C
symbolTableHandling_SOURCES = symbolTableHandling.C
scopeInformation_SOURCES = scopeInformation.C
customGraphGeneration_SOURCES = customGraphGeneration.C
inlineTransformations_SOURCES = inlineTransformations.C
addComments_SOURCES = addComments.C
addArbitraryTextForUnparser_SOURCES = addArbitraryTextForUnparser.C
collectComments_SOURCES = collectComments.C
collectDefineDirectives_SOURCES = collectDefineDirectives.C
partialRedundancyElimination_SOURCES = partialRedundancyElimination.C
codeGenerationFormatControl_SOURCES = codeGenerationFormatControl.C
dataFlowGraph_SOURCES = dataFlowGraph.C
customGraphGenerationWithFiltering_SOURCES = customGraphGenerationWithFiltering.C
graphTraversal_SOURCES = graphTraversal.C
wholeGraphAST_SOURCES = wholeGraphAST.C
traversalShortCircuit_SOURCES = traversalShortCircuit.C
customGraphGenerationWithColors_SOURCES = customGraphGenerationWithColors.C
astFileIO_ReadMultipleASTs_SOURCES = astFileIO_ReadMultipleASTs.C
constantFoldingTransformation_SOURCES = constantFoldingTransformation.C
constantUnFoldingTransformation_SOURCES = constantUnFoldingTransformation.C
selectedFileTranslation_SOURCES = selectedFileTranslation.C
wholeGraphFilterOnPersistantAttributes_SOURCES = wholeGraphFilterOnPersistantAttributes.C
graphGenerationOfSubtree_SOURCES = graphGenerationOfSubtree.C
virtualCFG_SOURCES = virtualCFG.C
interproceduralCFG_SOURCES = interproceduralCFG.C
virtualFunctionIdentification_SOURCES = virtualFunctionIdentification.C

#varSubstCopy_SOURCES = varSubstCopy.C
switchWithoutDefault_SOURCES = switchWithoutDefault.C
addStruct_SOURCES = addStruct.C
sprintf_to_snprintf_SOURCES = sprintf_to_snprintf.C
seedBugsExample_arrayIndexing_SOURCES = seedBugsExample_arrayIndexing.C
volatileTypeModifier_SOURCES = volatileTypeModifier.C
findVariableDeclarations_SOURCES = findVariableDeclarations.C

# Use this to control use of -lrose -ledg vs. the very long list 
# of separate libraries which is faster to use in development.
# LDADD = $(LIBS_WITH_RPATH) $(ROSE_LIBS)
LDADD = $(LIBS_WITH_RPATH) $(WAVE_LDFLAGS) $(ROSE_SEPARATE_LIBS) 

# #####################################
# Tests for debugging tutorial examples
# #####################################
VALGRIND_OPTIONS = --tool=memcheck -v --num-callers=80 --leak-check=no --error-limit=no --show-reachable=yes
# VALGRIND = /usr/apps/valgrind/new/bin/valgrind $(VALGRIND_OPTIONS)
VALGRIND = 
loopOptimizationOutputFiles = \
   rose_inputCode_LoopOptimization_blocking.C \
   rose_inputCode_LoopOptimization_fusion.C \
   rose_inputCode_LoopOptimization_mm.C \
   rose_inputCode_LoopOptimization_dgemm.C \
   rose_inputCode_LoopOptimization_lufac.C \
   rose_inputCode_LoopOptimization_tridvpk.C


# TAU_INCLUDES = -I/home/dquinlan/TAU/tau-2.14.8/include
TAU_INCLUDES = -I$(srcdir)/TAU_INCLUDE_DIR

# #####################################
# Output files use in tutorial
# #####################################
traversalOutput = \
   visitorTraversal.out \
   prePostTraversal.out \
   combinedTraversals.out \
   sharedMemoryTraversals.out \
   classicObjectOrientedVisitorPatternTraversal.out \
   inheritedAttributeTraversal.out \
   synthesizedAttributeTraversal.out \
   inheritedAndSynthesizedAttributeTraversal.out \
   accumulatorAttributeTraversal.out \
   persistantAttributes.out \
   visitorMemoryPoolTraversal.out \
   classicObjectOrientedVisitorPatternMemoryPoolTraversal.out \
   traverseIRnodeTypes.out \
   nestedTraversal.out

# .out suffix may cause conflicts with a temporary file used by makefile/libtool
# using a different name is highly recommended!! Liao, 10/15/2008
generatedCodeExamples = \
   rose_inputCode_inlineTransformations.C \
   rose_inputCode_partialRedundancyElimination.C \
   rose_inputCode_tauInstrumenter.C \
   inputCode_ASTGraphGenerator.pdf \
   inputCode_ASTGraphGeneratorCustomized.pdf \
   inputCode_AST_PDF_Generator.pdf \
   inputCode_ASTWholeGraphGenerator_small.pdf \
   inputCode_ASTWholeGraphGenerator_large.pdf \
   rose_inputCode_IdentityTranslator.C \
   queryLibrary.out \
   nestedQuery.out \
   $(traversalOutput) \
   rose_inputCode_AddFunctionDeclaration.C \
   rose_inputCode_AddFunctionDeclaration2.C \
   rose_inputCode_AddFunctionDeclaration3.C \
   rose_inputCode_AddVariableDeclaration.C \
   rose_inputCode_AddAssignmentStmt.C \
   abstractHandle1.outx \
   abstractHandle2.outx \
   rose_inputCode_AddExpression.C \
   rose_inputCode_AddFunctionCalls.C \
   rose_inputCode_InstrumentationTranslator.C \
   rose_inputCode_instrumentEndOfFunction.C \
   loopRecognition.out \
   reductionRecognition.out \
   typeInfoFromFunctionParameters.out \
   resolveOverloadedFunction.out \
   templateParameter.out \
   rose_inputCode_LoopOptimization_blocking.C \
   rose_inputCode_LoopOptimization_fusion.C \
   rose_inputCode_LoopOptimization_mm.C \
   rose_inputCode_LoopOptimization_dgemm.C \
   rose_inputCode_LoopOptimization_lufac.C \
   rose_inputCode_LoopOptimization_tridvpk.C \
   controlFlowGraph.pdf \
   vcfg_testIf_debug.pdf \
   debuggingIRnodeToString.out \
   debuggingSourceCodePositionInformation.out \
   commandlineProcessing.out \
   charmSupport.out \
   codeCoverage.out \
   callGraph.pdf \
   liveness.pdf \
   classHierarchyGraph.pdf \
   rose_inputCode_templateExample1.C \
   rose_inputCode_templateExample2.C \
   dataBaseExample1.out \
   loopNestingInfoProcessing.out \
   loopProcessor.C.aa loopProcessor.C.ab \
   generatingUniqueNamesFromDeclaration.out \
   generatingUniqueNamesFromDeclaration2.out \
   symbolTableHandling.out \
   scopeInformation.out \
   rose_inputCode_typeTransformation.C \
   astFileIO_GenerateBinaryFile.out \
   customGraph.pdf \
   customGraphWithFiltering.pdf \
   graphTraversal.pdf \
   rose_inputCode_addComments.C \
   rose_inputCode_addArbitraryTextForUnparser.C \
   rose_inputCode_codeGenerationFormatControl.C \
   rose_inputCode_addStruct.C \
   traversalShortCircuit.out \
   wholeGraphAST.pdf \
   collectCommentsSkipHeaderFiles.out \
   collectCommentsAcrossHeaderFiles.out \
   collectDefineDirectives.out \
   defuseAnalysis_pic1.pdf \
   binaryAnalysis_pic1.pdf \
   binaryAnalysis_pic3.pdf \
   rose_inputCode_seedBugsExample_arrayIndexing.C \
   rose_inputCode_VolatileTypeModifier.C \
   inputCode_dwarfAnalysis.pdf \
   inputCode_dwarfAnalysis.out


# Note that we have made multiple copies of "inputCode_ExampleTraversals.C"
# so that the processing could be done in parallel with out collisions.
EXTRA_DIST = CMakeLists.txt \
   inputCode_1.C \
   inputCode_BuildCFG.C \
   inputCode_InstrumentationTranslator.C \
   inputCode_instrumentEndOfFunction.C \
   inputCode_wholeAST_1.C \
   inputCode_wholeAST_2.C \
   inputCode_QueryLibrary.C \
   inputCode_AddFunctionDeclaration.C \
   inputCode_AddFunctionDeclaration2.C \
   inputCode_AddFunctionDeclaration3.C \
   inputCode_AddExpression.C \
   inputCode_AddAssignmentStmt.C \
   inputCode_AbstractHandle1.cpp \
   inputCode_AbstractHandle2.cpp \
   inputCode_AddFunctionCalls.C \
   inputCode_ExampleDebugging.C \
   inputCode_LoopOptimization.C \
   inputCode_ResolvingOverloadedFunctions.C \
   inputCode_AddVariableDeclaration.C \
   inputCode_ExampleTraversals.C \
   inputCode_ExampleTraversals_1.C \
   inputCode_ExampleTraversals_2.C \
   inputCode_ExampleTraversals_3.C \
   inputCode_ExampleTraversals_4.C \
   inputCode_ExampleTraversals_5.C \
   inputCode_ExampleTraversals_6.C \
   inputCode_ExampleTraversals_7.C \
   inputCode_ExampleTraversals_8.C \
   inputCode_ExampleTraversals_9.C \
   inputCode_ExampleTraversals_10.C \
   inputCode_ExampleTraversals_11.C \
   inputCode_ExampleTraversals_12.C \
   inputCode_ExampleTraversals_13.C \
   inputCode_ExampleTraversals_14.C \
   inputCode_ExampleTraversals_15.C \
   inputCode_ExampleTraversals_16.C \
   inputCode_ExampleTraversals_17.C \
   inputCode_ExampleTraversals_18.C \
   inputCode_LoopOptimization_blocking.C \
   inputCode_LoopOptimization_fusion.C \
   inputCode_LoopOptimization_mm.C \
   inputCode_LoopOptimization_dgemm.C \
   inputCode_LoopOptimization_lufac.C \
   inputCode_LoopOptimization_tridvpk.C \
   inputCode_TemplateParameterExtration.C \
   inputCode_ASTGraphGenerator.C \
   inputCode_ASTGraphGeneratorCustomized.C \
   inputCode_IdentityTranslator.C \
   inputCode_LoopRecognition.C \
   inputCode_TypeInfoFromFunctionParameters.C \
   inputCode_ExampleCodeCoverage.C \
   exampleMakefile.in \
   slicingExample.C \
   inputCode_ExampleCharmSupport.C \
   inputCode_templateExample1.C \
   inputCode_templateExample2.C \
   inputCode_dataBaseExample1.C \
   inputCode_loopNestingInfoProcessing.C \
   inputCode_ChangeFunctionExample.C \
   inputCode_interveneAtVariables.C \
   inputCode_tauInstrumenter.C \
   inputCode_typeTransformation.C \
   inputCode_astFileIO_GenerateBinaryFile.C \
   inputCode_generatingUniqueNamesFromDeclaration.C \
   inputCode_generatingUniqueNamesFromDeclaration2.C \
   inputCode_scopeInformation.C \
   inputCode_BuildCG.C \
   inputCode_inlineTransformations.C \
   inputCode_livenessAnalysis.c \
   inputCode_NestedQuery.C \
   inputCode_ControlFlowGraphAnalysis.C \
   inputCode_addComments.C \
   inputCode_addArbitraryTextForUnparser.C \
   inputCode_partialRedundancyElimination.C \
   inputCode_codeGenerationFormatControl.C \
   inputCode_dataFlowGraphAnalysis.C \
   inputCode_wholeGraphAST.C \
   inputCode_testsymbolTableHandling.C \
   inputCode_traversalShortCircuit.C \
   inputCode_collectComments.C \
   inputCode_ClassHierarchyGraph.C \
   inputCode_VolatileTypeModifier.C \
   input_defuseAnalysis.C \
   input_runtimeErrorCheck.C \
   input_runtimeErrorCheck2.C \
   attributeCopyExamples.C \
   TAU_INCLUDE_DIR \
   inputCode_addStruct.C \
   rose_bin_example_backup.s \
   buffer2.bin \
   inputCode_seedBugsExample_arrayIndexing.C \
   inputCode_dwarfAnalysis.C \
   inputCode_reductionRecognition.C \
   livenessAnalysis-2.C


# disabled this one due to problem with copy mechanism, Liao
#   inputCode_varSubstCopy.C 
CLEANFILES = rose_bin_example.s callgraph.gml
all: all-recursive

.SUFFIXES:
.SUFFIXES: .C .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/config/Makefile.for.ROSE.includes.and.libs $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign  --ignore-deps tutorial/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --foreign  --ignore-deps tutorial/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
exampleMakefile: $(top_builddir)/config.status $(srcdir)/exampleMakefile.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
ASTGraphGenerator$(EXEEXT): $(ASTGraphGenerator_OBJECTS) $(ASTGraphGenerator_DEPENDENCIES) 
	@rm -f ASTGraphGenerator$(EXEEXT)
	$(CXXLINK) $(ASTGraphGenerator_LDFLAGS) $(ASTGraphGenerator_OBJECTS) $(ASTGraphGenerator_LDADD) $(LIBS)
ASTGraphGeneratorCustomized$(EXEEXT): $(ASTGraphGeneratorCustomized_OBJECTS) $(ASTGraphGeneratorCustomized_DEPENDENCIES) 
	@rm -f ASTGraphGeneratorCustomized$(EXEEXT)
	$(CXXLINK) $(ASTGraphGeneratorCustomized_LDFLAGS) $(ASTGraphGeneratorCustomized_OBJECTS) $(ASTGraphGeneratorCustomized_LDADD) $(LIBS)
AST_PDF_Generator$(EXEEXT): $(AST_PDF_Generator_OBJECTS) $(AST_PDF_Generator_DEPENDENCIES) 
	@rm -f AST_PDF_Generator$(EXEEXT)
	$(CXXLINK) $(AST_PDF_Generator_LDFLAGS) $(AST_PDF_Generator_OBJECTS) $(AST_PDF_Generator_LDADD) $(LIBS)
abstractHandle1$(EXEEXT): $(abstractHandle1_OBJECTS) $(abstractHandle1_DEPENDENCIES) 
	@rm -f abstractHandle1$(EXEEXT)
	$(CXXLINK) $(abstractHandle1_LDFLAGS) $(abstractHandle1_OBJECTS) $(abstractHandle1_LDADD) $(LIBS)
abstractHandle2$(EXEEXT): $(abstractHandle2_OBJECTS) $(abstractHandle2_DEPENDENCIES) 
	@rm -f abstractHandle2$(EXEEXT)
	$(CXXLINK) $(abstractHandle2_LDFLAGS) $(abstractHandle2_OBJECTS) $(abstractHandle2_LDADD) $(LIBS)
accumulatorAttributeTraversal$(EXEEXT): $(accumulatorAttributeTraversal_OBJECTS) $(accumulatorAttributeTraversal_DEPENDENCIES) 
	@rm -f accumulatorAttributeTraversal$(EXEEXT)
	$(CXXLINK) $(accumulatorAttributeTraversal_LDFLAGS) $(accumulatorAttributeTraversal_OBJECTS) $(accumulatorAttributeTraversal_LDADD) $(LIBS)
addArbitraryTextForUnparser$(EXEEXT): $(addArbitraryTextForUnparser_OBJECTS) $(addArbitraryTextForUnparser_DEPENDENCIES) 
	@rm -f addArbitraryTextForUnparser$(EXEEXT)
	$(CXXLINK) $(addArbitraryTextForUnparser_LDFLAGS) $(addArbitraryTextForUnparser_OBJECTS) $(addArbitraryTextForUnparser_LDADD) $(LIBS)
addAssignmentStmt$(EXEEXT): $(addAssignmentStmt_OBJECTS) $(addAssignmentStmt_DEPENDENCIES) 
	@rm -f addAssignmentStmt$(EXEEXT)
	$(CXXLINK) $(addAssignmentStmt_LDFLAGS) $(addAssignmentStmt_OBJECTS) $(addAssignmentStmt_LDADD) $(LIBS)
addComments$(EXEEXT): $(addComments_OBJECTS) $(addComments_DEPENDENCIES) 
	@rm -f addComments$(EXEEXT)
	$(CXXLINK) $(addComments_LDFLAGS) $(addComments_OBJECTS) $(addComments_LDADD) $(LIBS)
addExpression$(EXEEXT): $(addExpression_OBJECTS) $(addExpression_DEPENDENCIES) 
	@rm -f addExpression$(EXEEXT)
	$(CXXLINK) $(addExpression_LDFLAGS) $(addExpression_OBJECTS) $(addExpression_LDADD) $(LIBS)
addFunctionCalls$(EXEEXT): $(addFunctionCalls_OBJECTS) $(addFunctionCalls_DEPENDENCIES) 
	@rm -f addFunctionCalls$(EXEEXT)
	$(CXXLINK) $(addFunctionCalls_LDFLAGS) $(addFunctionCalls_OBJECTS) $(addFunctionCalls_LDADD) $(LIBS)
addFunctionDeclaration$(EXEEXT): $(addFunctionDeclaration_OBJECTS) $(addFunctionDeclaration_DEPENDENCIES) 
	@rm -f addFunctionDeclaration$(EXEEXT)
	$(CXXLINK) $(addFunctionDeclaration_LDFLAGS) $(addFunctionDeclaration_OBJECTS) $(addFunctionDeclaration_LDADD) $(LIBS)
addFunctionDeclaration2$(EXEEXT): $(addFunctionDeclaration2_OBJECTS) $(addFunctionDeclaration2_DEPENDENCIES) 
	@rm -f addFunctionDeclaration2$(EXEEXT)
	$(CXXLINK) $(addFunctionDeclaration2_LDFLAGS) $(addFunctionDeclaration2_OBJECTS) $(addFunctionDeclaration2_LDADD) $(LIBS)
addFunctionDeclaration3$(EXEEXT): $(addFunctionDeclaration3_OBJECTS) $(addFunctionDeclaration3_DEPENDENCIES) 
	@rm -f addFunctionDeclaration3$(EXEEXT)
	$(CXXLINK) $(addFunctionDeclaration3_LDFLAGS) $(addFunctionDeclaration3_OBJECTS) $(addFunctionDeclaration3_LDADD) $(LIBS)
addStruct$(EXEEXT): $(addStruct_OBJECTS) $(addStruct_DEPENDENCIES) 
	@rm -f addStruct$(EXEEXT)
	$(CXXLINK) $(addStruct_LDFLAGS) $(addStruct_OBJECTS) $(addStruct_LDADD) $(LIBS)
addVariableDeclaration$(EXEEXT): $(addVariableDeclaration_OBJECTS) $(addVariableDeclaration_DEPENDENCIES) 
	@rm -f addVariableDeclaration$(EXEEXT)
	$(CXXLINK) $(addVariableDeclaration_LDFLAGS) $(addVariableDeclaration_OBJECTS) $(addVariableDeclaration_LDADD) $(LIBS)
addVariableDeclaration2$(EXEEXT): $(addVariableDeclaration2_OBJECTS) $(addVariableDeclaration2_DEPENDENCIES) 
	@rm -f addVariableDeclaration2$(EXEEXT)
	$(CXXLINK) $(addVariableDeclaration2_LDFLAGS) $(addVariableDeclaration2_OBJECTS) $(addVariableDeclaration2_LDADD) $(LIBS)
astFileIO_GenerateBinaryFile$(EXEEXT): $(astFileIO_GenerateBinaryFile_OBJECTS) $(astFileIO_GenerateBinaryFile_DEPENDENCIES) 
	@rm -f astFileIO_GenerateBinaryFile$(EXEEXT)
	$(CXXLINK) $(astFileIO_GenerateBinaryFile_LDFLAGS) $(astFileIO_GenerateBinaryFile_OBJECTS) $(astFileIO_GenerateBinaryFile_LDADD) $(LIBS)
astFileIO_ReadMultipleASTs$(EXEEXT): $(astFileIO_ReadMultipleASTs_OBJECTS) $(astFileIO_ReadMultipleASTs_DEPENDENCIES) 
	@rm -f astFileIO_ReadMultipleASTs$(EXEEXT)
	$(CXXLINK) $(astFileIO_ReadMultipleASTs_LDFLAGS) $(astFileIO_ReadMultipleASTs_OBJECTS) $(astFileIO_ReadMultipleASTs_LDADD) $(LIBS)
bin_example$(EXEEXT): $(bin_example_OBJECTS) $(bin_example_DEPENDENCIES) 
	@rm -f bin_example$(EXEEXT)
	$(CXXLINK) $(bin_example_LDFLAGS) $(bin_example_OBJECTS) $(bin_example_LDADD) $(LIBS)
binaryAnalysisExample$(EXEEXT): $(binaryAnalysisExample_OBJECTS) $(binaryAnalysisExample_DEPENDENCIES) 
	@rm -f binaryAnalysisExample$(EXEEXT)
	$(CXXLINK) $(binaryAnalysisExample_LDFLAGS) $(binaryAnalysisExample_OBJECTS) $(binaryAnalysisExample_LDADD) $(LIBS)
binaryAnalysis_symbolTable$(EXEEXT): $(binaryAnalysis_symbolTable_OBJECTS) $(binaryAnalysis_symbolTable_DEPENDENCIES) 
	@rm -f binaryAnalysis_symbolTable$(EXEEXT)
	$(CXXLINK) $(binaryAnalysis_symbolTable_LDFLAGS) $(binaryAnalysis_symbolTable_OBJECTS) $(binaryAnalysis_symbolTable_LDADD) $(LIBS)
binaryFileRead$(EXEEXT): $(binaryFileRead_OBJECTS) $(binaryFileRead_DEPENDENCIES) 
	@rm -f binaryFileRead$(EXEEXT)
	$(CXXLINK) $(binaryFileRead_LDFLAGS) $(binaryFileRead_OBJECTS) $(binaryFileRead_LDADD) $(LIBS)
binaryFileWrite$(EXEEXT): $(binaryFileWrite_OBJECTS) $(binaryFileWrite_DEPENDENCIES) 
	@rm -f binaryFileWrite$(EXEEXT)
	$(CXXLINK) $(binaryFileWrite_LDFLAGS) $(binaryFileWrite_OBJECTS) $(binaryFileWrite_LDADD) $(LIBS)
buildCFG$(EXEEXT): $(buildCFG_OBJECTS) $(buildCFG_DEPENDENCIES) 
	@rm -f buildCFG$(EXEEXT)
	$(CXXLINK) $(buildCFG_LDFLAGS) $(buildCFG_OBJECTS) $(buildCFG_LDADD) $(LIBS)
buildCallGraph$(EXEEXT): $(buildCallGraph_OBJECTS) $(buildCallGraph_DEPENDENCIES) 
	@rm -f buildCallGraph$(EXEEXT)
	$(CXXLINK) $(buildCallGraph_LDFLAGS) $(buildCallGraph_OBJECTS) $(buildCallGraph_LDADD) $(LIBS)
changeFunction$(EXEEXT): $(changeFunction_OBJECTS) $(changeFunction_DEPENDENCIES) 
	@rm -f changeFunction$(EXEEXT)
	$(CXXLINK) $(changeFunction_LDFLAGS) $(changeFunction_OBJECTS) $(changeFunction_LDADD) $(LIBS)
charmSupport$(EXEEXT): $(charmSupport_OBJECTS) $(charmSupport_DEPENDENCIES) 
	@rm -f charmSupport$(EXEEXT)
	$(CXXLINK) $(charmSupport_LDFLAGS) $(charmSupport_OBJECTS) $(charmSupport_LDADD) $(LIBS)
classHierarchyGraph$(EXEEXT): $(classHierarchyGraph_OBJECTS) $(classHierarchyGraph_DEPENDENCIES) 
	@rm -f classHierarchyGraph$(EXEEXT)
	$(CXXLINK) $(classHierarchyGraph_LDFLAGS) $(classHierarchyGraph_OBJECTS) $(classHierarchyGraph_LDADD) $(LIBS)
classicObjectOrientedVisitorPatternMemoryPoolTraversal$(EXEEXT): $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS) $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_DEPENDENCIES) 
	@rm -f classicObjectOrientedVisitorPatternMemoryPoolTraversal$(EXEEXT)
	$(CXXLINK) $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_LDFLAGS) $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_OBJECTS) $(classicObjectOrientedVisitorPatternMemoryPoolTraversal_LDADD) $(LIBS)
classicObjectOrientedVisitorPatternTraversal$(EXEEXT): $(classicObjectOrientedVisitorPatternTraversal_OBJECTS) $(classicObjectOrientedVisitorPatternTraversal_DEPENDENCIES) 
	@rm -f classicObjectOrientedVisitorPatternTraversal$(EXEEXT)
	$(CXXLINK) $(classicObjectOrientedVisitorPatternTraversal_LDFLAGS) $(classicObjectOrientedVisitorPatternTraversal_OBJECTS) $(classicObjectOrientedVisitorPatternTraversal_LDADD) $(LIBS)
codeCoverage$(EXEEXT): $(codeCoverage_OBJECTS) $(codeCoverage_DEPENDENCIES) 
	@rm -f codeCoverage$(EXEEXT)
	$(CXXLINK) $(codeCoverage_LDFLAGS) $(codeCoverage_OBJECTS) $(codeCoverage_LDADD) $(LIBS)
codeGenerationFormatControl$(EXEEXT): $(codeGenerationFormatControl_OBJECTS) $(codeGenerationFormatControl_DEPENDENCIES) 
	@rm -f codeGenerationFormatControl$(EXEEXT)
	$(CXXLINK) $(codeGenerationFormatControl_LDFLAGS) $(codeGenerationFormatControl_OBJECTS) $(codeGenerationFormatControl_LDADD) $(LIBS)
collectComments$(EXEEXT): $(collectComments_OBJECTS) $(collectComments_DEPENDENCIES) 
	@rm -f collectComments$(EXEEXT)
	$(CXXLINK) $(collectComments_LDFLAGS) $(collectComments_OBJECTS) $(collectComments_LDADD) $(LIBS)
collectDefineDirectives$(EXEEXT): $(collectDefineDirectives_OBJECTS) $(collectDefineDirectives_DEPENDENCIES) 
	@rm -f collectDefineDirectives$(EXEEXT)
	$(CXXLINK) $(collectDefineDirectives_LDFLAGS) $(collectDefineDirectives_OBJECTS) $(collectDefineDirectives_LDADD) $(LIBS)
combinedTraversals$(EXEEXT): $(combinedTraversals_OBJECTS) $(combinedTraversals_DEPENDENCIES) 
	@rm -f combinedTraversals$(EXEEXT)
	$(CXXLINK) $(combinedTraversals_LDFLAGS) $(combinedTraversals_OBJECTS) $(combinedTraversals_LDADD) $(LIBS)
commandlineProcessing$(EXEEXT): $(commandlineProcessing_OBJECTS) $(commandlineProcessing_DEPENDENCIES) 
	@rm -f commandlineProcessing$(EXEEXT)
	$(CXXLINK) $(commandlineProcessing_LDFLAGS) $(commandlineProcessing_OBJECTS) $(commandlineProcessing_LDADD) $(LIBS)
constantFoldingTransformation$(EXEEXT): $(constantFoldingTransformation_OBJECTS) $(constantFoldingTransformation_DEPENDENCIES) 
	@rm -f constantFoldingTransformation$(EXEEXT)
	$(CXXLINK) $(constantFoldingTransformation_LDFLAGS) $(constantFoldingTransformation_OBJECTS) $(constantFoldingTransformation_LDADD) $(LIBS)
constantUnFoldingTransformation$(EXEEXT): $(constantUnFoldingTransformation_OBJECTS) $(constantUnFoldingTransformation_DEPENDENCIES) 
	@rm -f constantUnFoldingTransformation$(EXEEXT)
	$(CXXLINK) $(constantUnFoldingTransformation_LDFLAGS) $(constantUnFoldingTransformation_OBJECTS) $(constantUnFoldingTransformation_LDADD) $(LIBS)
customGraphGeneration$(EXEEXT): $(customGraphGeneration_OBJECTS) $(customGraphGeneration_DEPENDENCIES) 
	@rm -f customGraphGeneration$(EXEEXT)
	$(CXXLINK) $(customGraphGeneration_LDFLAGS) $(customGraphGeneration_OBJECTS) $(customGraphGeneration_LDADD) $(LIBS)
customGraphGenerationWithColors$(EXEEXT): $(customGraphGenerationWithColors_OBJECTS) $(customGraphGenerationWithColors_DEPENDENCIES) 
	@rm -f customGraphGenerationWithColors$(EXEEXT)
	$(CXXLINK) $(customGraphGenerationWithColors_LDFLAGS) $(customGraphGenerationWithColors_OBJECTS) $(customGraphGenerationWithColors_LDADD) $(LIBS)
customGraphGenerationWithFiltering$(EXEEXT): $(customGraphGenerationWithFiltering_OBJECTS) $(customGraphGenerationWithFiltering_DEPENDENCIES) 
	@rm -f customGraphGenerationWithFiltering$(EXEEXT)
	$(CXXLINK) $(customGraphGenerationWithFiltering_LDFLAGS) $(customGraphGenerationWithFiltering_OBJECTS) $(customGraphGenerationWithFiltering_LDADD) $(LIBS)
dataBaseUsage$(EXEEXT): $(dataBaseUsage_OBJECTS) $(dataBaseUsage_DEPENDENCIES) 
	@rm -f dataBaseUsage$(EXEEXT)
	$(CXXLINK) $(dataBaseUsage_LDFLAGS) $(dataBaseUsage_OBJECTS) $(dataBaseUsage_LDADD) $(LIBS)
dataFlowGraph$(EXEEXT): $(dataFlowGraph_OBJECTS) $(dataFlowGraph_DEPENDENCIES) 
	@rm -f dataFlowGraph$(EXEEXT)
	$(CXXLINK) $(dataFlowGraph_LDFLAGS) $(dataFlowGraph_OBJECTS) $(dataFlowGraph_LDADD) $(LIBS)
debuggingIRnodeToString$(EXEEXT): $(debuggingIRnodeToString_OBJECTS) $(debuggingIRnodeToString_DEPENDENCIES) 
	@rm -f debuggingIRnodeToString$(EXEEXT)
	$(CXXLINK) $(debuggingIRnodeToString_LDFLAGS) $(debuggingIRnodeToString_OBJECTS) $(debuggingIRnodeToString_LDADD) $(LIBS)
debuggingSourceCodePositionInformation$(EXEEXT): $(debuggingSourceCodePositionInformation_OBJECTS) $(debuggingSourceCodePositionInformation_DEPENDENCIES) 
	@rm -f debuggingSourceCodePositionInformation$(EXEEXT)
	$(CXXLINK) $(debuggingSourceCodePositionInformation_LDFLAGS) $(debuggingSourceCodePositionInformation_OBJECTS) $(debuggingSourceCodePositionInformation_LDADD) $(LIBS)
defuseAnalysis$(EXEEXT): $(defuseAnalysis_OBJECTS) $(defuseAnalysis_DEPENDENCIES) 
	@rm -f defuseAnalysis$(EXEEXT)
	$(CXXLINK) $(defuseAnalysis_LDFLAGS) $(defuseAnalysis_OBJECTS) $(defuseAnalysis_LDADD) $(LIBS)
dwarfAnalysis$(EXEEXT): $(dwarfAnalysis_OBJECTS) $(dwarfAnalysis_DEPENDENCIES) 
	@rm -f dwarfAnalysis$(EXEEXT)
	$(CXXLINK) $(dwarfAnalysis_LDFLAGS) $(dwarfAnalysis_OBJECTS) $(dwarfAnalysis_LDADD) $(LIBS)
dwarfInstructionAddressToSourceLineAnalysis$(EXEEXT): $(dwarfInstructionAddressToSourceLineAnalysis_OBJECTS) $(dwarfInstructionAddressToSourceLineAnalysis_DEPENDENCIES) 
	@rm -f dwarfInstructionAddressToSourceLineAnalysis$(EXEEXT)
	$(CXXLINK) $(dwarfInstructionAddressToSourceLineAnalysis_LDFLAGS) $(dwarfInstructionAddressToSourceLineAnalysis_OBJECTS) $(dwarfInstructionAddressToSourceLineAnalysis_LDADD) $(LIBS)
findVariableDeclarations$(EXEEXT): $(findVariableDeclarations_OBJECTS) $(findVariableDeclarations_DEPENDENCIES) 
	@rm -f findVariableDeclarations$(EXEEXT)
	$(CXXLINK) $(findVariableDeclarations_LDFLAGS) $(findVariableDeclarations_OBJECTS) $(findVariableDeclarations_LDADD) $(LIBS)
generatingUniqueNamesFromDeclaration$(EXEEXT): $(generatingUniqueNamesFromDeclaration_OBJECTS) $(generatingUniqueNamesFromDeclaration_DEPENDENCIES) 
	@rm -f generatingUniqueNamesFromDeclaration$(EXEEXT)
	$(CXXLINK) $(generatingUniqueNamesFromDeclaration_LDFLAGS) $(generatingUniqueNamesFromDeclaration_OBJECTS) $(generatingUniqueNamesFromDeclaration_LDADD) $(LIBS)
graphGenerationOfSubtree$(EXEEXT): $(graphGenerationOfSubtree_OBJECTS) $(graphGenerationOfSubtree_DEPENDENCIES) 
	@rm -f graphGenerationOfSubtree$(EXEEXT)
	$(CXXLINK) $(graphGenerationOfSubtree_LDFLAGS) $(graphGenerationOfSubtree_OBJECTS) $(graphGenerationOfSubtree_LDADD) $(LIBS)
graphTraversal$(EXEEXT): $(graphTraversal_OBJECTS) $(graphTraversal_DEPENDENCIES) 
	@rm -f graphTraversal$(EXEEXT)
	$(CXXLINK) $(graphTraversal_LDFLAGS) $(graphTraversal_OBJECTS) $(graphTraversal_LDADD) $(LIBS)
identityTranslator$(EXEEXT): $(identityTranslator_OBJECTS) $(identityTranslator_DEPENDENCIES) 
	@rm -f identityTranslator$(EXEEXT)
	$(CXXLINK) $(identityTranslator_LDFLAGS) $(identityTranslator_OBJECTS) $(identityTranslator_LDADD) $(LIBS)
inheritedAndSynthesizedAttributeTraversal$(EXEEXT): $(inheritedAndSynthesizedAttributeTraversal_OBJECTS) $(inheritedAndSynthesizedAttributeTraversal_DEPENDENCIES) 
	@rm -f inheritedAndSynthesizedAttributeTraversal$(EXEEXT)
	$(CXXLINK) $(inheritedAndSynthesizedAttributeTraversal_LDFLAGS) $(inheritedAndSynthesizedAttributeTraversal_OBJECTS) $(inheritedAndSynthesizedAttributeTraversal_LDADD) $(LIBS)
inheritedAttributeTraversal$(EXEEXT): $(inheritedAttributeTraversal_OBJECTS) $(inheritedAttributeTraversal_DEPENDENCIES) 
	@rm -f inheritedAttributeTraversal$(EXEEXT)
	$(CXXLINK) $(inheritedAttributeTraversal_LDFLAGS) $(inheritedAttributeTraversal_OBJECTS) $(inheritedAttributeTraversal_LDADD) $(LIBS)
inlineTransformations$(EXEEXT): $(inlineTransformations_OBJECTS) $(inlineTransformations_DEPENDENCIES) 
	@rm -f inlineTransformations$(EXEEXT)
	$(CXXLINK) $(inlineTransformations_LDFLAGS) $(inlineTransformations_OBJECTS) $(inlineTransformations_LDADD) $(LIBS)
instrumentEndOfFunction$(EXEEXT): $(instrumentEndOfFunction_OBJECTS) $(instrumentEndOfFunction_DEPENDENCIES) 
	@rm -f instrumentEndOfFunction$(EXEEXT)
	$(CXXLINK) $(instrumentEndOfFunction_LDFLAGS) $(instrumentEndOfFunction_OBJECTS) $(instrumentEndOfFunction_LDADD) $(LIBS)
instrumentationExample$(EXEEXT): $(instrumentationExample_OBJECTS) $(instrumentationExample_DEPENDENCIES) 
	@rm -f instrumentationExample$(EXEEXT)
	$(CXXLINK) $(instrumentationExample_LDFLAGS) $(instrumentationExample_OBJECTS) $(instrumentationExample_LDADD) $(LIBS)
interproceduralCFG$(EXEEXT): $(interproceduralCFG_OBJECTS) $(interproceduralCFG_DEPENDENCIES) 
	@rm -f interproceduralCFG$(EXEEXT)
	$(CXXLINK) $(interproceduralCFG_LDFLAGS) $(interproceduralCFG_OBJECTS) $(interproceduralCFG_LDADD) $(LIBS)
interveneAtVariables$(EXEEXT): $(interveneAtVariables_OBJECTS) $(interveneAtVariables_DEPENDENCIES) 
	@rm -f interveneAtVariables$(EXEEXT)
	$(CXXLINK) $(interveneAtVariables_LDFLAGS) $(interveneAtVariables_OBJECTS) $(interveneAtVariables_LDADD) $(LIBS)
lineReplacement$(EXEEXT): $(lineReplacement_OBJECTS) $(lineReplacement_DEPENDENCIES) 
	@rm -f lineReplacement$(EXEEXT)
	$(CXXLINK) $(lineReplacement_LDFLAGS) $(lineReplacement_OBJECTS) $(lineReplacement_LDADD) $(LIBS)
livenessAnalysis$(EXEEXT): $(livenessAnalysis_OBJECTS) $(livenessAnalysis_DEPENDENCIES) 
	@rm -f livenessAnalysis$(EXEEXT)
	$(CXXLINK) $(livenessAnalysis_LDFLAGS) $(livenessAnalysis_OBJECTS) $(livenessAnalysis_LDADD) $(LIBS)
loopNestingInfoProcessing$(EXEEXT): $(loopNestingInfoProcessing_OBJECTS) $(loopNestingInfoProcessing_DEPENDENCIES) 
	@rm -f loopNestingInfoProcessing$(EXEEXT)
	$(CXXLINK) $(loopNestingInfoProcessing_LDFLAGS) $(loopNestingInfoProcessing_OBJECTS) $(loopNestingInfoProcessing_LDADD) $(LIBS)
loopOptimization$(EXEEXT): $(loopOptimization_OBJECTS) $(loopOptimization_DEPENDENCIES) 
	@rm -f loopOptimization$(EXEEXT)
	$(CXXLINK) $(loopOptimization_LDFLAGS) $(loopOptimization_OBJECTS) $(loopOptimization_LDADD) $(LIBS)
loopProcessor$(EXEEXT): $(loopProcessor_OBJECTS) $(loopProcessor_DEPENDENCIES) 
	@rm -f loopProcessor$(EXEEXT)
	$(CXXLINK) $(loopProcessor_LDFLAGS) $(loopProcessor_OBJECTS) $(loopProcessor_LDADD) $(LIBS)
loopRecognition$(EXEEXT): $(loopRecognition_OBJECTS) $(loopRecognition_DEPENDENCIES) 
	@rm -f loopRecognition$(EXEEXT)
	$(CXXLINK) $(loopRecognition_LDFLAGS) $(loopRecognition_OBJECTS) $(loopRecognition_LDADD) $(LIBS)
nestedQueryExample$(EXEEXT): $(nestedQueryExample_OBJECTS) $(nestedQueryExample_DEPENDENCIES) 
	@rm -f nestedQueryExample$(EXEEXT)
	$(CXXLINK) $(nestedQueryExample_LDFLAGS) $(nestedQueryExample_OBJECTS) $(nestedQueryExample_LDADD) $(LIBS)
nestedTraversal$(EXEEXT): $(nestedTraversal_OBJECTS) $(nestedTraversal_DEPENDENCIES) 
	@rm -f nestedTraversal$(EXEEXT)
	$(CXXLINK) $(nestedTraversal_LDFLAGS) $(nestedTraversal_OBJECTS) $(nestedTraversal_LDADD) $(LIBS)
partialRedundancyElimination$(EXEEXT): $(partialRedundancyElimination_OBJECTS) $(partialRedundancyElimination_DEPENDENCIES) 
	@rm -f partialRedundancyElimination$(EXEEXT)
	$(CXXLINK) $(partialRedundancyElimination_LDFLAGS) $(partialRedundancyElimination_OBJECTS) $(partialRedundancyElimination_LDADD) $(LIBS)
persistantAttributes$(EXEEXT): $(persistantAttributes_OBJECTS) $(persistantAttributes_DEPENDENCIES) 
	@rm -f persistantAttributes$(EXEEXT)
	$(CXXLINK) $(persistantAttributes_LDFLAGS) $(persistantAttributes_OBJECTS) $(persistantAttributes_LDADD) $(LIBS)
prePostTraversal$(EXEEXT): $(prePostTraversal_OBJECTS) $(prePostTraversal_DEPENDENCIES) 
	@rm -f prePostTraversal$(EXEEXT)
	$(CXXLINK) $(prePostTraversal_LDFLAGS) $(prePostTraversal_OBJECTS) $(prePostTraversal_LDADD) $(LIBS)
queryLibraryExample$(EXEEXT): $(queryLibraryExample_OBJECTS) $(queryLibraryExample_DEPENDENCIES) 
	@rm -f queryLibraryExample$(EXEEXT)
	$(CXXLINK) $(queryLibraryExample_LDFLAGS) $(queryLibraryExample_OBJECTS) $(queryLibraryExample_LDADD) $(LIBS)
reductionRecognition$(EXEEXT): $(reductionRecognition_OBJECTS) $(reductionRecognition_DEPENDENCIES) 
	@rm -f reductionRecognition$(EXEEXT)
	$(CXXLINK) $(reductionRecognition_LDFLAGS) $(reductionRecognition_OBJECTS) $(reductionRecognition_LDADD) $(LIBS)
resolveOverloadedFunction$(EXEEXT): $(resolveOverloadedFunction_OBJECTS) $(resolveOverloadedFunction_DEPENDENCIES) 
	@rm -f resolveOverloadedFunction$(EXEEXT)
	$(CXXLINK) $(resolveOverloadedFunction_LDFLAGS) $(resolveOverloadedFunction_OBJECTS) $(resolveOverloadedFunction_LDADD) $(LIBS)
sb_callgraphAnalysis$(EXEEXT): $(sb_callgraphAnalysis_OBJECTS) $(sb_callgraphAnalysis_DEPENDENCIES) 
	@rm -f sb_callgraphAnalysis$(EXEEXT)
	$(CXXLINK) $(sb_callgraphAnalysis_LDFLAGS) $(sb_callgraphAnalysis_OBJECTS) $(sb_callgraphAnalysis_LDADD) $(LIBS)
scopeInformation$(EXEEXT): $(scopeInformation_OBJECTS) $(scopeInformation_DEPENDENCIES) 
	@rm -f scopeInformation$(EXEEXT)
	$(CXXLINK) $(scopeInformation_LDFLAGS) $(scopeInformation_OBJECTS) $(scopeInformation_LDADD) $(LIBS)
seedBugsExample_arrayIndexing$(EXEEXT): $(seedBugsExample_arrayIndexing_OBJECTS) $(seedBugsExample_arrayIndexing_DEPENDENCIES) 
	@rm -f seedBugsExample_arrayIndexing$(EXEEXT)
	$(CXXLINK) $(seedBugsExample_arrayIndexing_LDFLAGS) $(seedBugsExample_arrayIndexing_OBJECTS) $(seedBugsExample_arrayIndexing_LDADD) $(LIBS)
selectedFileTranslation$(EXEEXT): $(selectedFileTranslation_OBJECTS) $(selectedFileTranslation_DEPENDENCIES) 
	@rm -f selectedFileTranslation$(EXEEXT)
	$(CXXLINK) $(selectedFileTranslation_LDFLAGS) $(selectedFileTranslation_OBJECTS) $(selectedFileTranslation_LDADD) $(LIBS)
sharedMemoryTraversals$(EXEEXT): $(sharedMemoryTraversals_OBJECTS) $(sharedMemoryTraversals_DEPENDENCIES) 
	@rm -f sharedMemoryTraversals$(EXEEXT)
	$(CXXLINK) $(sharedMemoryTraversals_LDFLAGS) $(sharedMemoryTraversals_OBJECTS) $(sharedMemoryTraversals_LDADD) $(LIBS)
sprintf_to_snprintf$(EXEEXT): $(sprintf_to_snprintf_OBJECTS) $(sprintf_to_snprintf_DEPENDENCIES) 
	@rm -f sprintf_to_snprintf$(EXEEXT)
	$(CXXLINK) $(sprintf_to_snprintf_LDFLAGS) $(sprintf_to_snprintf_OBJECTS) $(sprintf_to_snprintf_LDADD) $(LIBS)
switchWithoutDefault$(EXEEXT): $(switchWithoutDefault_OBJECTS) $(switchWithoutDefault_DEPENDENCIES) 
	@rm -f switchWithoutDefault$(EXEEXT)
	$(CXXLINK) $(switchWithoutDefault_LDFLAGS) $(switchWithoutDefault_OBJECTS) $(switchWithoutDefault_LDADD) $(LIBS)
symbolTableHandling$(EXEEXT): $(symbolTableHandling_OBJECTS) $(symbolTableHandling_DEPENDENCIES) 
	@rm -f symbolTableHandling$(EXEEXT)
	$(CXXLINK) $(symbolTableHandling_LDFLAGS) $(symbolTableHandling_OBJECTS) $(symbolTableHandling_LDADD) $(LIBS)
synthesizedAttributeTraversal$(EXEEXT): $(synthesizedAttributeTraversal_OBJECTS) $(synthesizedAttributeTraversal_DEPENDENCIES) 
	@rm -f synthesizedAttributeTraversal$(EXEEXT)
	$(CXXLINK) $(synthesizedAttributeTraversal_LDFLAGS) $(synthesizedAttributeTraversal_OBJECTS) $(synthesizedAttributeTraversal_LDADD) $(LIBS)
tauInstrumenter$(EXEEXT): $(tauInstrumenter_OBJECTS) $(tauInstrumenter_DEPENDENCIES) 
	@rm -f tauInstrumenter$(EXEEXT)
	$(CXXLINK) $(tauInstrumenter_LDFLAGS) $(tauInstrumenter_OBJECTS) $(tauInstrumenter_LDADD) $(LIBS)
templateParameter$(EXEEXT): $(templateParameter_OBJECTS) $(templateParameter_DEPENDENCIES) 
	@rm -f templateParameter$(EXEEXT)
	$(CXXLINK) $(templateParameter_LDFLAGS) $(templateParameter_OBJECTS) $(templateParameter_LDADD) $(LIBS)
traversalShortCircuit$(EXEEXT): $(traversalShortCircuit_OBJECTS) $(traversalShortCircuit_DEPENDENCIES) 
	@rm -f traversalShortCircuit$(EXEEXT)
	$(CXXLINK) $(traversalShortCircuit_LDFLAGS) $(traversalShortCircuit_OBJECTS) $(traversalShortCircuit_LDADD) $(LIBS)
traverseIRnodeTypes$(EXEEXT): $(traverseIRnodeTypes_OBJECTS) $(traverseIRnodeTypes_DEPENDENCIES) 
	@rm -f traverseIRnodeTypes$(EXEEXT)
	$(CXXLINK) $(traverseIRnodeTypes_LDFLAGS) $(traverseIRnodeTypes_OBJECTS) $(traverseIRnodeTypes_LDADD) $(LIBS)
typeInfoFromFunctionParameters$(EXEEXT): $(typeInfoFromFunctionParameters_OBJECTS) $(typeInfoFromFunctionParameters_DEPENDENCIES) 
	@rm -f typeInfoFromFunctionParameters$(EXEEXT)
	$(CXXLINK) $(typeInfoFromFunctionParameters_LDFLAGS) $(typeInfoFromFunctionParameters_OBJECTS) $(typeInfoFromFunctionParameters_LDADD) $(LIBS)
typeTransformation$(EXEEXT): $(typeTransformation_OBJECTS) $(typeTransformation_DEPENDENCIES) 
	@rm -f typeTransformation$(EXEEXT)
	$(CXXLINK) $(typeTransformation_LDFLAGS) $(typeTransformation_OBJECTS) $(typeTransformation_LDADD) $(LIBS)
virtualCFG$(EXEEXT): $(virtualCFG_OBJECTS) $(virtualCFG_DEPENDENCIES) 
	@rm -f virtualCFG$(EXEEXT)
	$(CXXLINK) $(virtualCFG_LDFLAGS) $(virtualCFG_OBJECTS) $(virtualCFG_LDADD) $(LIBS)
virtualFunctionIdentification$(EXEEXT): $(virtualFunctionIdentification_OBJECTS) $(virtualFunctionIdentification_DEPENDENCIES) 
	@rm -f virtualFunctionIdentification$(EXEEXT)
	$(CXXLINK) $(virtualFunctionIdentification_LDFLAGS) $(virtualFunctionIdentification_OBJECTS) $(virtualFunctionIdentification_LDADD) $(LIBS)
visitorMemoryPoolTraversal$(EXEEXT): $(visitorMemoryPoolTraversal_OBJECTS) $(visitorMemoryPoolTraversal_DEPENDENCIES) 
	@rm -f visitorMemoryPoolTraversal$(EXEEXT)
	$(CXXLINK) $(visitorMemoryPoolTraversal_LDFLAGS) $(visitorMemoryPoolTraversal_OBJECTS) $(visitorMemoryPoolTraversal_LDADD) $(LIBS)
visitorTraversal$(EXEEXT): $(visitorTraversal_OBJECTS) $(visitorTraversal_DEPENDENCIES) 
	@rm -f visitorTraversal$(EXEEXT)
	$(CXXLINK) $(visitorTraversal_LDFLAGS) $(visitorTraversal_OBJECTS) $(visitorTraversal_LDADD) $(LIBS)
volatileTypeModifier$(EXEEXT): $(volatileTypeModifier_OBJECTS) $(volatileTypeModifier_DEPENDENCIES) 
	@rm -f volatileTypeModifier$(EXEEXT)
	$(CXXLINK) $(volatileTypeModifier_LDFLAGS) $(volatileTypeModifier_OBJECTS) $(volatileTypeModifier_LDADD) $(LIBS)
wholeASTGraphGenerator$(EXEEXT): $(wholeASTGraphGenerator_OBJECTS) $(wholeASTGraphGenerator_DEPENDENCIES) 
	@rm -f wholeASTGraphGenerator$(EXEEXT)
	$(CXXLINK) $(wholeASTGraphGenerator_LDFLAGS) $(wholeASTGraphGenerator_OBJECTS) $(wholeASTGraphGenerator_LDADD) $(LIBS)
wholeGraphAST$(EXEEXT): $(wholeGraphAST_OBJECTS) $(wholeGraphAST_DEPENDENCIES) 
	@rm -f wholeGraphAST$(EXEEXT)
	$(CXXLINK) $(wholeGraphAST_LDFLAGS) $(wholeGraphAST_OBJECTS) $(wholeGraphAST_LDADD) $(LIBS)
wholeGraphFilterOnPersistantAttributes$(EXEEXT): $(wholeGraphFilterOnPersistantAttributes_OBJECTS) $(wholeGraphFilterOnPersistantAttributes_DEPENDENCIES) 
	@rm -f wholeGraphFilterOnPersistantAttributes$(EXEEXT)
	$(CXXLINK) $(wholeGraphFilterOnPersistantAttributes_LDFLAGS) $(wholeGraphFilterOnPersistantAttributes_OBJECTS) $(wholeGraphFilterOnPersistantAttributes_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.C.o:
	$(CXXCOMPILE) -c -o $@ $<

.C.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.C.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

.c.o:
	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

.cpp.o:
	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/../config
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-local
check: check-recursive
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	check-local clean clean-binPROGRAMS clean-generic \
	clean-libtool clean-local clean-noinstPROGRAMS clean-recursive \
	ctags ctags-recursive distclean distclean-compile \
	distclean-generic distclean-libtool distclean-recursive \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-binPROGRAMS install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am \
	uninstall-binPROGRAMS uninstall-info-am


# JJW (2/25/2008): set a flag (only used when running ROSE applications) to
# have them run using the build tree rather than the install tree -- this is
# important for "make check" in an uninstalled copy of ROSE.
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@export ROSE_IN_BUILD_TREE=$(top_builddir)

testASTGraphGenerator: ASTGraphGenerator
	@echo "Generating dot file ..."
	./ASTGraphGenerator $(srcdir)/inputCode_2.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_2.C.dot inputCode_2.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_2.pdf; then exit 1; fi

testASTGraphGeneratorCustomized: ASTGraphGeneratorCustomized
	@echo "Generating dot file ..."
	./ASTGraphGeneratorCustomized $(srcdir)/inputCode_2.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_2.C.dot inputCode_2.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_2.pdf; then exit 1; fi

testAST_PDF_Generator: AST_PDF_Generator
	@echo "Generating PDF file ..."
	./AST_PDF_Generator $(srcdir)/inputCode_2.C

testWholeASTGraphGenerator_small: wholeASTGraphGenerator
	@echo "Generating dot file of whole AST ..."
	./wholeASTGraphGenerator $(srcdir)/inputCode_wholeAST_1.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_wholeAST_1_WholeAST.dot inputCode_WholeAST_small.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_WholeAST_small.pdf; then exit 1; fi

testWholeASTGraphGenerator_large: wholeASTGraphGenerator
	@echo "Generating dot file of whole AST ..."
	./wholeASTGraphGenerator $(srcdir)/inputCode_wholeAST_2.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_wholeAST_2_WholeAST.dot inputCode_WholeAST_large.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_WholeAST_large.pdf; then exit 1; fi

# DQ (9/6/2008): Added test to generate a graph of the binary for the tiny program example (with debugging data).
testBinaryASTGraphGenerator: wholeASTGraphGenerator
	gcc -g $(srcdir)/inputCode_binaryAST_1.c -o inputCode_binaryAST_1
	./wholeASTGraphGenerator inputCode_binaryAST_1
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_binaryAST_1_WholeAST.dot inputCode_binaryAST_1_WholeAST.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_binaryAST_1_WholeAST.pdf; then exit 1; fi

testLoopRecognition: loopRecognition
	./loopRecognition $(srcdir)/inputCode_1.C

testResolveOverloadedFunction: resolveOverloadedFunction
	./resolveOverloadedFunction $(srcdir)/inputCode_1.C

testInstantiatedTemplate: templateParameter
	./templateParameter $(srcdir)/inputCode_1.C

testInstrumentationExample: instrumentationExample
	./instrumentationExample -rose:verbose 0 -c $(srcdir)/inputCode_InstrumentationTranslator.C

testInstrumentEndOfFunction: instrumentEndOfFunction
	./instrumentEndOfFunction -rose:verbose 0 -c $(srcdir)/inputCode_instrumentEndOfFunction.C

testReductionRecognition: reductionRecognition
	./reductionRecognition -rose:verbose 0 -c $(srcdir)/inputCode_reductionRecognition.C

# turn off the warning for input code with unused variable declarations
testAddVariableDeclaration: addVariableDeclaration
	./addVariableDeclaration --edg:no_warnings -c $(srcdir)/inputCode_AddVariableDeclaration.C

testAddVariableDeclaration2: addVariableDeclaration2
	./addVariableDeclaration2 --edg:no_warnings -c $(srcdir)/inputCode_AddVariableDeclaration2.C

testAddFunctionDeclaration: addFunctionDeclaration
	./addFunctionDeclaration --edg:no_warnings -c $(srcdir)/inputCode_AddFunctionDeclaration.C

testAddFunctionDeclaration2: addFunctionDeclaration2
	./addFunctionDeclaration2 --edg:no_warnings -c $(srcdir)/inputCode_AddFunctionDeclaration2.C
testAddFunctionDeclaration3: addFunctionDeclaration3
	./addFunctionDeclaration3 --edg:no_warnings -c $(srcdir)/inputCode_AddFunctionDeclaration3.C

testAddAssignmentStmt: addAssignmentStmt
	./addAssignmentStmt --edg:no_warnings -c $(srcdir)/inputCode_AddAssignmentStmt.C

testAbstractHandle1:abstractHandle1
	./abstractHandle1  --edg:no_warnings -c $(srcdir)/inputCode_AbstractHandle1.cpp 

testAbstractHandle2:abstractHandle2
	./abstractHandle2  --edg:no_warnings -c $(srcdir)/inputCode_AbstractHandle2.cpp 

testAddExpression: addExpression
	./addExpression --edg:no_warnings -c $(srcdir)/inputCode_AddExpression.C

testAddFunctionCalls: addFunctionCalls
	./addFunctionCalls --edg:no_warnings -c $(srcdir)/inputCode_AddFunctionCalls.C

testLoopOptimization: loopOptimization
	$(VALGRIND) ./loopOptimization -c $(srcdir)/inputCode_LoopOptimization.C

testIdentityTranslator: identityTranslator
	./identityTranslator -c $(srcdir)/inputCode_IdentityTranslator.C

testCharmSupport: charmSupport
	./charmSupport -c $(srcdir)/inputCode_ExampleCharmSupport.C

testBuildCFG: buildCFG
#	./buildCFG $(srcdir)/inputCode_1.C
	./buildCFG $(srcdir)/inputCode_ControlFlowGraphAnalysis.C
	@echo "Building postscript file from foo.dot ..."
#	$(top_srcdir)/scripts/dotgenLetterPDF controlFlowGraph.dot controlFlowGraph.ps
#	$(top_srcdir)/scripts/dotgenLetterPDF foo.dot controlFlowGraph.ps
	$(top_srcdir)/scripts/dotgenLetterPDF main.dot controlFlowGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e controlFlowGraph.pdf; then exit 1; fi

testBuildCFG_testfile1: buildCFG
	./buildCFG $(srcdir)/inputCode_ControlFlowGraphAnalysis_testfile1.c
	@echo "Building postscript file from foo.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF testCFG.dot controlFlowGraph_testfile1.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e controlFlowGraph_testfile1.pdf; then exit 1; fi

testVirtualCFG: vcfg_testIf_debug.pdf

testBuildCG: callGraph.pdf

testClassHierarchyGraph: classHierarchyGraph
	./classHierarchyGraph $(srcdir)/inputCode_ClassHierarchyGraph.C
	@echo "Building postscript file from DATABASE.dot ..."
#	$(top_srcdir)/scripts/dotgenLetterPDF controlFlowGraph.dot controlFlowGraph.ps
	$(top_srcdir)/scripts/dotgenLetterPDF classHier.dot classHierarchyGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e classHierarchyGraph.pdf; then exit 1; fi

testCodeCoverage: codeCoverage
	./codeCoverage -c $(srcdir)/inputCode_ExampleCodeCoverage.C

testCodeCoverageIBMExample: codeCoverage
	./codeCoverage -c $(srcdir)/inputCode_ExampleCodeCoverageIBMExample.C

testChangeFunction: changeFunction
	./changeFunction -rose:verbose 0 -c $(srcdir)/inputCode_ChangeFunctionExample.C

testInterveneAtVariables: interveneAtVariables
	./interveneAtVariables -rose:verbose 0 -c $(srcdir)/inputCode_interveneAtVariables.C

testTemplateExample1: identityTranslator
	./identityTranslator -c $(srcdir)/inputCode_templateExample1.C

testTemplateExample2: identityTranslator
	./identityTranslator -c $(srcdir)/inputCode_templateExample2.C

testDataBaseExample1: dataBaseUsage
	./dataBaseUsage -c $(srcdir)/inputCode_dataBaseExample1.C

testLoopNestingInfoProcessing: loopNestingInfoProcessing
	./loopInfoProcessing -c $(srcdir)/inputCode_loopNestingInfoProcessing.C

testLoopOptimization: loopProcessor $(loopOptimizationOutputFiles)

testInheritedAttributeTraversal: inheritedAttributeTraversal
	$(VALGRIND) ./inheritedAttributeTraversal -c $(srcdir)/inputCode_ExampleTraversals_1.C

testPersistantAttributes: persistantAttributes
	./persistantAttributes -c $(srcdir)/inputCode_ExampleTraversals_2.C
testTauInstrumenter: tauInstrumenter
	./tauInstrumenter $(TAU_INCLUDES) -c $(srcdir)/inputCode_tauInstrumenter.C

testTypeTransformation: typeTransformation
	./typeTransformation -c $(srcdir)/inputCode_typeTransformation.C

testAstFileIO_GenerateBinaryFile: astFileIO_GenerateBinaryFile
	./astFileIO_GenerateBinaryFile -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile.C

testAstFileIO_ReadMultipleASTs: astFileIO_ReadMultipleASTs
	./astFileIO_GenerateBinaryFile -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile_1.C
	./astFileIO_GenerateBinaryFile -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile_2.C
	./astFileIO_GenerateBinaryFile -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile_3.C
	./astFileIO_ReadMultipleASTs inputCode_astFileIO_GenerateBinaryFile_1 inputCode_astFileIO_GenerateBinaryFile_2 inputCode_astFileIO_GenerateBinaryFile_3

testTraverseIRnodeTypes: traverseIRnodeTypes
	$(VALGRIND) ./traverseIRnodeTypes -c $(srcdir)/inputCode_ExampleTraversals_3.C

testGeneratingUniqueNamesFromDeclaration: generatingUniqueNamesFromDeclaration
	./generatingUniqueNamesFromDeclaration -c $(srcdir)/inputCode_generatingUniqueNamesFromDeclaration.C

testGeneratingUniqueNamesFromDeclaration2: generatingUniqueNamesFromDeclaration
	./generatingUniqueNamesFromDeclaration -c $(srcdir)/inputCode_generatingUniqueNamesFromDeclaration2.C

testSymbolTableHandling: symbolTableHandling
	./symbolTableHandling -c $(srcdir)/inputCode_testsymbolTableHandling.C

testScopeInformation: scopeInformation
	./scopeInformation -c $(srcdir)/inputCode_scopeInformation.C

testCustomGraphGeneration: customGraphGeneration customGraphGenerationWithFiltering
	./customGraphGeneration
	@echo "Building postscript file from foo.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF customGraph.dot customGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraph.pdf; then exit 1; fi
	./customGraphGenerationWithFiltering
	$(top_srcdir)/scripts/dotgenLetterPDF customGraphWithFiltering.dot customGraphWithFiltering_test.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraphWithFiltering_test.pdf; then exit 1; fi

testInlineTransformations: inlineTransformations
	./inlineTransformations -c $(srcdir)/inputCode_inlineTransformations.C

testAddComments: addComments
	./addComments -c $(srcdir)/inputCode_addComments.C

testAddArbitraryTextForUnparser:
	./addArbitraryTextForUnparser -c $(srcdir)/inputCode_addArbitraryTextForUnparser.C

testCollectComments: collectComments
	./collectComments -rose:collectAllCommentsAndDirectives -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C

testCollectCommentsSkipHeaders: collectComments
	./collectComments -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C

testCollectDefineDirectives: collectDefineDirectives
	./collectDefineDirectives -rose:collectAllCommentsAndDirectives -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C

testPartialRedundancyElimination: partialRedundancyElimination
	./partialRedundancyElimination -c $(srcdir)/inputCode_partialRedundancyElimination.C

testCodeGenerationFormatControl: codeGenerationFormatControl
	./codeGenerationFormatControl -c $(srcdir)/inputCode_codeGenerationFormatControl.C

testDataFlowGraph: dataFlowGraph
	./dataFlowGraph -c $(srcdir)/inputCode_dataFlowGraphAnalysis.C
	@echo "Building postscript file from inputCode_dataFlowGraphAnalysis.C.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_dataFlowGraphAnalysis.C.dot inputCode_dataFlowGraphAnalysis.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_dataFlowGraphAnalysis.pdf; then exit 1; fi

testDataFlowGraph_testfile1: dataFlowGraph
	./dataFlowGraph -c $(srcdir)/inputCode_dataFlowGraphAnalysis_testfile1.C
	@echo "Building postscript file from inputCode_dataFlowGraphAnalysis.C.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_dataFlowGraphAnalysis_testfile1.C.dot inputCode_dataFlowGraphAnalysis_testfile1.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_dataFlowGraphAnalysis_testfile1.pdf; then exit 1; fi

testGraphTraversal: graphTraversal
	./graphTraversal

testWholeGraphAST: wholeGraphAST
	./wholeGraphAST $(srcdir)/inputCode_wholeGraphAST.C
	@echo "Building postscript file from wholeGraphAST.dot and wholeGraphASTPool.dot ..."
#	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphAST.dot wholeGraphAST.ps
	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphAST1.dot wholeGraphAST.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e wholeGraphAST.pdf; then exit 1; fi
#	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphASTPool.dot wholeGraphASTPool.ps
	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphASTPool1.dot wholeGraphASTPool.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e wholeGraphASTPool.pdf; then exit 1; fi

testCustomGraphGenerationWithColors: customGraphGenerationWithColors
	./customGraphGenerationWithColors $(srcdir)/inputCode_customGraphGenerationWithColors.C
	@echo "Building postscript file from customGraphGenerationWithColors.dot and customGraphGenerationWithColors.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF customGraphGenerationWithColors.dot customGraphGenerationWithColors.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraphGenerationWithColors.pdf; then exit 1; fi

testConstantFoldingTransformation: constantFoldingTransformation
#	./customGraphGenerationWithColors $(srcdir)/inputCode_constantFoldingTransformation.C
#	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_constantFoldingTransformation.C.dot constantFoldingTransformation.ps
	./constantFoldingTransformation -c $(srcdir)/inputCode_constantFoldingTransformation.C

# This tests the generation f an intrmediate example in the tutorial
testConstantUnFoldingTransformation: constantUnFoldingTransformation
	./constantUnFoldingTransformation -c $(srcdir)/inputCode_constantUnFoldingTransformation.C

testSelectedFileTranslationFilterPath: selectedFileTranslation
	./selectedFileTranslation -rose:verbose 0 -skipFile:path /home/dquinlan/ROSE -c $(srcdir)/inputCode_addComments.C

testSelectedFileTranslation: selectedFileTranslation
	./selectedFileTranslation -rose:verbose 0 -skipFile:path /nonDirectory -c $(srcdir)/inputCode_addComments.C

testMultipleFiles: selectedFileTranslation
	$(VALGRIND) ./selectedFileTranslation -rose:verbose 0 -c $(srcdir)/inputCode_addComments.C $(srcdir)/inputCode_wholeGraphAST.C $(srcdir)/inputCode_constantFoldingTransformation.C $(srcdir)/inputCode_dataFlowGraphAnalysis.C $(srcdir)/inputCode_partialRedundancyElimination.C $(srcdir)/inputCode_scopeInformation.C $(srcdir)/inputCode_ExampleTraversals_4.C

testVirtualFunctionIdentification: virtualFunctionIdentification
	./virtualFunctionIdentification -c $(srcdir)/inputCode_virtualFunctionIdentification.C

testGraphGenerationOfSubtree: graphGenerationOfSubtree
	@echo "Generating dot file ..."
	./graphGenerationOfSubtree $(srcdir)/inputCode_graphGenerationOfSubtree.C
	@echo "Generate postscript file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_graphGenerationOfSubtree.subtree.dot inputCode_2.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_2.pdf; then exit 1; fi

testSwitchWithoutDefault: switchWithoutDefault
	./switchWithoutDefault -rose:verbose 0 -I$(srcdir) -c $(srcdir)/inputCode_switchWithoutDefault.C

testRoseSwitchWithoutDefault: switchWithoutDefault
	./switchWithoutDefault -rose:verbose 0 -I.. $(INCLUDES) -c ../src/frontend/SageIII/Cxx_Grammar.C

testAddStruct: addStruct
	./addStruct -rose:verbose 0 -I.. $(INCLUDES) -c $(srcdir)/inputCode_addStruct.C

testsnprintf: sprintf_to_snprintf
#	./sprintf_to_snprintf -rose:verbose 0 -I.. $(INCLUDES) -c $(srcdir)/inputCode_sprintf_to_snprintf.C
	./sprintf_to_snprintf -rose:verbose 0 -c $(srcdir)/inputCode_sprintf_to_snprintf.C

testSeedBugsExample_arrayIndexing: seedBugsExample_arrayIndexing
	./seedBugsExample_arrayIndexing -rose:verbose 0 -c $(srcdir)/inputCode_seedBugsExample_arrayIndexing.C

testVolatileTypeModifier: volatileTypeModifier
	./volatileTypeModifier -rose:verbose 0 -c $(srcdir)/inputCode_volatileTypeModifier.C

# This should only be tested if Dwarf is in use, and it should not 
# be used on the Mac OSX system because we build the executable and
# ROSE does not yet handle the Mach-O executable i386 binary file format.
@ROSE_USE_DWARF_TRUE@inputCode_dwarfAnalysis:
@ROSE_USE_DWARF_TRUE@	g++ -g3 -o inputCode_dwarfAnalysis $(srcdir)/inputCode_dwarfAnalysis.C
@ROSE_USE_DWARF_FALSE@inputCode_dwarfAnalysis:
#	DQ (2/12/2009): This fails when make check is run and the file ($(top_srcdir)/developersScratchSpace/Dan/Disassembler_tests/i386-nologin)
#	is not available (e.g. external distributions).
#	cp $(top_srcdir)/developersScratchSpace/Dan/Disassembler_tests/i386-nologin inputCode_dwarfAnalysis
@ROSE_USE_DWARF_FALSE@	cp $(srcdir)/buffer2.bin inputCode_dwarfAnalysis

testDwarfAnalysis: dwarfAnalysis inputCode_dwarfAnalysis 
# Note: different stages of AST representation and visualization.
#	./dwarfAnalysis -c $(srcdir)/inputCode_dwarfAnalysis.C
#	./dwarfAnalysis -rose:visualize_dwarf_only inputCode_dwarfAnalysis
#	./dwarfAnalysis -rose:visualize_executable_file_format_skip_symbols inputCode_dwarfAnalysis
#	./dwarfAnalysis -rose:read_executable_file_format_only inputCode_dwarfAnalysis
#	./dwarfAnalysis -rose:read_executable_file_format_only -rose:visualize_executable_file_format_skip_symbols inputCode_dwarfAnalysis
	./dwarfAnalysis -rose:visualize_dwarf_only -rose:read_executable_file_format_only inputCode_dwarfAnalysis

testDwarfInstructionAddressToSourceLineAnalysis: dwarfInstructionAddressToSourceLineAnalysis inputCode_dwarfAnalysis
#	./dwarfAnalysis -rose:verbose 0 -c $(srcdir)/inputCode_dwarfAnalysis.C
#	./dwarfInstructionAddressToSourceLineAnalysis -rose:visualize_dwarf_only inputCode_dwarfAnalysis
	./dwarfInstructionAddressToSourceLineAnalysis inputCode_dwarfAnalysis

   #rose_inputCode_varSubstCopy.C , temporary disabled this test, don't go into patch!,Liao

# #####################################
# Output file generation rules
# #####################################

inputCode_ASTGraphGenerator.pdf: ASTGraphGenerator
	@echo "Generating required documentation for tutorial (inputCode_ASTGraphGenerator.pdf) ..."
# Build smaller versions of these files (so that they fit onto two separate pages (within the tutorial))
	split -80 $(srcdir)/addFunctionDeclaration.C addFunctionDeclaration.
	split -80 $(srcdir)/inheritedAndSynthesizedAttributeTraversal.C inheritedAndSynthesizedAttributeTraversal.
	split -64 $(srcdir)/loopRecognition.C loopRecognition.
	./ASTGraphGenerator $(ROSE_FLAGS) $(srcdir)/inputCode_ASTGraphGenerator.C
	@echo "Generate postscript file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ASTGraphGenerator.C.dot inputCode_ASTGraphGenerator.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
#	rm inputCode_ASTGraphGenerator.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_ASTGraphGenerator.pdf; then exit 1; fi

inputCode_ASTGraphGeneratorCustomized.pdf: ASTGraphGeneratorCustomized
	@echo "Generating required documentation for tutorial (inputCode_ASTGraphGeneratorCustomized.pdf) ..."
# Build smaller versions of these files (so that they fit onto two separate pages (within the tutorial))
	split -80 $(srcdir)/addFunctionDeclaration.C addFunctionDeclaration.
	split -80 $(srcdir)/inheritedAndSynthesizedAttributeTraversal.C inheritedAndSynthesizedAttributeTraversal.
	split -64 $(srcdir)/loopRecognition.C loopRecognition.
	./ASTGraphGeneratorCustomized $(ROSE_FLAGS) $(srcdir)/inputCode_ASTGraphGeneratorCustomized.C
	@echo "Generate postscript file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ASTGraphGeneratorCustomized.C.dot inputCode_ASTGraphGeneratorCustomized.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
#	rm inputCode_ASTGraphGeneratorCustomized.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_ASTGraphGeneratorCustomized.pdf; then exit 1; fi

inputCode_AST_PDF_Generator.pdf: AST_PDF_Generator
	@echo "Generating required documentation for tutorial (inputCode_AST_PDF_Generator.pdf) ..."
	@echo "Reusing the same inputCode_ASTGraphGenerator.C as for the DOT graph (but copy to new name) ..."
	cp $(srcdir)/inputCode_ASTGraphGenerator.C inputCode_AST_PDF_Generator.C
	./AST_PDF_Generator $(ROSE_FLAGS) inputCode_AST_PDF_Generator.C
	cp -f inputCode_AST_PDF_Generator.C.pdf inputCode_AST_PDF_Generator.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_AST_PDF_Generator.pdf; then exit 1; fi

inputCode_ASTWholeGraphGenerator_small.pdf: wholeASTGraphGenerator
	@echo "Generating dot file of whole AST ..."
	./wholeASTGraphGenerator $(srcdir)/inputCode_wholeAST_1.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_wholeAST_1_WholeAST.dot inputCode_ASTWholeGraphGenerator_small.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_ASTWholeGraphGenerator_small.pdf; then exit 1; fi

inputCode_ASTWholeGraphGenerator_large.pdf: wholeASTGraphGenerator
	@echo "Generating dot file of whole AST ..."
	./wholeASTGraphGenerator $(srcdir)/inputCode_wholeAST_2.C
	@echo "Generate pdf file (default name: test.pdf) from dot file ..."
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_wholeAST_2_WholeAST.dot inputCode_ASTWholeGraphGenerator_large.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_ASTWholeGraphGenerator_large.pdf; then exit 1; fi

rose_inputCode_IdentityTranslator.C: identityTranslator
	@echo "Generate executable from compilation of input code (identityTranslator) ..."
	./identityTranslator $(ROSE_FLAGS) -c $(srcdir)/inputCode_IdentityTranslator.C

queryLibrary.out: queryLibraryExample
	@echo "Generate executable from compilation of input code (queryLibraryExample) ..."
	./queryLibraryExample $(ROSE_FLAGS) -c $(srcdir)/inputCode_QueryLibrary.C > queryLibrary.out

nestedQuery.out: nestedQueryExample
	@echo "Generate executable from compilation of input code (nestedQueryExample) ..."
	./nestedQueryExample $(ROSE_FLAGS) -c $(srcdir)/inputCode_NestedQuery.C > nestedQuery.out

# DQ (9/7/2006): These need separate rules so that when using "make -j" each is run by at most only one process.
# traversalExecutables = \
#   visitorTraversal \
#   classicObjectOrientedVisitorPatternTraversal \
#   inheritedAttributeTraversal \
#   synthesizedAttributeTraversal \
#   inheritedAndSynthesizedAttributeTraversal \
#   accumulatorAttributeTraversal \
#   persistantAttributes \
#   visitorMemoryPoolTraversal \
#   classicObjectOrientedVisitorPatternMemoryPoolTraversal \
#   nestedTraversal
# $(traversalOutput): $(traversalExecutables)
#	@echo "Generate executable from compilation of input code (visitorTraversal) ..."
#	./visitorTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_5.C > visitorTraversal.out
#	@echo "Generate executable from compilation of input code (classicObjectOrientedVisitorPatternTraversal) ..."
#	./classicObjectOrientedVisitorPatternTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_6.C > classicObjectOrientedVisitorPatternTraversal.out
#	@echo "Generate executable from compilation of input code (inheritedAttributeTraversal) ..."
#	./inheritedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_7.C > inheritedAttributeTraversal.out
#	@echo "Generate executable from compilation of input code (synthesizedAttributeTraversal) ..."
#	./synthesizedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_8.C > synthesizedAttributeTraversal.out
#	@echo "Generate executable from compilation of input code (inheritedAndSynthesizedAttributeTraversal) ..."
#	./inheritedAndSynthesizedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_9.C > inheritedAndSynthesizedAttributeTraversal.out
#	@echo "Generate executable from compilation of input code (accumulatorAttributeTraversal) ..."
#	./accumulatorAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_10.C > accumulatorAttributeTraversal.out
#	@echo "Generate executable from compilation of input code (nestedTraversal) ..."
#	./nestedTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_11.C > nestedTraversal.out
#	@echo "Generate executable from compilation of input code (persistantAttributes) ..."
#	./persistantAttributes $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_12.C > persistantAttributes.out
#	@echo "Generate executable from compilation of input code (visitorMemoryPoolTraversal) ..."
#	./visitorMemoryPoolTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_13.C > visitorMemoryPoolTraversal.out
#	@echo "Generate executable from compilation of input code (classicObjectOrientedVisitorPatternMemoryPoolTraversal) ..."
#	./classicObjectOrientedVisitorPatternMemoryPoolTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_14.C > classicObjectOrientedVisitorPatternMemoryPoolTraversal.out
#	@echo "Generate executable from compilation of input code (traverseIRnodeTypes) ..."
#	./traverseIRnodeTypes $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_15.C > traverseIRnodeTypes.out

# DQ (9/7/2006): These need separate rules so that when using "make -j" each is run by at most only one process.
visitorTraversal.out: visitorTraversal
	@echo "Generate executable from compilation of input code (visitorTraversal) ..."
	./visitorTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_5.C > visitorTraversal.out

prePostTraversal.out: prePostTraversal
	@echo "Generate executable from compilation of input code (prePostTraversal) ..."
	./prePostTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_16.C > prePostTraversal.out

combinedTraversals.out: combinedTraversals
	@echo "Generate executable from compilation of input code (combinedTraversals) ..."
	./combinedTraversals $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_17.C > combinedTraversals.out

# DQ (3/21/2009): sharedMemoryTraversals fails to compile under Cygwin.
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@sharedMemoryTraversals.out:
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@	@echo "Commented out shared memory tests for Cygwin (sharedMemoryTraversals fails to compile) ..."
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@	touch sharedMemoryTraversals.out
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@sharedMemoryTraversals.out: sharedMemoryTraversals
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@	@echo "Generate executable from compilation of input code (sharedMemoryTraversals) ..."
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@	./sharedMemoryTraversals $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_18.C > sharedMemoryTraversals.out

classicObjectOrientedVisitorPatternTraversal.out: classicObjectOrientedVisitorPatternTraversal
	@echo "Generate executable from compilation of input code (classicObjectOrientedVisitorPatternTraversal) ..."
	./classicObjectOrientedVisitorPatternTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_6.C > classicObjectOrientedVisitorPatternTraversal.out

inheritedAttributeTraversal.out: inheritedAttributeTraversal
	@echo "Generate executable from compilation of input code (inheritedAttributeTraversal) ..."
	./inheritedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_7.C > inheritedAttributeTraversal.out

synthesizedAttributeTraversal.out: synthesizedAttributeTraversal
	@echo "Generate executable from compilation of input code (synthesizedAttributeTraversal) ..."
	./synthesizedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_8.C > synthesizedAttributeTraversal.out

inheritedAndSynthesizedAttributeTraversal.out: inheritedAndSynthesizedAttributeTraversal
	@echo "Generate executable from compilation of input code (inheritedAndSynthesizedAttributeTraversal) ..."
	./inheritedAndSynthesizedAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_9.C > inheritedAndSynthesizedAttributeTraversal.out

accumulatorAttributeTraversal.out: accumulatorAttributeTraversal
	@echo "Generate executable from compilation of input code (accumulatorAttributeTraversal) ..."
	./accumulatorAttributeTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_10.C > accumulatorAttributeTraversal.out

nestedTraversal.out: nestedTraversal
	@echo "Generate executable from compilation of input code (nestedTraversal) ..."
	./nestedTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_11.C > nestedTraversal.out

persistantAttributes.out: persistantAttributes
	@echo "Generate executable from compilation of input code (persistantAttributes) ..."
	./persistantAttributes $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_12.C > persistantAttributes.out

visitorMemoryPoolTraversal.out: visitorMemoryPoolTraversal
	@echo "Generate executable from compilation of input code (visitorMemoryPoolTraversal) ..."
	./visitorMemoryPoolTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_13.C > visitorMemoryPoolTraversal.out

classicObjectOrientedVisitorPatternMemoryPoolTraversal.out: classicObjectOrientedVisitorPatternMemoryPoolTraversal
	@echo "Generate executable from compilation of input code (classicObjectOrientedVisitorPatternMemoryPoolTraversal) ..."
	./classicObjectOrientedVisitorPatternMemoryPoolTraversal $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_14.C > classicObjectOrientedVisitorPatternMemoryPoolTraversal.out

traverseIRnodeTypes.out: traverseIRnodeTypes
	@echo "Generate executable from compilation of input code (traverseIRnodeTypes) ..."
	./traverseIRnodeTypes $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleTraversals_15.C > traverseIRnodeTypes.out

rose_inputCode_AddFunctionDeclaration.C: addFunctionDeclaration
	@echo "Generate executable from compilation of input code (addFunctionDeclaration) ..."
	./addFunctionDeclaration $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddFunctionDeclaration.C

rose_inputCode_AddFunctionDeclaration2.C: addFunctionDeclaration2
	@echo "Generate executable from compilation of input code (addFunctionDeclaration2) ..."
	./addFunctionDeclaration2 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddFunctionDeclaration2.C

rose_inputCode_AddFunctionDeclaration3.C: addFunctionDeclaration3
	@echo "Generate executable from compilation of input code (addFunctionDeclaration3) ..."
	./addFunctionDeclaration3 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddFunctionDeclaration3.C

rose_inputCode_AddVariableDeclaration.C: addVariableDeclaration
	@echo "Generate executable from compilation of input code (addVariableDeclaration) ..."
	./addVariableDeclaration $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddVariableDeclaration.C

rose_inputCode_AddVariableDeclaration2.C: addVariableDeclaration2
	@echo "Generate executable from compilation of input code (addVariableDeclaration2) ..."
	./addVariableDeclaration2 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddVariableDeclaration2.C

abstractHandle1.outx: abstractHandle1
	@echo "Generate executable from compilation of input code (abstractHandle1) ..."
	./abstractHandle1 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AbstractHandle1.cpp | fold > abstractHandle1.outx

abstractHandle2.outx: abstractHandle2
	@echo "Generate executable from compilation of input code (abstractHandle2) ..."
	./abstractHandle2 $(ROSE_FLAGS) -c $(srcdir)/inputCode_AbstractHandle2.cpp | fold > abstractHandle2.outx

rose_inputCode_AddAssignmentStmt.C: addAssignmentStmt
	@echo "Generate executable from compilation of input code (addAssignmentStmt) ..."
	./addAssignmentStmt $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddAssignmentStmt.C

rose_inputCode_AddExpression.C: addExpression
	@echo "Generate executable from compilation of input code (addExpression) ..."
	./addExpression $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddExpression.C

rose_inputCode_AddFunctionCalls.C: addFunctionCalls
	@echo "Generate executable from compilation of input code (addFunctionCalls) ..."
	./addFunctionCalls $(ROSE_FLAGS) -c $(srcdir)/inputCode_AddFunctionCalls.C

rose_inputCode_InstrumentationTranslator.C: instrumentationExample
	@echo "Generate executable from compilation of input code ..."
	./instrumentationExample $(ROSE_FLAGS) -c $(srcdir)/inputCode_InstrumentationTranslator.C

rose_inputCode_instrumentEndOfFunction.C: instrumentEndOfFunction
	@echo "Generate executable from compilation of input code ..."
	./instrumentEndOfFunction $(ROSE_FLAGS) -c $(srcdir)/inputCode_instrumentEndOfFunction.C
reductionRecognition.out: reductionRecognition
	@echo "Generate executable from compilation of input code ..."
	./reductionRecognition $(ROSE_FLAGS) -c $(srcdir)/inputCode_reductionRecognition.C >reductionRecognition.out

loopRecognition.out: loopRecognition
	@echo "Generate executable from compilation of input code (loopRecognition) ..."
	./loopRecognition $(ROSE_FLAGS) -c $(srcdir)/inputCode_LoopRecognition.C > loopRecognition.out

typeInfoFromFunctionParameters.out: typeInfoFromFunctionParameters
	@echo "Generate executable from compilation of input code (typeInfoFromFunctionParameters) ..."
	./typeInfoFromFunctionParameters $(ROSE_FLAGS) -c $(srcdir)/inputCode_TypeInfoFromFunctionParameters.C > typeInfoFromFunctionParameters.out

resolveOverloadedFunction.out: resolveOverloadedFunction
	@echo "Generate executable from compilation of input code (resolveOverloadedFunction) ..."
	./resolveOverloadedFunction $(ROSE_FLAGS) -c $(srcdir)/inputCode_ResolvingOverloadedFunctions.C > resolveOverloadedFunction.out

templateParameter.out: templateParameter $(srcdir)/inputCode_TemplateParameterExtration.C
	@echo "Generate executable from compilation of input code (templateParameter) ..."
	./templateParameter $(ROSE_FLAGS) -c $(srcdir)/inputCode_TemplateParameterExtration.C > templateParameter.out

rose_inputCode_LoopOptimization_blocking.C: loopOptimization
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	$(VALGRIND) ./loopOptimization $(ROSE_FLAGS) -bk1 -fs0 -c $(srcdir)/inputCode_LoopOptimization_blocking.C

loopProcessor.C.aa loopProcessor.C.ab: $(srcdir)/LoopProcessor.C
	split -42 $(srcdir)/LoopProcessor.C loopProcessor.C.

rose_inputCode_LoopOptimization_fusion.C: loopOptimization
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	./loopOptimization $(ROSE_FLAGS) -fs2 -c $(srcdir)/inputCode_LoopOptimization_fusion.C

rose_inputCode_LoopOptimization_mm.C: loopProcessor
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
#	./loopOptimization -bk1 -fs0 -c $(srcdir)/inputCode_LoopOptimization_mm.C
# DQ (1/2/2008): This used to work, but it is part of what Qing is fixing.
	$(VALGRIND) ./loopProcessor $(ROSE_FLAGS) -bk1 -fs0 -c $(srcdir)/inputCode_LoopOptimization_mm.C

rose_inputCode_LoopOptimization_dgemm.C: loopProcessor
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	./loopProcessor $(ROSE_FLAGS) -bk1 -unroll nvar 16 -c $(srcdir)/inputCode_LoopOptimization_dgemm.C

rose_inputCode_LoopOptimization_lufac.C: loopProcessor
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	./loopProcessor $(ROSE_FLAGS) -bk1 -fs0  -splitloop -annotation -c $(srcdir)/inputCode_LoopOptimization_lufac.C

rose_inputCode_LoopOptimization_tridvpk.C: loopProcessor
	@echo "Generate executable from compilation of input code (loopOptimization) ..."
	./loopProcessor $(ROSE_FLAGS) -fs2 -ic1 -opt 1 -c $(srcdir)/inputCode_LoopOptimization_tridvpk.C

controlFlowGraph.pdf: buildCFG
	@echo "Building an example Control Flow Graph (buildCFG) ..."
	./buildCFG $(ROSE_FLAGS) $(srcdir)/inputCode_ControlFlowGraphAnalysis.C
	@echo "Building postscript file from main.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF main.dot controlFlowGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e controlFlowGraph.pdf; then exit 1; fi

vcfg_testIf_debug.pdf: virtualCFG
	@echo "Building an example virtual Control Flow Graph (virtualCFG) ..."
	./virtualCFG $(ROSE_FLAGS) $(srcdir)/inputCode_ControlFlowGraphAnalysis.C 
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ControlFlowGraphAnalysis.C.testIf.debug.dot vcfg_testIf_debug.pdf
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ControlFlowGraphAnalysis.C.testIf.interesting.dot vcfg_testIf_interesting.pdf
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ControlFlowGraphAnalysis.C.main.debug.dot vcfg_main_debug.pdf
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_ControlFlowGraphAnalysis.C.main.interesting.dot vcfg_main_interesting.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e vcfg_testIf_debug.pdf; then exit 1; fi

defuseAnalysis_pic1.pdf: defuseAnalysis
	@echo "Building an example DefUse ..."
	./defuseAnalysis $(ROSE_FLAGS) $(srcdir)/input_defuseAnalysis.C &>defuseAnalysis.out
	@echo "DefUseAnalysis: Building postscript file from foo.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF dfa.dot defuseAnalysis_pic1.pdf &>defuseAnalysis_pic1.out
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e defuseAnalysis_pic1.pdf; then exit 1; fi

binaryAnalysis_pic1.pdf: binaryAnalysis
	@echo "Building an example BinaryAnalysis ..."
# This does currently not work because we don't support 64bit binaries
#	./binaryAnalysis bin_example
# trick is to load a 32bit binary
	cp $(srcdir)/buffer2.bin ./bin_example
	./binaryAnalysisExample bin_example
	@echo "BinaryAnalysis: Building assembly listing for binary (rose_bin_example.s.a) ..."
	split -42 rose_bin_example.s rose_bin_example.s.
	@echo "BinaryAnalysis: Building postscript file from cfg.dot & dfg.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF cfg.dot binaryAnalysis_pic1.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e binaryAnalysis_pic1.pdf; then exit 1; fi
	$(top_srcdir)/scripts/dotgenLetterPDF dfg.dot binaryAnalysis_pic2.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e binaryAnalysis_pic2.pdf; then exit 1; fi

# DQ (8/17/2008): Added example to show how to use traversal on AST for binary executable format.
binaryAnalysis_pic3.pdf: binaryAnalysis_symbolTable
	@echo "Building an example BinaryAnalysis ..."
	cp -f $(srcdir)/buffer2.bin ./bin_example_2
	./binaryAnalysis_symbolTable -rose:read_executable_file_format_only bin_example_2
#	DQ (9/6/2008): We are not ready for these yet, so don't generate them.
#	@echo "BinaryAnalysis: Building postscript file from AST and whole graph dot files..."
	$(top_srcdir)/scripts/dotgenLetterPDF bin_example_2_WholeAST.dot binaryAnalysis_pic3.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e binaryAnalysis_pic3.pdf; then exit 1; fi
	$(top_srcdir)/scripts/dotgenLetterPDF bin_example_2.dot binaryAnalysis_pic4.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e binaryAnalysis_pic4.pdf; then exit 1; fi

# rose_bin_example.s.aa: binaryAnalysis_pic1.pdf

debuggingIRnodeToString.out: debuggingIRnodeToString
	@echo "Generate executable from compilation of input code (debuggingIRnodeToString) ..."
	./debuggingIRnodeToString $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleDebugging.C > debuggingIRnodeToString.out

debuggingSourceCodePositionInformation.out: debuggingSourceCodePositionInformation
	@echo "Generate executable from compilation of input code (debuggingSourceCodePositionInformation) ..."
	./debuggingSourceCodePositionInformation $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleDebugging.C > debuggingSourceCodePositionInformation.out

commandlineProcessing.out: commandlineProcessing
	@echo "Generate executable from compilation of input code (commandlineProcessing) ..."
	./commandlineProcessing $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleDebugging.C -edg:restrict -myTranslator:verbose 42 > commandlineProcessing.out

charmSupport.out: charmSupport
	@echo "Generate executable from compilation of input code (charmSupport) ..."
	./charmSupport $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleCharmSupport.C > charmSupport.out
	split -80 $(srcdir)/CharmSupport.C CharmSupport.

codeCoverage.out: codeCoverage $(srcdir)/inputCode_ExampleCodeCoverage.C
	@echo "Generate executable from compilation of input code (codeCoverage) ..."
#	While in development just run without building codeCoverage.out (and touch codeCoverage.out to allow makefile to work)
	./codeCoverage $(ROSE_FLAGS) -c $(srcdir)/inputCode_ExampleCodeCoverage.C
#	link the input file with the coverageCodeFromShmuel.o file (written by Shmuel, tool specific)
	@echo "  COMPILE $@"; $(CXX) -o ExampleCodeCoverage_GeneratedBinary inputCode_ExampleCodeCoverage.o coverageCodeFromShmuel.o
#	Run the input code (collect any output in codeCoverage.out)
	./ExampleCodeCoverage_GeneratedBinary > codeCoverage.out
	split -80 $(srcdir)/codeCoverage.C codeCoverage.

callGraph.pdf: buildCallGraph
	@echo "Generate call graph from processing of input code (callGraph) ..."
	./buildCallGraph $(ROSE_FLAGS) -c $(srcdir)/inputCode_BuildCG.C
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_BuildCG.C_callGraph.dot callGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e callGraph.pdf; then exit 1; fi

liveness.pdf: livenessAnalysis
	@echo "Generate liveness information from processing of input code ..."
	./livenessAnalysis $(ROSE_FLAGS) -c $(srcdir)/inputCode_livenessAnalysis.c
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_livenessAnalysis.c_liveness.dot liveness.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e liveness.pdf; then exit 1; fi

classHierarchyGraph.pdf: classHierarchyGraph
	./classHierarchyGraph $(srcdir)/inputCode_ClassHierarchyGraph.C
	@echo "Building postscript file from classHier.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF classHier.dot classHierarchyGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e classHierarchyGraph.pdf; then exit 1; fi

rose_inputCode_templateExample1.C: identityTranslator $(srcdir)/inputCode_templateExample1.C
	@echo "Generate executable from compilation of input code (template example #1) ..."
	./identityTranslator $(ROSE_FLAGS) -c $(srcdir)/inputCode_templateExample1.C

rose_inputCode_templateExample2.C: identityTranslator $(srcdir)/inputCode_templateExample2.C
	@echo "Generate executable from compilation of input code (template example #2) ..."
	./identityTranslator $(ROSE_FLAGS) -c $(srcdir)/inputCode_templateExample2.C

dataBaseExample1.out: dataBaseUsage
	@echo "Generate data base from compilation of input code (data base example #1) ..."
# Build smaller versions of these files (so that they fit onto two separate pages (within the tutorial))
	split -64 $(srcdir)/dataBaseUsage.C dataBaseUsage.
	./dataBaseUsage $(ROSE_FLAGS) -c $(srcdir)/inputCode_dataBaseExample1.C > dataBaseExample1.out

loopNestingInfoProcessing.out: loopNestingInfoProcessing $(srcdir)/inputCode_loopNestingInfoProcessing.C
	@echo "Generate executable from compilation of input code (loopNestingInfoProcessing) ..."
	split -l80 $(srcdir)/loopNestingInfoProcessing.C loopNestingInfoProcessing.
	./loopNestingInfoProcessing $(ROSE_FLAGS) -c $(srcdir)/inputCode_loopNestingInfoProcessing.C > loopNestingInfoProcessing.out

rose_inputCode_typeTransformation.C: typeTransformation
	./typeTransformation $(ROSE_FLAGS) -c $(srcdir)/inputCode_typeTransformation.C

astFileIO_GenerateBinaryFile.out: astFileIO_GenerateBinaryFile
	./astFileIO_GenerateBinaryFile $(ROSE_FLAGS) -c $(srcdir)/inputCode_astFileIO_GenerateBinaryFile.C > astFileIO_temp.out
	head -n 20 astFileIO_temp.out > astFileIO_GenerateBinaryFile.out
#	echo "File I/O temporarily disabled!" > astFileIO_GenerateBinaryFile.out

generatingUniqueNamesFromDeclaration.out: generatingUniqueNamesFromDeclaration
	./generatingUniqueNamesFromDeclaration $(ROSE_FLAGS) -c $(srcdir)/inputCode_generatingUniqueNamesFromDeclaration.C | grep -v rose_edg_macros_and_functions_required_for_gnu > generatingUniqueNamesFromDeclaration.out

generatingUniqueNamesFromDeclaration2.out: generatingUniqueNamesFromDeclaration
	./generatingUniqueNamesFromDeclaration $(ROSE_FLAGS) -c $(srcdir)/inputCode_generatingUniqueNamesFromDeclaration2.C | grep -v rose_edg_macros_and_functions_required_for_gnu > generatingUniqueNamesFromDeclaration2.out
#	echo "Test Failed!" > generatingUniqueNamesFromDeclaration2.out

symbolTableHandling.out: symbolTableHandling
	./symbolTableHandling $(ROSE_FLAGS) -c $(srcdir)/inputCode_testsymbolTableHandling.C > symbolTableHandling.out

scopeInformation.out: scopeInformation
	./scopeInformation $(ROSE_FLAGS) -c $(srcdir)/inputCode_scopeInformation.C > scopeInformation.out

rose_inputCode_tauInstrumenter.C: tauInstrumenter
#	./tauInstrumenter $(ROSE_FLAGS) $(TAU_INCLUDES) -c $(srcdir)/inputCode_tauInstrumenter.C
	echo "Test Failed!" > rose_inputCode_tauInstrumenter.C

rose_inputCode_inlineTransformations.C: inlineTransformations
	./inlineTransformations $(ROSE_FLAGS) -c $(srcdir)/inputCode_inlineTransformations.C

customGraph.pdf: customGraphGeneration
	./customGraphGeneration 
	@echo "Building postscript file from foo.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF customGraph.dot customGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraph.pdf; then exit 1; fi

customGraphWithFiltering.pdf: customGraphGenerationWithFiltering
	./customGraphGenerationWithFiltering
	$(top_srcdir)/scripts/dotgenLetterPDF customGraphWithFiltering.dot customGraphWithFiltering.pdf
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e customGraphWithFiltering.pdf; then exit 1; fi

graphTraversal.pdf: graphTraversal
	./graphTraversal
	$(top_srcdir)/scripts/dotgenLetterPDF graphTraversal.dot graphTraversal.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e graphTraversal.pdf; then exit 1; fi

# Liao, 2/13/2008 , added this
rose_inputCode_addStruct.C:addStruct
	./addStruct $(ROSE_FLAGS) -c $(srcdir)/inputCode_addStruct.C

rose_inputCode_addComments.C: addComments
	./addComments $(ROSE_FLAGS) -c $(srcdir)/inputCode_addComments.C

rose_inputCode_addArbitraryTextForUnparser.C: addArbitraryTextForUnparser
#	DQ (3/21/2009): These tests don't appear to run under Cygwin.
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@	@echo "Cygwin test of addArbitraryTextForUnparser fails ..."
@ROSE_BUILD_OS_IS_CYGWIN_TRUE@	touch rose_inputCode_addArbitraryTextForUnparser.C
@ROSE_BUILD_OS_IS_CYGWIN_FALSE@	./addArbitraryTextForUnparser $(ROSE_FLAGS) -c $(srcdir)/inputCode_addArbitraryTextForUnparser.C

collectCommentsSkipHeaderFiles.out: collectComments
	./collectComments $(ROSE_FLAGS) -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C > collectCommentsSkipHeaderFiles.out

collectCommentsAcrossHeaderFiles.out: collectComments
	./collectComments $(ROSE_FLAGS) -rose:collectAllCommentsAndDirectives -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C > collectCommentsAcrossHeaderFiles.out

collectDefineDirectives.out: collectDefineDirectives
	./collectDefineDirectives $(ROSE_FLAGS) -rose:collectAllCommentsAndDirectives -I$(srcdir) -c $(srcdir)/inputCode_collectComments.C > collectDefineDirectives.out

rose_inputCode_partialRedundancyElimination.C: partialRedundancyElimination
	./partialRedundancyElimination $(ROSE_FLAGS) -c $(srcdir)/inputCode_partialRedundancyElimination.C

rose_inputCode_codeGenerationFormatControl.C: codeGenerationFormatControl
	./codeGenerationFormatControl $(ROSE_FLAGS) -c $(srcdir)/inputCode_codeGenerationFormatControl.C

#rose_inputCode_varSubstCopy.C: varSubstCopy
#	./varSubstCopy $(ROSE_FLAGS) -c $(srcdir)/inputCode_varSubstCopy.C

dataFlowGraph.pdf: dataFlowGraph
	@echo "Generate the data flow graph from processing of input code (dataFlowGraph) ..."
	./dataFlowGraph $(ROSE_FLAGS) -c $(srcdir)/inputCode_dataFlowGraphAnalysis.C
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_dataFlowGraphAnalysis.C.dot dataFlowGraph.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e dataFlowGraph.pdf; then exit 1; fi

traversalShortCircuit.out: traversalShortCircuit
	./traversalShortCircuit $(ROSE_FLAGS) -c $(srcdir)/inputCode_traversalShortCircuit.C > traversalShortCircuit.out

wholeGraphAST.pdf: wholeGraphAST
	./wholeGraphAST $(ROSE_FLAGS) $(srcdir)/inputCode_wholeGraphAST.C
	@echo "Building postscript file from wholeGraphAST.dot and wholeGraphASTPool.dot ..."
	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphAST1.dot wholeGraphAST.pdf
	$(top_srcdir)/scripts/dotgenLetterPDF wholeGraphASTPool1.dot wholeGraphASTPool.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e wholeGraphAST.pdf; then exit 1; fi

rose_inputCode_seedBugsExample_arrayIndexing.C: seedBugsExample_arrayIndexing
	./seedBugsExample_arrayIndexing $(ROSE_FLAGS) -c $(srcdir)/inputCode_seedBugsExample_arrayIndexing.C

rose_inputCode_VolatileTypeModifier.C: volatileTypeModifier
	./volatileTypeModifier $(ROSE_FLAGS) -c $(srcdir)/inputCode_VolatileTypeModifier.C

inputCode_dwarfAnalysis.pdf: dwarfAnalysis inputCode_dwarfAnalysis
	./dwarfAnalysis -rose:visualize_dwarf_only -rose:read_executable_file_format_only inputCode_dwarfAnalysis
	$(top_srcdir)/scripts/dotgenLetterPDF inputCode_dwarfAnalysis.dot inputCode_dwarfAnalysis.pdf
#	DQ (10/19/2009): Added error checking to (catches lack of "dot" in path).
@ROSE_USE_GRAPHVIZ_DOT_TRUE@	if ! test -e inputCode_dwarfAnalysis.pdf; then exit 1; fi

inputCode_dwarfAnalysis.out: dwarfInstructionAddressToSourceLineAnalysis inputCode_dwarfAnalysis
	./dwarfInstructionAddressToSourceLineAnalysis inputCode_dwarfAnalysis > inputCode_dwarfAnalysis.out

docs: $(noinst_PROGRAMS) $(bin_PROGRAMS) $(generatedCodeExamples)
	@echo ""
#	DQ (5/20/2007): Added to support Rich's work with outlining and the HPC Toolkit
	cd outliner; $(MAKE) docs
	cd roseHPCT; $(MAKE) docs
	cd intelPin; $(MAKE) docs
	@echo "******************************************************************"
	@echo "Generated required documentation for tutorial (make docs rule) ..."
	@echo "******************************************************************"

# Note that the *.trace files come from the execution of the codeCoverage.C test,
# and the *.binary files are generated from the astFileIO_GenerateBinaryFile.C test.
# The *.binary are the binary form of the ASTs.
cleanDocs:
#	This can not be called after make distclean (by make distcheck)
#	cd outliner; $(MAKE) cleanDocs
	rm -f rose_*.C rose_*.c rose_*.cpp *.out *.a[a-l] *.dot *.ps *.pdf *.trace *.binaryAST 
	rm -f ExampleCodeCoverage_GeneratedBinary 
	rm -f inputCode_AST_PDF_Generator.C 
	rm -f rose_inputCode_dwarfAnalysis.s inputCode_dwarfAnalysis rose_inputCode_dwarfAnalysis

clean-local: cleanDocs
	rm -rf Templates.DB ii_files ti_files *.ti *.svg  *.new rose_bin_example.s rose_bin_example_2.s bin_example_2 *.dump
	find . -depth -name \*.dSYM -exec rm -rf {} \; # OS X object file debug info
	rm -rf $(generatedCodeExamples) *.out *.pdf *.dot

# Compile everything with -g (compiler's debug flag)
# AM_CPPFLAGS = -g

# DQ (1/4/2006): Added check rule (remove all generated code and rerun "make docs").
check-local:
#	DQ (3/27/2006): Note that these should not have to already exist, so use "rm -rf"
#	rm -rf $(generatedCodeExamples)
	$(MAKE) docs
	@echo "***************************************************************************"
	@echo "****** ROSE/tutorial: make check rule complete (terminated normally) ******"
	@echo "***************************************************************************"

installcheck: exampleMakefile
	@echo "Remove existing binaries so that they can be rebuilt using the installed libraries."
	rm -f $(noinst_PROGRAMS) *.o
	@echo "Call exampleMakefile to show how to build ROSE tutorial examples using installed libraries."
@USE_ROSE_IN_BUILD_TREE_VAR_TRUE@	unset ROSE_IN_BUILD_TREE; $(MAKE) -f exampleMakefile
@USE_ROSE_IN_BUILD_TREE_VAR_FALSE@	$(MAKE) -f exampleMakefile
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
