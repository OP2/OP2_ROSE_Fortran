# Test configuration file (see scripts/test_harness.pl for details).

# Rather than use "/tmp" as the base name for temporary directories, use a a directory in the build tree as the base name
# for temporary directories. Tests will create subdirectories in the specified temp dir, but we must create the temp dir.
# It may exist already, so use -p, which ignores failures due to existence without ignoring other failures.
cmd = mkdir -p `pwd`/tmp-sim

# Make sure the test input runs natively first.
cmd = echo "Running ${INPUT} natively..."
cmd = setarch i386 -LRB3 env TMPDIR=`pwd`/tmp-sim ${VALGRIND} ${INPUT}

# Run the test in the simulator without any virtual dynamic shared object
cmd = echo; echo; echo "Running ${INPUT} in the simulator without a vdso..."
cmd = setarch i386 -LRB3 env X86SIM_LD_PRELOAD= TMPDIR=`pwd`/tmp-sim ${VALGRIND} ./x86sim --debug=syscall --vdso=/dev/null ${INPUT}

# Run the test in the simulator and use the specified virtual dynamic shared object
# (Commented out for now because we don't actually have any vdso. See README if you want to test this. [RPM 2010-11-05])
#cmd = echo; echo; echo "Running ${INPUT} in the simulator with a vdso..."
#cmd = setarch i386 -LRB3 env X86SIM_LD_PRELOAD= TMPDIR=`pwd`/tmp-sim ${VALGRIND} ./x86sim --debug=syscall --vdso=${srcdir}/x86vdso ${INPUT}

# While the simulator is under development, some tests are expected to fail.  We want to automatically mark those tests as
# passing once they pass for the first time. Since all multiple x86sim tests are using this same configuration, we store the
# "may-fail" properties in a separate file. The file contains lines each containing two tokens: the name of the target (sans
# ".passed") and one of the words "yes", "no", or "promote" to indicate how that target is allowed to fail. If a target is not
# listed in this file then it is assumed to be a "promote" target, which means it may fail, but once it passes it will be
# converted to a "must-pass" state. See "test_harness.pl --help" for detals.
may_fail = ${CONFDIR}/test_status.txt:promote

# We want to only promote tests from may-fail to must-pass if we are a developer who is working on the simulator. Such
# developers will create an empty file named 'do_promote' in the CWD (the projects/simulator build directory).
promote = do_promote
