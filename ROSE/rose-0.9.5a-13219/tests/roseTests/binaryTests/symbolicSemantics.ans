=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513353[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513353[32]
0x80482c9:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513355[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513355[32]
0x80482cb:sub    esp, 0x08
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513358[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513358[32]
0x80482ce:call   0x08048364
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513508[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -4[32]): 134513363[32] 4 bytes
    ip = 134513508[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513616[32]
    memory:
        (add[32] V5[32] -4[32]): 134513368[32] 4 bytes
    ip = 134513616[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514048[32]
    memory:
        (add[32] V5[32] -4[32]): 134513373[32] 4 bytes
    ip = 134514048[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513374[32]
    memory:
        V5[32]: V6[32] 4 bytes read-only
    ip = 134513374[32]
0x80482de:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] 4[32]) 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V31[32]
    memory:
        V5[32]: V6[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
    ip = V31[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482df:add    bh, bh
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(concat[32] (extract[8] 0[32] 8[32] V4[32]) (concat[24] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32])) (extract[16] 16[32] 32[32] V4[32])))
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (bv-xor[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (add[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])))))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32]))) (extract[1] 1[32] 2[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32]))) (extract[1] 3[32] 4[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32]))) (extract[1] 5[32] 6[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32]))) (extract[1] 7[32] 8[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (bv-xor[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (add[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])))))))
    ?5=V17[1]
    zf=(zerop[1] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32])))
    sf=(extract[1] 7[32] 8[32] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32])))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (bv-xor[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (add[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32]))))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (bv-xor[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (add[9] (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32])) (uextend[9] 9[32] (extract[8] 8[32] 16[32] V4[32]))))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513377[32]
    memory:
    ip = 134513377[32]
0x80482e1:xor    eax, 0x080496cc
    ax=(bv-xor[32] V1[32] 134518476[32])
    cx=V2[32]
    dx=V3[32]
    bx=(concat[32] (extract[8] 0[32] 8[32] V4[32]) (concat[24] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32])) (extract[16] 16[32] 32[32] V4[32])))
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32])))))))
    ?3=V16[1]
    af=V25[1]
    ?5=V17[1]
    zf=(zerop[1] (bv-xor[32] V1[32] 134518476[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V1[32] 134518476[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=0[1]
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513382[32]
    memory:
    ip = 134513382[32]
0x80482e6:jmp    DWORD PTR ds:[0x080496d0]
    ax=(bv-xor[32] V1[32] 134518476[32])
    cx=V2[32]
    dx=V3[32]
    bx=(concat[32] (extract[8] 0[32] 8[32] V4[32]) (concat[24] (add[8] (extract[8] 8[32] 16[32] V4[32]) (extract[8] 8[32] 16[32] V4[32])) (extract[16] 16[32] 32[32] V4[32])))
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] 134518476[32])))))))
    ?3=V16[1]
    af=V25[1]
    ?5=V17[1]
    zf=(zerop[1] (bv-xor[32] V1[32] 134518476[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V1[32] 134518476[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=0[1]
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=V26[32]
    memory:
        134518480[32]: V26[32] 4 bytes read-only
    ip = V26[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482e0:push   DWORD PTR ds:[0x080496cc]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513382[32]
    memory:
        134518476[32]: V31[32] 4 bytes read-only
        (add[32] V5[32] -4[32]): V31[32] 4 bytes
    ip = 134513382[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482ec:add    BYTE PTR ds:[eax], al
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V15[32])) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V15[32])) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 1[32] 2[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 3[32] 4[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 5[32] 6[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 7[32] 8[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))))))
    ?3=V17[1]
    af=(extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V15[32])) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V15[32])) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])))))))
    ?5=V18[1]
    zf=(zerop[1] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))
    sf=(extract[1] 7[32] 8[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V15[32])) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V15[32])) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32]))))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V15[32])) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V15[32])) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32]))))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513390[32]
    memory:
        V1[32]: (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))) 1 byte
    ip = 134513390[32]
0x80482ee:add    BYTE PTR ds:[eax], al
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 1[32] 2[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 3[32] 4[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 5[32] 6[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 7[32] 8[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))))))
    ?3=V17[1]
    af=(extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])))))))
    ?5=V18[1]
    zf=(zerop[1] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))
    sf=(extract[1] 7[32] 8[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32]))))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32]))))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513392[32]
    memory:
        V1[32]: (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) 1 byte
    ip = 134513392[32]
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 1[32] 2[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 3[32] 4[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 5[32] 6[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) (extract[1] 7[32] 8[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))))))
    ?3=V17[1]
    af=(extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])))))))
    ?5=V18[1]
    zf=(zerop[1] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))
    sf=(extract[1] 7[32] 8[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32])))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32]))))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32])) (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32]))))) (uextend[9] 9[32] (extract[8] 0[32] 8[32] V1[32]))))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=V26[32]
    memory:
        V1[32]: (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] (uextend[32] 32[32] (add[8] (extract[8] 0[32] 8[32] V15[32]) (extract[8] 0[32] 8[32] V1[32])))) (extract[8] 0[32] 8[32] V1[32]))) 1 byte
        134518484[32]: V26[32] 4 bytes read-only
    ip = V26[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f6:push   0x00000000
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513403[32]
    memory:
        (add[32] V5[32] -4[32]): 0[32] 4 bytes
    ip = 134513403[32]
0x80482fb:jmp    0x080482e0
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513376[32]
    memory:
        (add[32] V5[32] -4[32]): 0[32] 4 bytes
    ip = 134513376[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V31[32]
    memory:
        134518488[32]: V31[32] 4 bytes read-only
    ip = V31[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048306:push   0x00000008
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513419[32]
    memory:
        (add[32] V5[32] -4[32]): 8[32] 4 bytes
    ip = 134513419[32]
0x804830b:jmp    0x080482e0
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513376[32]
    memory:
        (add[32] V5[32] -4[32]): 8[32] 4 bytes
    ip = 134513376[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V31[32]
    memory:
        134518492[32]: V31[32] 4 bytes read-only
    ip = V31[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048316:push   0x00000010
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513435[32]
    memory:
        (add[32] V5[32] -4[32]): 16[32] 4 bytes
    ip = 134513435[32]
0x804831b:jmp    0x080482e0
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513376[32]
    memory:
        (add[32] V5[32] -4[32]): 16[32] 4 bytes
    ip = 134513376[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V31[32]
    memory:
        134518496[32]: V31[32] 4 bytes read-only
    ip = V31[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048326:push   0x00000018
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513451[32]
    memory:
        (add[32] V5[32] -4[32]): 24[32] 4 bytes
    ip = 134513451[32]
0x804832b:jmp    0x080482e0
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513376[32]
    memory:
        (add[32] V5[32] -4[32]): 24[32] 4 bytes
    ip = 134513376[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V31[32]
    memory:
        134518500[32]: V31[32] 4 bytes read-only
    ip = V31[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048336:push   0x00000020
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513467[32]
    memory:
        (add[32] V5[32] -4[32]): 32[32] 4 bytes
    ip = 134513467[32]
0x804833b:jmp    0x080482e0
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513376[32]
    memory:
        (add[32] V5[32] -4[32]): 32[32] 4 bytes
    ip = 134513376[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=(bv-xor[32] V6[32] V6[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))))))
    ?3=V16[1]
    af=V17[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-xor[32] V6[32] V6[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V6[32] V6[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513474[32]
    memory:
    ip = 134513474[32]
0x8048342:pop    esi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))))))
    ?3=V16[1]
    af=V17[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-xor[32] V6[32] V6[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V6[32] V6[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513475[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
    ip = 134513475[32]
0x8048343:mov    ecx, esp
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V6[32] V6[32])))))))
    ?3=V16[1]
    af=V17[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-xor[32] V6[32] V6[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V6[32] V6[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513477[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
    ip = 134513477[32]
0x8048345:and    esp, 0xf0(-0x10)
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(bv-and[32] (add[32] V5[32] 4[32]) -16[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513480[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
    ip = 134513480[32]
0x8048348:push   eax
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513481[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
    ip = 134513481[32]
0x8048349:push   esp
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513482[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) 4 bytes
    ip = 134513482[32]
0x804834a:push   edx
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513483[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): V3[32] 4 bytes
    ip = 134513483[32]
0x804834b:push   0x08048520
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513488[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): V3[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
    ip = 134513488[32]
0x8048350:push   0x080484b0
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513493[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): V3[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
    ip = 134513493[32]
0x8048355:push   ecx
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513494[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): V3[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): (add[32] V5[32] 4[32]) 4 bytes
    ip = 134513494[32]
0x8048356:push   esi
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513495[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): V3[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): (add[32] V5[32] 4[32]) 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): V26[32] 4 bytes
    ip = 134513495[32]
0x8048357:push   0x08048410
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513500[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): V3[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): (add[32] V5[32] 4[32]) 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): V26[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513680[32] 4 bytes
    ip = 134513500[32]
0x804835c:call   0x08048310
    ax=V1[32]
    cx=(add[32] V5[32] 4[32])
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] V6[32] V6[32])
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32])))))))
    ?3=V16[1]
    af=V27[1]
    ?5=V18[1]
    zf=(zerop[1] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=0[1]
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513424[32]
    memory:
        V5[32]: V26[32] 4 bytes read-only
        (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): V3[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): (add[32] V5[32] 4[32]) 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): V26[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513680[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] V5[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513505[32] 4 bytes
    ip = 134513424[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513505[32]
    memory:
    ip = 134513505[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048362:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513507[32]
    memory:
    ip = 134513507[32]
0x8048363:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513508[32]
    memory:
    ip = 134513508[32]
0x8048364:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513509[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513509[32]
0x8048365:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513511[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513511[32]
0x8048367:push   ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513512[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134513512[32]
0x8048368:push   ecx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513513[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V2[32] 4 bytes
    ip = 134513513[32]
0x8048369:call   0x0804836e
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513518[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V2[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]): 134513518[32] 4 bytes
    ip = 134513518[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513519[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513519[32]
0x804836f:add    ebx, 0x0000135a
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] 4954[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] V4[32]) 4954[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] V4[32]) 4954[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4954[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4954[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] V4[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] V4[32]) 4954[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513525[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513525[32]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc(-0x00000004)]
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=(add[32] V4[32] 4954[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] V4[32]) 4954[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4954[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] V4[32]) 4954[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4954[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4954[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] V4[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] V4[32]) 4954[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513531[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] (add[32] V4[32] 4954[32]) -4[32]): V31[32] 4 bytes read-only
    ip = 134513531[32]
0x804837b:test   edx, edx
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=(add[32] V4[32] 4954[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))))))
    ?3=V18[1]
    af=V32[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] V31[32] V31[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] V31[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513533[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] (add[32] V4[32] 4954[32]) -4[32]): V31[32] 4 bytes read-only
    ip = 134513533[32]
0x804837d:je     0x08048384
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=(add[32] V4[32] 4954[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))))))
    ?3=V18[1]
    af=V32[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] V31[32] V31[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] V31[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=(ite[32] (zerop[1] (bv-and[32] V31[32] V31[32])) 134513540[32] 134513535[32])
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] (add[32] V4[32] 4954[32]) -4[32]): V31[32] 4 bytes read-only
    ip = (ite[32] (zerop[1] (bv-and[32] V31[32] V31[32])) 134513540[32] 134513535[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513456[32]
    memory:
        (add[32] V5[32] -4[32]): 134513540[32] 4 bytes
    ip = 134513456[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513541[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
    ip = 134513541[32]
0x8048385:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] (add[32] V5[32] 4[32]) 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513542[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
    ip = 134513542[32]
0x8048386:leave  
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] V6[32] 4[32])
    bp=V32[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513543[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
        V6[32]: V32[32] 4 bytes read-only
    ip = 134513543[32]
0x8048387:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] (add[32] V6[32] 4[32]) 4[32])
    bp=V32[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V33[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
        V6[32]: V32[32] 4 bytes read-only
        (add[32] V6[32] 4[32]): V33[32] 4 bytes read-only
    ip = V33[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048388:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513545[32]
    memory:
    ip = 134513545[32]
0x8048389:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513546[32]
    memory:
    ip = 134513546[32]
0x804838a:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513547[32]
    memory:
    ip = 134513547[32]
0x804838b:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513548[32]
    memory:
    ip = 134513548[32]
0x804838c:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513549[32]
    memory:
    ip = 134513549[32]
0x804838d:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513550[32]
    memory:
    ip = 134513550[32]
0x804838e:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513551[32]
    memory:
    ip = 134513551[32]
0x804838f:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513552[32]
    memory:
    ip = 134513552[32]
0x8048390:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513553[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513553[32]
0x8048391:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513555[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513555[32]
0x8048393:sub    esp, 0x08
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513558[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513558[32]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) -256[9]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] V31[32])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] V31[32]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] V31[32])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] V31[32])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] V31[32])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] V31[32]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] V31[32])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] V31[32]))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) -256[9]))))))
    ?5=V20[1]
    zf=(zerop[1] (extract[8] 0[32] 8[32] V31[32]))
    sf=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) -256[9]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513565[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        134518516[32]: V31[32] 1 byte read-only
    ip = 134513565[32]
0x804839d:jne    0x080483cc
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) -256[9]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] V31[32])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] V31[32]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] V31[32])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] V31[32])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] V31[32])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] V31[32]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] V31[32])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] V31[32]))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) -256[9]))))))
    ?5=V20[1]
    zf=(zerop[1] (extract[8] 0[32] 8[32] V31[32]))
    sf=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] V31[32])) -256[9]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=(ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] V31[32]))) 134513612[32] 134513567[32])
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        134518516[32]: V31[32] 1 byte read-only
    ip = (ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] V31[32]))) 134513612[32] 134513567[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513572[32]
    memory:
        134518512[32]: V1[32] 4 bytes read-only
    ip = 134513572[32]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513574[32]
    memory:
        134518512[32]: V1[32] 4 bytes read-only
        V1[32]: V31[32] 4 bytes read-only
    ip = 134513574[32]
0x80483a6:test   edx, edx
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))))))
    ?3=V18[1]
    af=V32[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] V31[32] V31[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] V31[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513576[32]
    memory:
        134518512[32]: V1[32] 4 bytes read-only
        V1[32]: V31[32] 4 bytes read-only
    ip = 134513576[32]
0x80483a8:je     0x080483c5
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))))))
    ?3=V18[1]
    af=V32[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] V31[32] V31[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] V31[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=(ite[32] (zerop[1] (bv-and[32] V31[32] V31[32])) 134513605[32] 134513578[32])
    memory:
        134518512[32]: V1[32] 4 bytes read-only
        V1[32]: V31[32] 4 bytes read-only
    ip = (ite[32] (zerop[1] (bv-and[32] V31[32] V31[32])) 134513605[32] 134513578[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513584[32]
    memory:
    ip = 134513584[32]
0x80483b0:add    eax, 0x04
    ax=(add[32] V1[32] 4[32])
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V1[32] 4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V1[32] 4[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513587[32]
    memory:
    ip = 134513587[32]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax=(add[32] V1[32] 4[32])
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V1[32] 4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V1[32] 4[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513592[32]
    memory:
        134518512[32]: (add[32] V1[32] 4[32]) 4 bytes
    ip = 134513592[32]
0x80483b8:call   edx
    ax=(add[32] V1[32] 4[32])
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 4[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V1[32] 4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V1[32] 4[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V1[32]) 4[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V3[32]
    memory:
        134518512[32]: (add[32] V1[32] 4[32]) 4 bytes
        (add[32] V5[32] -4[32]): 134513594[32] 4 bytes
    ip = V3[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513599[32]
    memory:
        134518512[32]: V1[32] 4 bytes read-only
    ip = 134513599[32]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513601[32]
    memory:
        134518512[32]: V1[32] 4 bytes read-only
        V1[32]: V31[32] 4 bytes read-only
    ip = 134513601[32]
0x80483c1:test   edx, edx
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))))))
    ?3=V18[1]
    af=V32[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] V31[32] V31[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] V31[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513603[32]
    memory:
        134518512[32]: V1[32] 4 bytes read-only
        V1[32]: V31[32] 4 bytes read-only
    ip = 134513603[32]
0x80483c3:jne    0x080483b0
    ax=V1[32]
    cx=V2[32]
    dx=V31[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))))))
    ?3=V18[1]
    af=V32[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] V31[32] V31[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] V31[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=(ite[32] (invert[1] (zerop[1] (bv-and[32] V31[32] V31[32]))) 134513584[32] 134513605[32])
    memory:
        134518512[32]: V1[32] 4 bytes read-only
        V1[32]: V31[32] 4 bytes read-only
    ip = (ite[32] (invert[1] (zerop[1] (bv-and[32] V31[32] V31[32]))) 134513584[32] 134513605[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513612[32]
    memory:
        134518516[32]: 1[32] 1 byte
    ip = 134513612[32]
0x80483cc:leave  
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V6[32] 4[32])
    bp=V31[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513613[32]
    memory:
        134518516[32]: 1[32] 1 byte
        V6[32]: V31[32] 4 bytes read-only
    ip = 134513613[32]
0x80483cd:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V6[32] 4[32]) 4[32])
    bp=V31[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V32[32]
    memory:
        134518516[32]: 1[32] 1 byte
        V6[32]: V31[32] 4 bytes read-only
        (add[32] V6[32] 4[32]): V32[32] 4 bytes read-only
    ip = V32[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ce:mov    esi, esi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513616[32]
    memory:
    ip = 134513616[32]
0x80483d0:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513617[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513617[32]
0x80483d1:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513619[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513619[32]
0x80483d3:sub    esp, 0x08
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513622[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513622[32]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax=V31[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513627[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        134518264[32]: V31[32] 4 bytes read-only
    ip = 134513627[32]
0x80483db:test   eax, eax
    ax=V31[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))))))
    ?3=V18[1]
    af=V32[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] V31[32] V31[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] V31[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513629[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        134518264[32]: V31[32] 4 bytes read-only
    ip = 134513629[32]
0x80483dd:je     0x08048400
    ax=V31[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] V31[32] V31[32])))))))
    ?3=V18[1]
    af=V32[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] V31[32] V31[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] V31[32] V31[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=(ite[32] (zerop[1] (bv-and[32] V31[32] V31[32])) 134513664[32] 134513631[32])
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        134518264[32]: V31[32] 4 bytes read-only
    ip = (ite[32] (zerop[1] (bv-and[32] V31[32] V31[32])) 134513664[32] 134513631[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax=0[32]
    cx=V1[32]
    dx=V2[32]
    bx=V3[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=V14[1]
    ?1=V15[1]
    pf=V16[1]
    ?3=V17[1]
    af=V18[1]
    ?5=V19[1]
    zf=V20[1]
    sf=V21[1]
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=V25[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513636[32]
    memory:
    ip = 134513636[32]
0x80483e4:test   eax, eax
    ax=0[32]
    cx=V1[32]
    dx=V2[32]
    bx=V3[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-and[32] 0[32] 0[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] 0[32] 0[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513638[32]
    memory:
    ip = 134513638[32]
0x80483e6:je     0x08048400
    ax=0[32]
    cx=V1[32]
    dx=V2[32]
    bx=V3[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] 0[32] 0[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-and[32] 0[32] 0[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] 0[32] 0[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=(ite[32] (zerop[1] (bv-and[32] 0[32] 0[32])) 134513664[32] 134513640[32])
    memory:
    ip = (ite[32] (zerop[1] (bv-and[32] 0[32] 0[32])) 134513664[32] 134513640[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513647[32]
    memory:
        V5[32]: 134518264[32] 4 bytes
    ip = 134513647[32]
0x80483ef:call   0x00000000
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=0[32]
    memory:
        V5[32]: 134518264[32] 4 bytes
        (add[32] V5[32] -4[32]): 134513652[32] 4 bytes
    ip = 0[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513658[32]
    memory:
    ip = 134513658[32]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513664[32]
    memory:
    ip = 134513664[32]
0x8048400:mov    esp, ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V6[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513666[32]
    memory:
    ip = 134513666[32]
0x8048402:pop    ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V6[32] 4[32])
    bp=V31[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513667[32]
    memory:
        V6[32]: V31[32] 4 bytes read-only
    ip = 134513667[32]
0x8048403:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V6[32] 4[32]) 4[32])
    bp=V31[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V32[32]
    memory:
        V6[32]: V31[32] 4 bytes read-only
        (add[32] V6[32] 4[32]): V32[32] 4 bytes read-only
    ip = V32[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048404:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513669[32]
    memory:
    ip = 134513669[32]
0x8048405:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513670[32]
    memory:
    ip = 134513670[32]
0x8048406:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513671[32]
    memory:
    ip = 134513671[32]
0x8048407:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513672[32]
    memory:
    ip = 134513672[32]
0x8048408:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513673[32]
    memory:
    ip = 134513673[32]
0x8048409:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513674[32]
    memory:
    ip = 134513674[32]
0x804840a:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513675[32]
    memory:
    ip = 134513675[32]
0x804840b:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513676[32]
    memory:
    ip = 134513676[32]
0x804840c:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513677[32]
    memory:
    ip = 134513677[32]
0x804840d:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513678[32]
    memory:
    ip = 134513678[32]
0x804840e:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513679[32]
    memory:
    ip = 134513679[32]
0x804840f:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513680[32]
    memory:
    ip = 134513680[32]
0x8048410:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513681[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513681[32]
0x8048411:mov    edx, 0x08048480
    ax=V1[32]
    cx=V2[32]
    dx=134513792[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513686[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513686[32]
0x8048416:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=134513792[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513688[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513688[32]
0x8048418:sub    esp, 0x08
    ax=V1[32]
    cx=V2[32]
    dx=134513792[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513691[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513691[32]
0x804841b:and    esp, 0xf0(-0x10)
    ax=V1[32]
    cx=V2[32]
    dx=134513792[32]
    bx=V4[32]
    sp=(bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513694[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513694[32]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax=V1[32]
    cx=V2[32]
    dx=134513792[32]
    bx=V4[32]
    sp=(bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513698[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]) 4[32]): 134513792[32] 4 bytes
    ip = 134513698[32]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax=V1[32]
    cx=V2[32]
    dx=134513792[32]
    bx=V4[32]
    sp=(bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513705[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]) 4[32]): 134513792[32] 4 bytes
        (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]): 10[32] 4 bytes
    ip = 134513705[32]
0x8048429:call   0x080482f0
    ax=V1[32]
    cx=V2[32]
    dx=134513792[32]
    bx=V4[32]
    sp=(add[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513392[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]) 4[32]): 134513792[32] 4 bytes
        (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]): 10[32] 4 bytes
        (add[32] (bv-and[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -16[32]) -4[32]): 134513710[32] 4 bytes
    ip = 134513392[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=V14[1]
    ?1=V15[1]
    pf=V16[1]
    ?3=V17[1]
    af=V18[1]
    ?5=V19[1]
    zf=V20[1]
    sf=V21[1]
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=V25[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513712[32]
    memory:
    ip = 134513712[32]
0x8048430:xor    eax, eax
    ax=(bv-xor[32] V1[32] V1[32])
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-xor[32] V1[32] V1[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V1[32] V1[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513714[32]
    memory:
    ip = 134513714[32]
0x8048432:pop    ebp
    ax=(bv-xor[32] V1[32] V1[32])
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V31[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-xor[32] V1[32] V1[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V1[32] V1[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513715[32]
    memory:
        V5[32]: V31[32] 4 bytes read-only
    ip = 134513715[32]
0x8048433:ret    
    ax=(bv-xor[32] V1[32] V1[32])
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] 4[32]) 4[32])
    bp=V31[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V1[32] V1[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-xor[32] V1[32] V1[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V1[32] V1[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=V32[32]
    memory:
        V5[32]: V31[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V32[32] 4 bytes read-only
    ip = V32[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048434:lea    esi, [esi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513722[32]
    memory:
    ip = 134513722[32]
0x804843a:lea    edi, [edi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513728[32]
    memory:
    ip = 134513728[32]
0x8048440:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513729[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513729[32]
0x8048441:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513731[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513731[32]
0x8048443:sub    esp, 0x08
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513734[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513734[32]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513741[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -8[32]): 134514132[32] 4 bytes
    ip = 134513741[32]
0x804844d:call   0x08048300
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513408[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -8[32]): 134514132[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -4[32]): 134513746[32] 4 bytes
    ip = 134513408[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=V14[1]
    ?1=V15[1]
    pf=V16[1]
    ?3=V17[1]
    af=V18[1]
    ?5=V19[1]
    zf=V20[1]
    sf=V21[1]
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=V25[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513748[32]
    memory:
    ip = 134513748[32]
0x8048454:pop    ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V30[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=V14[1]
    ?1=V15[1]
    pf=V16[1]
    ?3=V17[1]
    af=V18[1]
    ?5=V19[1]
    zf=V20[1]
    sf=V21[1]
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=V25[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513749[32]
    memory:
        V5[32]: V30[32] 4 bytes read-only
    ip = 134513749[32]
0x8048455:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] 4[32]) 4[32])
    bp=V30[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=V14[1]
    ?1=V15[1]
    pf=V16[1]
    ?3=V17[1]
    af=V18[1]
    ?5=V19[1]
    zf=V20[1]
    sf=V21[1]
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=V25[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=V31[32]
    memory:
        V5[32]: V30[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
    ip = V31[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048456:lea    esi, [esi + 0x00]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513753[32]
    memory:
    ip = 134513753[32]
0x8048459:lea    edi, [edi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513760[32]
    memory:
    ip = 134513760[32]
0x8048460:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513761[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513761[32]
0x8048461:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513763[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513763[32]
0x8048463:sub    esp, 0x08
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513766[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513766[32]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513773[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -8[32]): 134514132[32] 4 bytes
    ip = 134513773[32]
0x804846d:call   0x08048300
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513408[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -8[32]): 134514132[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -4[32]): 134513778[32] 4 bytes
    ip = 134513408[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513785[32]
    memory:
        V5[32]: 0[32] 4 bytes
    ip = 134513785[32]
0x8048479:call   0x08048320
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513440[32]
    memory:
        V5[32]: 0[32] 4 bytes
        (add[32] V5[32] -4[32]): 134513790[32] 4 bytes
    ip = 134513440[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804847e:mov    esi, esi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513792[32]
    memory:
    ip = 134513792[32]
0x8048480:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513793[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513793[32]
0x8048481:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513795[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513795[32]
0x8048483:sub    esp, 0x08
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V5[32] -4[32]) -8[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V5[32] -4[32]) -8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513798[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513798[32]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V31[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V31[32] 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513804[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        134518520[32]: (add[32] V31[32] 1[32]) 4 bytes
    ip = 134513804[32]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -8[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V31[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V31[32] 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513811[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        134518520[32]: (add[32] V31[32] 1[32]) 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -8[32]): 134514132[32] 4 bytes
    ip = 134513811[32]
0x8048493:call   0x08048300
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] V5[32] -4[32])) 4294967288[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V31[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V31[32] 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513408[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        134518520[32]: (add[32] V31[32] 1[32]) 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -8[32]): 134514132[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -8[32]) -4[32]): 134513816[32] 4 bytes
    ip = 134513408[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513823[32]
    memory:
        V5[32]: 0[32] 4 bytes
    ip = 134513823[32]
0x804849f:call   0x08048320
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513440[32]
    memory:
        V5[32]: 0[32] 4 bytes
        (add[32] V5[32] -4[32]): 134513828[32] 4 bytes
    ip = 134513440[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484a4:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513829[32]
    memory:
    ip = 134513829[32]
0x80484a5:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513830[32]
    memory:
    ip = 134513830[32]
0x80484a6:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513831[32]
    memory:
    ip = 134513831[32]
0x80484a7:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513832[32]
    memory:
    ip = 134513832[32]
0x80484a8:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513833[32]
    memory:
    ip = 134513833[32]
0x80484a9:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513834[32]
    memory:
    ip = 134513834[32]
0x80484aa:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513835[32]
    memory:
    ip = 134513835[32]
0x80484ab:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513836[32]
    memory:
    ip = 134513836[32]
0x80484ac:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513837[32]
    memory:
    ip = 134513837[32]
0x80484ad:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513838[32]
    memory:
    ip = 134513838[32]
0x80484ae:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513839[32]
    memory:
    ip = 134513839[32]
0x80484af:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513840[32]
    memory:
    ip = 134513840[32]
0x80484b0:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513841[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513841[32]
0x80484b1:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513843[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513843[32]
0x80484b3:push   edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513844[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
    ip = 134513844[32]
0x80484b4:push   esi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513845[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V7[32] 4 bytes
    ip = 134513845[32]
0x80484b5:push   ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513846[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V7[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134513846[32]
0x80484b6:sub    esp, 0x0c
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513849[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V7[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134513849[32]
0x80484b9:call   0x080484be
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513854[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V7[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]): V4[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]): 134513854[32] 4 bytes
    ip = 134513854[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513855[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513855[32]
0x80484bf:add    ebx, 0x0000120a
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] 4618[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] V4[32]) 4618[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] V4[32]) 4618[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4618[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4618[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] V4[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] V4[32]) 4618[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513861[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513861[32]
0x80484c5:call   0x080482c8
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] 4618[32])
    sp=(add[32] (add[32] V5[32] 4[32]) -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] V4[32]) 4618[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4618[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] V4[32]) 4618[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4618[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4618[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] V4[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] V4[32]) 4618[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513352[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 4[32]) -4[32]): 134513866[32] 4 bytes
    ip = 134513352[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20(-0x000000e0)]
    ax=(add[32] V1[32] -224[32])
    cx=V2[32]
    dx=V3[32]
    bx=V1[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=V14[1]
    ?1=V15[1]
    pf=V16[1]
    ?3=V17[1]
    af=V18[1]
    ?5=V19[1]
    zf=V20[1]
    sf=V21[1]
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=V25[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513872[32]
    memory:
    ip = 134513872[32]
0x80484d0:lea    edx, [ebx + 0xffffff20(-0x000000e0)]
    ax=(add[32] V1[32] -224[32])
    cx=V2[32]
    dx=(add[32] V1[32] -224[32])
    bx=V1[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=V14[1]
    ?1=V15[1]
    pf=V16[1]
    ?3=V17[1]
    af=V18[1]
    ?5=V19[1]
    zf=V20[1]
    sf=V21[1]
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=V25[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513878[32]
    memory:
    ip = 134513878[32]
0x80484d6:sub    eax, edx
    ax=(add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))
    cx=V2[32]
    dx=(add[32] V1[32] -224[32])
    bx=V1[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33])))))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))))))
    ?3=V17[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33])))))))
    ?5=V19[1]
    zf=(zerop[1] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33])))))))
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513880[32]
    memory:
    ip = 134513880[32]
0x80484d8:sar    eax, 0x02
    ax=(asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))
    cx=V2[32]
    dx=(add[32] V1[32] -224[32])
    bx=V1[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) (extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))
    ?1=V15[1]
    pf=(ite[1] (invert[1] (zerop[1] 2[5])) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))))))) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))))))
    ?3=V17[1]
    af=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) V30[1])
    ?5=V19[1]
    zf=(ite[1] (invert[1] (zerop[1] 2[5])) (zerop[1] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (zerop[1] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))
    sf=(ite[1] (invert[1] (zerop[1] 2[5])) (extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 31[32] 32[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=(ite[1] (zerop[1] 2[5]) (bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) 0[1])
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513883[32]
    memory:
    ip = 134513883[32]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0(-0x10)], eax
    ax=(asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))
    cx=V2[32]
    dx=(add[32] V1[32] -224[32])
    bx=V1[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) (extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))
    ?1=V15[1]
    pf=(ite[1] (invert[1] (zerop[1] 2[5])) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))))))) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))))))
    ?3=V17[1]
    af=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) V30[1])
    ?5=V19[1]
    zf=(ite[1] (invert[1] (zerop[1] 2[5])) (zerop[1] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (zerop[1] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))
    sf=(ite[1] (invert[1] (zerop[1] 2[5])) (extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 31[32] 32[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=(ite[1] (zerop[1] 2[5]) (bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) 0[1])
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134513886[32]
    memory:
        (add[32] V5[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))) 4 bytes
    ip = 134513886[32]
0x80484de:jne    0x080484f0
    ax=(asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))
    cx=V2[32]
    dx=(add[32] V1[32] -224[32])
    bx=V1[32]
    sp=V4[32]
    bp=V5[32]
    si=V6[32]
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) (extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))
    ?1=V15[1]
    pf=(ite[1] (invert[1] (zerop[1] 2[5])) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))))))) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))))))))
    ?3=V17[1]
    af=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) V30[1])
    ?5=V19[1]
    zf=(ite[1] (invert[1] (zerop[1] 2[5])) (zerop[1] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (zerop[1] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))
    sf=(ite[1] (invert[1] (zerop[1] 2[5])) (extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (extract[1] 31[32] 32[32] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=(ite[1] (zerop[1] 2[5]) (bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] V1[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V1[32] -224[32]))) 1[33]))))))) 0[1])
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=(ite[32] (invert[1] (ite[1] (invert[1] (zerop[1] 2[5])) (zerop[1] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (zerop[1] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) 134513904[32] 134513888[32])
    memory:
        (add[32] V5[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))) 4 bytes
    ip = (ite[32] (invert[1] (ite[1] (invert[1] (zerop[1] 2[5])) (zerop[1] (asr[32] 2[5] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32])))) (zerop[1] (add[32] (add[32] V1[32] -224[32]) (add[32] (invert[32] (add[32] V1[32] -224[32])) 1[32]))))) 134513904[32] 134513888[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 12[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513891[32]
    memory:
    ip = 134513891[32]
0x80484e3:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] V5[32] 12[32]) 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513892[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
    ip = 134513892[32]
0x80484e4:pop    esi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32])
    bp=V6[32]
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513893[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
    ip = 134513893[32]
0x80484e5:pop    edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32])
    bp=V6[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513894[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
    ip = 134513894[32]
0x80484e6:pop    ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=V28[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513895[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]): V28[32] 4 bytes read-only
    ip = 134513895[32]
0x80484e7:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=V28[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=V29[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]): V28[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]): V29[32] 4 bytes read-only
    ip = V29[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e8:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513897[32]
    memory:
    ip = 134513897[32]
0x80484e9:lea    esi, [esi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513904[32]
    memory:
    ip = 134513904[32]
0x80484f0:xor    edi, edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=(bv-xor[32] V8[32] V8[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-xor[32] V8[32] V8[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V8[32] V8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513906[32]
    memory:
    ip = 134513906[32]
0x80484f2:mov    esi, edx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V3[32]
    di=(bv-xor[32] V8[32] V8[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-xor[32] V8[32] V8[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V8[32] V8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513908[32]
    memory:
    ip = 134513908[32]
0x80484f4:lea    esi, [esi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V3[32]
    di=(bv-xor[32] V8[32] V8[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-xor[32] V8[32] V8[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V8[32] V8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513914[32]
    memory:
    ip = 134513914[32]
0x80484fa:lea    edi, [edi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V3[32]
    di=(bv-xor[32] V8[32] V8[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-xor[32] V8[32] V8[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V8[32] V8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513920[32]
    memory:
    ip = 134513920[32]
0x8048500:call   DWORD PTR ds:[esi]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V3[32]
    di=(bv-xor[32] V8[32] V8[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=0[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V8[32] V8[32])))))))
    ?3=V18[1]
    af=V31[1]
    ?5=V20[1]
    zf=(zerop[1] (bv-xor[32] V8[32] V8[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V8[32] V8[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=0[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V32[32]
    memory:
        (add[32] V5[32] -4[32]): 134513922[32] 4 bytes
        V3[32]: V32[32] 4 bytes read-only
    ip = V32[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048502:inc    edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=(add[32] V8[32] 1[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32])))))))
    ?3=V17[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V8[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V8[32]) 1[33])))))
    ?5=V18[1]
    zf=(zerop[1] (add[32] V8[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V8[32] 1[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V8[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V8[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V8[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V8[32]) 1[33]))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513923[32]
    memory:
    ip = 134513923[32]
0x8048503:add    esi, 0x04
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V7[32] 4[32])
    di=(add[32] V8[32] 1[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V7[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V7[32]) 4[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V7[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V7[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V7[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V7[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V7[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V7[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V7[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V7[32] 4[32])))))))
    ?3=V17[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V7[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V7[32]) 4[33])))))
    ?5=V18[1]
    zf=(zerop[1] (add[32] V7[32] 4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V7[32] 4[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V7[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V7[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V7[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] V7[32]) 4[33]))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513926[32]
    memory:
    ip = 134513926[32]
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0(-0x10)]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V7[32] 4[32])
    di=(add[32] V8[32] 1[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33])))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32]))))))))
    ?3=V17[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33])))))))
    ?5=V18[1]
    zf=(zerop[1] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33])))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134513929[32]
    memory:
        (add[32] V6[32] -16[32]): V26[32] 4 bytes read-only
    ip = 134513929[32]
0x8048509:jb     0x08048500
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V7[32] 4[32])
    di=(add[32] V8[32] 1[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33])))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32]))))))))
    ?3=V17[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33])))))))
    ?5=V18[1]
    zf=(zerop[1] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] V8[32] 1[32]) (add[32] (invert[32] V26[32]) 1[32])))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33])))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=(ite[32] (invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33]))))))) 134513920[32] 134513931[32])
    memory:
        (add[32] V6[32] -16[32]): V26[32] 4 bytes read-only
    ip = (ite[32] (invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] V26[32])) (add[33] (uextend[33] 33[32] (add[32] V8[32] 1[32])) (add[33] (uextend[33] 33[32] (invert[32] V26[32])) 1[33]))))))) 134513920[32] 134513931[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804850b:add    esp, 0x0c
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 12[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513934[32]
    memory:
    ip = 134513934[32]
0x804850e:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] V5[32] 12[32]) 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513935[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
    ip = 134513935[32]
0x804850f:pop    esi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32])
    bp=V6[32]
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513936[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
    ip = 134513936[32]
0x8048510:pop    edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32])
    bp=V6[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513937[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
    ip = 134513937[32]
0x8048511:pop    ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=V28[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134513938[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]): V28[32] 4 bytes read-only
    ip = 134513938[32]
0x8048512:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=V28[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=V29[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]): V28[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]): V29[32] 4 bytes read-only
    ip = V29[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048513:lea    esi, [esi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513945[32]
    memory:
    ip = 134513945[32]
0x8048519:lea    edi, [edi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513952[32]
    memory:
    ip = 134513952[32]
0x8048520:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513953[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513953[32]
0x8048521:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513955[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134513955[32]
0x8048523:push   edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513956[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
    ip = 134513956[32]
0x8048524:push   esi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513957[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V7[32] 4 bytes
    ip = 134513957[32]
0x8048525:push   ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513958[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V7[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134513958[32]
0x8048526:sub    esp, 0x0c
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513961[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V7[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134513961[32]
0x8048529:call   0x0804852e
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513966[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V8[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V7[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]): V4[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]): 134513966[32] 4 bytes
    ip = 134513966[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513967[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513967[32]
0x804852f:add    ebx, 0x0000119a
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4506[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4506[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513973[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513973[32]
0x8048535:lea    eax, [ebx + 0xffffff20(-0x000000e0)]
    ax=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4506[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4506[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513979[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513979[32]
0x804853b:lea    edx, [ebx + 0xffffff20(-0x000000e0)]
    ax=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    cx=V2[32]
    dx=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4506[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4506[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4506[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] V4[32]) 4506[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513985[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513985[32]
0x8048541:sub    eax, edx
    ax=(add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))
    cx=V2[32]
    dx=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33])))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33])))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33])))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513987[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513987[32]
0x8048543:sar    eax, 0x02
    ax=(asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))
    cx=V2[32]
    dx=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33]))))))) (extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))
    ?1=V16[1]
    pf=(ite[1] (invert[1] (zerop[1] 2[5])) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))))))) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))))))
    ?3=V18[1]
    af=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33]))))))) V31[1])
    ?5=V20[1]
    zf=(ite[1] (invert[1] (zerop[1] 2[5])) (zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (zerop[1] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))
    sf=(ite[1] (invert[1] (zerop[1] 2[5])) (extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(ite[1] (zerop[1] 2[5]) (bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33]))))))) 0[1])
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513990[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134513990[32]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0(-0x10)], eax
    ax=(asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))
    cx=V2[32]
    dx=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33]))))))) (extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))
    ?1=V16[1]
    pf=(ite[1] (invert[1] (zerop[1] 2[5])) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))))))) (invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))))))
    ?3=V18[1]
    af=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33]))))))) V31[1])
    ?5=V20[1]
    zf=(ite[1] (invert[1] (zerop[1] 2[5])) (zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (zerop[1] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))
    sf=(ite[1] (invert[1] (zerop[1] 2[5])) (extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(ite[1] (zerop[1] 2[5]) (bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33]))))))) 0[1])
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513993[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] V6[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) 4 bytes
    ip = 134513993[32]
0x8048549:dec    eax
    ax=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])
    cx=V2[32]
    dx=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(ite[1] (zerop[1] 2[5]) (invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]))) 1[33]))))))) (extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513994[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] V6[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) 4 bytes
    ip = 134513994[32]
0x804854a:cmp    eax, 0xff(-0x01)
    ax=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])
    cx=V2[32]
    dx=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513997[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] V6[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) 4 bytes
    ip = 134513997[32]
0x804854d:je     0x0804856b
    ax=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])
    cx=V2[32]
    dx=(add[32] (add[32] V4[32] 4506[32]) -224[32])
    bx=(add[32] V4[32] 4506[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=(ite[32] (zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) 134514027[32] 134513999[32])
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] V6[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) 4 bytes
    ip = (ite[32] (zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] V4[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] V4[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])) 134514027[32] 134513999[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V3[32] (extract[32] 0[32] 32[32] (umul[40] V1[32] 4[8])))
    di=V7[32]
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=V14[1]
    ?1=V15[1]
    pf=V16[1]
    ?3=V17[1]
    af=V18[1]
    ?5=V19[1]
    zf=V20[1]
    sf=V21[1]
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=V25[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134514002[32]
    memory:
    ip = 134514002[32]
0x8048552:xor    edi, edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V3[32] (extract[32] 0[32] 32[32] (umul[40] V1[32] 4[8])))
    di=(bv-xor[32] V7[32] V7[32])
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-xor[32] V7[32] V7[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V7[32] V7[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134514004[32]
    memory:
    ip = 134514004[32]
0x8048554:lea    esi, [esi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V3[32] (extract[32] 0[32] 32[32] (umul[40] V1[32] 4[8])))
    di=(bv-xor[32] V7[32] V7[32])
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-xor[32] V7[32] V7[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V7[32] V7[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134514010[32]
    memory:
    ip = 134514010[32]
0x804855a:lea    edi, [edi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V3[32] (extract[32] 0[32] 32[32] (umul[40] V1[32] 4[8])))
    di=(bv-xor[32] V7[32] V7[32])
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-xor[32] V7[32] V7[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V7[32] V7[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=134514016[32]
    memory:
    ip = 134514016[32]
0x8048560:call   DWORD PTR ds:[esi]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=(add[32] V3[32] (extract[32] 0[32] 32[32] (umul[40] V1[32] 4[8])))
    di=(bv-xor[32] V7[32] V7[32])
    es=V8[16]
    cs=V9[16]
    ss=V10[16]
    ds=V11[16]
    fs=V12[16]
    gs=V13[16]
    cf=0[1]
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] V7[32] V7[32])))))))
    ?3=V17[1]
    af=V30[1]
    ?5=V19[1]
    zf=(zerop[1] (bv-xor[32] V7[32] V7[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] V7[32] V7[32]))
    tf=V22[1]
    if=V23[1]
    df=V24[1]
    of=0[1]
    iopl0=V26[1]
    iopl1=V27[1]
    nt=V28[1]
    ?15=V29[1]
    ip=V31[32]
    memory:
        (add[32] V5[32] -4[32]): 134514018[32] 4 bytes
        (add[32] V3[32] (extract[32] 0[32] 32[32] (umul[40] V1[32] 4[8]))): V31[32] 4 bytes read-only
    ip = V31[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=(add[32] V8[32] 1[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V8[32] 1[32])))))))
    ?3=V17[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V8[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V8[32]) 1[33])))))
    ?5=V18[1]
    zf=(zerop[1] (add[32] V8[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V8[32] 1[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V8[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V8[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V8[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] V8[32]) 1[33]))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134514019[32]
    memory:
    ip = 134514019[32]
0x8048563:sub    esi, 0x04
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V7[32] -4[32])
    di=(add[32] V8[32] 1[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V7[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V7[32]) 4294967292[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V7[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V7[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V7[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V7[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V7[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V7[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V7[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V7[32] -4[32])))))))
    ?3=V17[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V7[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V7[32]) 4294967292[33]))))))
    ?5=V18[1]
    zf=(zerop[1] (add[32] V7[32] -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V7[32] -4[32]))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V7[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V7[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V7[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V7[32]) 4294967292[33]))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134514022[32]
    memory:
    ip = 134514022[32]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0(-0x10)], edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V7[32] -4[32])
    di=(add[32] V8[32] 1[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V26[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) (add[33] (uextend[33] 33[32] V26[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) 1[33])))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32]))))))))
    ?3=V17[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V26[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) (add[33] (uextend[33] 33[32] V26[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) 1[33])))))))
    ?5=V18[1]
    zf=(zerop[1] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))
    sf=(extract[1] 31[32] 32[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V26[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) (add[33] (uextend[33] 33[32] V26[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V26[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) (add[33] (uextend[33] 33[32] V26[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) 1[33])))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=134514025[32]
    memory:
        (add[32] V6[32] -16[32]): V26[32] 4 bytes read-only
    ip = 134514025[32]
0x8048569:jne    0x08048560
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=(add[32] V7[32] -4[32])
    di=(add[32] V8[32] 1[32])
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V26[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) (add[33] (uextend[33] 33[32] V26[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) 1[33])))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32]))))))))
    ?3=V17[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V26[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) (add[33] (uextend[33] 33[32] V26[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) 1[33])))))))
    ?5=V18[1]
    zf=(zerop[1] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))
    sf=(extract[1] 31[32] 32[32] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))
    tf=V19[1]
    if=V20[1]
    df=V21[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V26[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) (add[33] (uextend[33] 33[32] V26[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V26[32]) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) (add[33] (uextend[33] 33[32] V26[32]) (add[33] (uextend[33] 33[32] (invert[32] (add[32] V8[32] 1[32]))) 1[33])))))))
    iopl0=V22[1]
    iopl1=V23[1]
    nt=V24[1]
    ?15=V25[1]
    ip=(ite[32] (invert[1] (zerop[1] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) 134514016[32] 134514027[32])
    memory:
        (add[32] V6[32] -16[32]): V26[32] 4 bytes read-only
    ip = (ite[32] (invert[1] (zerop[1] (add[32] V26[32] (add[32] (invert[32] (add[32] V8[32] 1[32])) 1[32])))) 134514016[32] 134514027[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514096[32]
    memory:
        (add[32] V5[32] -4[32]): 134514032[32] 4 bytes
    ip = 134514096[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 12[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134514035[32]
    memory:
    ip = 134514035[32]
0x8048573:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] V5[32] 12[32]) 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134514036[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
    ip = 134514036[32]
0x8048574:pop    esi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32])
    bp=V6[32]
    si=V26[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134514037[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
    ip = 134514037[32]
0x8048575:pop    edi
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32])
    bp=V6[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134514038[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
    ip = 134514038[32]
0x8048576:pop    ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=V28[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=134514039[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]): V28[32] 4 bytes read-only
    ip = 134514039[32]
0x8048577:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V25[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=V28[32]
    si=V26[32]
    di=V27[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?1=V15[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V5[32] 12[32])))))))
    ?3=V16[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33])))))
    ?5=V17[1]
    zf=(zerop[1] (add[32] V5[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V5[32] 12[32]))
    tf=V18[1]
    if=V19[1]
    df=V20[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V5[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] V5[32]) 12[33]))))))
    iopl0=V21[1]
    iopl1=V22[1]
    nt=V23[1]
    ?15=V24[1]
    ip=V29[32]
    memory:
        (add[32] V5[32] 12[32]): V25[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 12[32]) 4[32]): V26[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]): V27[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]): V28[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] (add[32] V5[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]): V29[32] 4 bytes read-only
    ip = V29[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048578:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514041[32]
    memory:
    ip = 134514041[32]
0x8048579:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514042[32]
    memory:
    ip = 134514042[32]
0x804857a:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514043[32]
    memory:
    ip = 134514043[32]
0x804857b:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514044[32]
    memory:
    ip = 134514044[32]
0x804857c:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514045[32]
    memory:
    ip = 134514045[32]
0x804857d:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514046[32]
    memory:
    ip = 134514046[32]
0x804857e:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514047[32]
    memory:
    ip = 134514047[32]
0x804857f:nop    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514048[32]
    memory:
    ip = 134514048[32]
0x8048580:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514049[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134514049[32]
0x8048581:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514051[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134514051[32]
0x8048583:push   ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514052[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134514052[32]
0x8048584:sub    esp, 0x04
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514055[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134514055[32]
0x8048587:mov    ebx, 0x080495e8
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=134518248[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514060[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134514060[32]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax=V31[32]
    cx=V2[32]
    dx=V3[32]
    bx=134518248[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] V5[32] -4[32]) -4[32])) 4294967292[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514065[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
        134518248[32]: V31[32] 4 bytes read-only
    ip = 134514065[32]
0x8048591:cmp    eax, 0xff(-0x01)
    ax=V31[32]
    cx=V2[32]
    dx=V3[32]
    bx=134518248[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V31[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V31[32] 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514068[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
        134518248[32]: V31[32] 4 bytes read-only
    ip = 134514068[32]
0x8048594:je     0x080485ac
    ax=V31[32]
    cx=V2[32]
    dx=V3[32]
    bx=134518248[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V31[32] 1[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V31[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V31[32] 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V31[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V31[32]) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=(ite[32] (zerop[1] (add[32] V31[32] 1[32])) 134514092[32] 134514070[32])
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
        134518248[32]: V31[32] 4 bytes read-only
    ip = (ite[32] (zerop[1] (add[32] V31[32] 1[32])) 134514092[32] 134514070[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514073[32]
    memory:
    ip = 134514073[32]
0x8048599:lea    edi, [edi + 0x00000000]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514080[32]
    memory:
    ip = 134514080[32]
0x80485a0:sub    ebx, 0x04
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] -4[32])
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V4[32]) 4294967292[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V4[32]) 4294967292[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] -4[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V4[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V4[32]) 4294967292[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514083[32]
    memory:
    ip = 134514083[32]
0x80485a3:call   eax
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] -4[32])
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V4[32]) 4294967292[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] -4[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V4[32]) 4294967292[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] -4[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V4[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] V4[32]) 4294967292[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V1[32]
    memory:
        (add[32] V5[32] -4[32]): 134514085[32] 4 bytes
    ip = V1[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514087[32]
    memory:
        V4[32]: V1[32] 4 bytes read-only
    ip = 134514087[32]
0x80485a7:cmp    eax, 0xff(-0x01)
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V1[32]) 1[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V1[32]) 1[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V1[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V1[32] 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V1[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V1[32]) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514090[32]
    memory:
        V4[32]: V1[32] 4 bytes read-only
    ip = 134514090[32]
0x80485aa:jne    0x080485a0
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=V5[32]
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V1[32]) 1[33]))))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V1[32] 1[32])))))))
    ?3=V18[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V1[32]) 1[33]))))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V1[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V1[32] 1[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V1[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V1[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] V1[32]) 1[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=(ite[32] (invert[1] (zerop[1] (add[32] V1[32] 1[32]))) 134514080[32] 134514092[32])
    memory:
        V4[32]: V1[32] 4 bytes read-only
    ip = (ite[32] (invert[1] (zerop[1] (add[32] V1[32] 1[32]))) 134514080[32] 134514092[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514093[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
    ip = 134514093[32]
0x80485ad:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] (add[32] V5[32] 4[32]) 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514094[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
    ip = 134514094[32]
0x80485ae:pop    ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] (add[32] (add[32] V5[32] 4[32]) 4[32]) 4[32])
    bp=V32[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514095[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 4[32]) 4[32]): V32[32] 4 bytes read-only
    ip = 134514095[32]
0x80485af:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] (add[32] (add[32] (add[32] V5[32] 4[32]) 4[32]) 4[32]) 4[32])
    bp=V32[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V33[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 4[32]) 4[32]): V32[32] 4 bytes read-only
        (add[32] (add[32] (add[32] V5[32] 4[32]) 4[32]) 4[32]): V33[32] 4 bytes read-only
    ip = V33[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514097[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134514097[32]
0x80485b1:mov    ebp, esp
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514099[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
    ip = 134514099[32]
0x80485b3:push   ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] V5[32] -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514100[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
    ip = 134514100[32]
0x80485b4:push   eax
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514101[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V1[32] 4 bytes
    ip = 134514101[32]
0x80485b5:call   0x080485ba
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32])
    bp=(add[32] V5[32] -4[32])
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514106[32]
    memory:
        (add[32] V5[32] -4[32]): V6[32] 4 bytes
        (add[32] (add[32] V5[32] -4[32]) -4[32]): V4[32] 4 bytes
        (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]): V1[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] V5[32] -4[32]) -4[32]) -4[32]) -4[32]): 134514106[32] 4 bytes
    ip = 134514106[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514107[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134514107[32]
0x80485bb:add    ebx, 0x0000110e
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] 4366[32])
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] V4[32]) 4366[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] V4[32]) 4366[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4366[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4366[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] V4[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] V4[32]) 4366[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514113[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
    ip = 134514113[32]
0x80485c1:call   0x08048390
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=(add[32] V4[32] 4366[32])
    sp=(add[32] (add[32] V5[32] 4[32]) -4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] V4[32]) 4366[33])))))
    ?1=V16[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] V4[32] 4366[32])))))))
    ?3=V18[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] V4[32]) 4366[33])))))
    ?5=V20[1]
    zf=(zerop[1] (add[32] V4[32] 4366[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] V4[32] 4366[32]))
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] V4[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] V4[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] V4[32]) 4366[33]))))))
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134513552[32]
    memory:
        V5[32]: V4[32] 4 bytes read-only
        (add[32] (add[32] V5[32] 4[32]) -4[32]): 134514118[32] 4 bytes
    ip = 134513552[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V4[32]
    sp=(add[32] V5[32] 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514119[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
    ip = 134514119[32]
0x80485c7:pop    ebx
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] (add[32] V5[32] 4[32]) 4[32])
    bp=V6[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514120[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
    ip = 134514120[32]
0x80485c8:leave  
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] V6[32] 4[32])
    bp=V32[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=134514121[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
        V6[32]: V32[32] 4 bytes read-only
    ip = 134514121[32]
0x80485c9:ret    
    ax=V1[32]
    cx=V2[32]
    dx=V3[32]
    bx=V31[32]
    sp=(add[32] (add[32] V6[32] 4[32]) 4[32])
    bp=V32[32]
    si=V7[32]
    di=V8[32]
    es=V9[16]
    cs=V10[16]
    ss=V11[16]
    ds=V12[16]
    fs=V13[16]
    gs=V14[16]
    cf=V15[1]
    ?1=V16[1]
    pf=V17[1]
    ?3=V18[1]
    af=V19[1]
    ?5=V20[1]
    zf=V21[1]
    sf=V22[1]
    tf=V23[1]
    if=V24[1]
    df=V25[1]
    of=V26[1]
    iopl0=V27[1]
    iopl1=V28[1]
    nt=V29[1]
    ?15=V30[1]
    ip=V33[32]
    memory:
        V5[32]: V1[32] 4 bytes read-only
        (add[32] V5[32] 4[32]): V31[32] 4 bytes read-only
        V6[32]: V32[32] 4 bytes read-only
        (add[32] V6[32] 4[32]): V33[32] 4 bytes read-only
    ip = V33[32]
analyzed headers: 1
