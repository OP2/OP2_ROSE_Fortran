while(i < j){printf(("*** i < j ***"));i++;}
modref:  i ;  readref:  i j i ;  killref:  i
Unknown 
i < j;
modref:  ;  readref:  i j ;  killref: 
printf(("*** i < j ***"));
modref:  ;  readref:  ;  killref: 
Unknown 
i++;
modref:  i ;  readref:  i ;  killref:  i
do {printf(("***i < 2j***"));i++;if(i > 300) {break;}else {if(i < 100) {continue;}else {}}if(i == 100) {goto exit;}else {}}while(i <(2 * j));
modref:  i ;  readref:  i i i i i j ;  killref:  i
Unknown 
printf(("***i < 2j***"));
modref:  ;  readref:  ;  killref: 
Unknown 
i++;
modref:  i ;  readref:  i ;  killref:  i
if(i > 300) {break;}else {if(i < 100) {continue;}else {}}
modref:  ;  readref:  i i ;  killref: 
i > 300;
modref:  ;  readref:  i ;  killref: 
break;
modref:  ;  readref:  ;  killref: 
if(i < 100) {continue;}else {}
modref:  ;  readref:  i ;  killref: 
i < 100;
modref:  ;  readref:  i ;  killref: 
continue;
modref:  ;  readref:  ;  killref: 
if(i == 100) {goto exit;}else {}
modref:  ;  readref:  i ;  killref: 
i == 100;
modref:  ;  readref:  i ;  killref: 
goto exit;
modref:  ;  readref:  ;  killref: 
i <(2 * j);
modref:  ;  readref:  i j ;  killref: 
for(i = 500;i > j;--i) {switch(i){case 200:{printf(("init"));break;}case 99:{printf((" tmp"));}case 2:{printf((" error"));return ;}case 120:{continue;}case 100:{printf((" ending"));i =(i + 1);break;}case 98:{goto exit;}case 101:{i =(i - 1);break;}}if(i == 100) {j--;}else {j++;}if(i == 101) {break;}else {}}
modref:  i i i i j j ;  readref:  i j i i i i i j j i ;  killref:  i i i i j j
Unknown 
i = 500;
modref:  i ;  readref:  ;  killref:  i
i > j;
modref:  ;  readref:  i j ;  killref: 
i;
modref:  ;  readref:  i ;  killref: 
case 200:{printf(("init"));break;}
modref:  ;  readref:  ;  killref: 
Unknown 
printf(("init"));
modref:  ;  readref:  ;  killref: 
Unknown 
break;
modref:  ;  readref:  ;  killref: 
case 99:{printf((" tmp"));}
modref:  ;  readref:  ;  killref: 
Unknown 
printf((" tmp"));
modref:  ;  readref:  ;  killref: 
Unknown 
case 2:{printf((" error"));return ;}
modref:  ;  readref:  ;  killref: 
Unknown 
printf((" error"));
modref:  ;  readref:  ;  killref: 
Unknown 
return ;
modref:  ;  readref:  ;  killref: 
case 120:{continue;}
modref:  ;  readref:  ;  killref: 
continue;
modref:  ;  readref:  ;  killref: 
case 100:{printf((" ending"));i =(i + 1);break;}
modref:  i ;  readref:  i ;  killref:  i
Unknown 
printf((" ending"));
modref:  ;  readref:  ;  killref: 
Unknown 
i =(i + 1);
modref:  i ;  readref:  i ;  killref:  i
break;
modref:  ;  readref:  ;  killref: 
case 98:{goto exit;}
modref:  ;  readref:  ;  killref: 
goto exit;
modref:  ;  readref:  ;  killref: 
case 101:{i =(i - 1);break;}
modref:  i ;  readref:  i ;  killref:  i
i =(i - 1);
modref:  i ;  readref:  i ;  killref:  i
break;
modref:  ;  readref:  ;  killref: 
if(i == 100) {j--;}else {j++;}
modref:  j j ;  readref:  i j j ;  killref:  j j
i == 100;
modref:  ;  readref:  i ;  killref: 
j--;
modref:  j ;  readref:  j ;  killref:  j
j++;
modref:  j ;  readref:  j ;  killref:  j
if(i == 101) {break;}else {}
modref:  ;  readref:  i ;  killref: 
i == 101;
modref:  ;  readref:  i ;  killref: 
break;
modref:  ;  readref:  ;  killref: 
exit:;
modref:  ;  readref:  ;  killref: 
