================================== Installing ROSE ================================
This directory contains several ROSE tarballs and several files modified by Imperial
College in the ROSE distribution. These modified files are needed to compile our
source-to-source translator. 

All installation and maintenance of the ROSE installation is controlled through the
Python script 'build.py' found in this directory. To display all options, run
'python build.py -h'

However, in general, to install a fresh ROSE revision from a tarball, run
'python build.py -b'

Note that ROSE requires particular versions of tools and certain environment variables
to be set. See the ROSE documentataion for more assistance. The 'build.py' does some 
environment verification. It is imperative that, when building ROSE from scratch, the 
script can find the Boost libraries and libjvm in your LD_LIBRARY_PATH (required by ROSE). 

================================== Prerequisites ================================
This is an incomplete list of prerequisites for building ROSE and how to set them
up on ubuntu:
* gcc (Note: only gcc 4.1 to 4.4 are currently supported!)
* SUN javac
  sudo apt-get install sun-java6-jdk
  sudo update-alternatives --config javac # select SUN
* Boost libraries (Note: only Boost 1.40 or 1.42 are currently supported!):
  sudo apt-get install libboost-system-dev
  sudo apt-get install libboost-filesystem-dev
  sudo apt-get install libboost-date-time-dev

================================== Updating ROSE ================================
Sometimes it is necessary to modify some of the ROSE source files in order to add
functionality to our source-to-source translator. When doing so, here are the actions
to take:
1) Copy the specific source file to the directory 'ImperialModifications'. (Of course,
   check first that the file is not already there.)

2) Add to the file 'ImperialModifications/fileLocations.txt' the original DIRECTORY 
   within the ROSE source tree to which the source file belongs. For example:
   myFile.C=src/backend/unparser/FortranCodeGeneration

3) Make changes to the file. ALWAYS delimit changes between the following comments:
   // Imperial College changes
   // END Imperial College changes
   This facilitates tracking of modifications.
   Also note that the ROSE installer disallows tabs in source files. Ensure that none
   are present in your edits, otherwise the build is guaranteed to fail.

4) Run 'python build.py -u'.
   The script performs an MD5 checksum on the file contained in the 'ImperialModifications'
   directory and the file contained in the ROSE source tree. If changes are detected, the
   script forces a rebuild and re-installation of ROSE.

======================================= Comments =====================================
Note that this method is not future proof. In particular, there are likely to be problems 
if the ROSE developers re-engineer the source files which we modify, as we effectively
checkpoint the file from a particular revision. 

This is the only solution we found to maintaining the ROSE distribution on git as there
are problems with automake, even though we adhere strictly to all the guidelines given
in the ROSE documentation.
