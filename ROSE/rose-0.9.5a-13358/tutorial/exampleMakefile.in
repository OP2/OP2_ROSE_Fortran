# Example Makefile for ROSE users
# This makefile is provided as an example of how to use ROSE when ROSE is
# installed (using "make install").  This makefile is tested as part of the
# "make distcheck" rule (run as part of tests before any SVN checkin).
# The test of this makefile can also be run by using the "make installcheck"
# rule (run as part of "make distcheck").


# Location of include directory after "make install"
ROSE_INCLUDE_DIR = @prefix@/include

# Location of Boost include directory
BOOST_CPPFLAGS = @BOOST_CPPFLAGS@

# Location of Dwarf include and lib (if ROSE is configured to use Dwarf)
ROSE_DWARF_INCLUDES = @DWARF_INCLUDE@
ROSE_DWARF_LIBS_WITH_PATH = @DWARF_LINK@

# Location of library directory after "make install"
ROSE_LIB_DIR = @prefix@/lib

CC                    = @CC@
CXX                   = @CXX@
CPPFLAGS              = @CPPFLAGS@
#CXXCPPFLAGS           = @CXXCPPFLAGS@
CXXFLAGS              = @CXXFLAGS@
LDFLAGS               = @LDFLAGS@

ROSE_LIBS = $(ROSE_LIB_DIR)/librose.la

# Location of source code
ROSE_SOURCE_DIR = \
   @top_srcdir@/tutorial

executableFiles = identityTranslator ASTGraphGenerator \
               visitorTraversal inheritedAttributeTraversal \
               synthesizedAttributeTraversal \
               inheritedAndSynthesizedAttributeTraversal \
               accumulatorAttributeTraversal persistantAttributes \
               queryLibraryExample nestedTraversal \
               loopRecognition \
               typeInfoFromFunctionParameters \
               resolveOverloadedFunction templateParameter \
               instrumentationExample addVariableDeclaration \
               addFunctionDeclaration loopOptimization \
               buildCFG debuggingIRnodeToString \
               debuggingSourceCodePositionInformation \
               commandlineProcessing \
               loopNestingInfoProcessing

# Default make rule to use
all: $(executableFiles)
	@if [ x$${ROSE_IN_BUILD_TREE:+present} = xpresent ]; then echo "ROSE_IN_BUILD_TREE should not be set" >&2; exit 1; fi

# Example of how to use ROSE (linking to dynamic library, which is must faster
# and smaller than linking to static libraries).  Dynamic linking requires the 
# use of the "-L$(ROSE_LIB_DIR) -Wl,-rpath" syntax if the LD_LIBRARY_PATH is not
# modified to use ROSE_LIB_DIR.  We provide two example of this; one using only
# the "-lrose -ledg" libraries, and one using the many separate ROSE libraries.
$(executableFiles):
#	g++ -I$(ROSE_INCLUDE_DIR) -o $@ $(ROSE_SOURCE_DIR)/$@.C -L$(ROSE_LIB_DIR) -Wl,-rpath $(ROSE_LIB_DIR) $(ROSE_LIBS)
#	g++ -I$(ROSE_INCLUDE_DIR) -o $@ $(ROSE_SOURCE_DIR)/$@.C $(LIBS_WITH_RPATH) $(ROSE_LIBS)
#	/bin/sh @top_builddir@/libtool --mode=link $(CXX) $(CPPFLAGS) $(CXXFLAGS)  $(LDFLAGS) -I$(ROSE_INCLUDE_DIR) $(BOOST_CPPFLAGS) -o $@ $(ROSE_SOURCE_DIR)/$@.C $(ROSE_LIBS)
	/bin/sh @top_builddir@/libtool --mode=link $(CXX) $(CPPFLAGS) $(CXXFLAGS)  $(LDFLAGS) -I$(ROSE_INCLUDE_DIR) $(BOOST_CPPFLAGS) $(ROSE_DWARF_INCLUDES) -o $@ $(ROSE_SOURCE_DIR)/$@.C $(ROSE_LIBS) $(ROSE_DWARF_LIBS_WITH_PATH)


