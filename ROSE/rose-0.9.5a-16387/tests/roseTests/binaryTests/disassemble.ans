using this memory map for disassembly:
    va 0x08048000 + 0x00000034 = 0x08048034 r-xp at base aaa  + 0x00000000 i686-test1.O0.bin(LOAD#2)
    va 0x08048034 + 0x000000e0 = 0x08048114 r-xp at base aab  + 0x00000000 i686-test1.O0.bin(PHDR#0)
    va 0x08048114 + 0x00000013 = 0x08048127 r--p at base aac  + 0x00000000 i686-test1.O0.bin(.interp)
    va 0x08048127 + 0x00000001 = 0x08048128 r-xp at base aaa  + 0x00000127 i686-test1.O0.bin(LOAD#2)
    va 0x08048128 + 0x00000020 = 0x08048148 r--p at base aad  + 0x00000000 i686-test1.O0.bin(.note.ABI-tag)
    va 0x08048148 + 0x0000011f = 0x08048267 r--- at base aae  + 0x00000148 i686-test1.O0.bin(.dynstr+.dynsym+.hash)
    va 0x08048267 + 0x00000001 = 0x08048268 r-xp at base aaa  + 0x00000267 i686-test1.O0.bin(LOAD#2)
    va 0x08048268 + 0x00000060 = 0x080482c8 r--- at base aae  + 0x00000268 i686-test1.O0.bin(.gnu.version+.gnu.version_r+.rel.d...
    va 0x080482c8 + 0x00000017 = 0x080482df r-x- at base aae  + 0x000002c8 i686-test1.O0.bin(.init)
    va 0x080482df + 0x00000001 = 0x080482e0 r-xp at base aaa  + 0x000002df i686-test1.O0.bin(LOAD#2)
    va 0x080482e0 + 0x000002ca = 0x080485aa r-x- at base aae  + 0x000002e0 i686-test1.O0.bin(.fini+.plt+.text)
    va 0x080485aa + 0x00000002 = 0x080485ac r-xp at base aaa  + 0x000005aa i686-test1.O0.bin(LOAD#2)
    va 0x080485ac + 0x00000017 = 0x080485c3 r--- at base aae  + 0x000005ac i686-test1.O0.bin(.rodata)
    va 0x080485c3 + 0x00000001 = 0x080485c4 r-xp at base aaa  + 0x000005c3 i686-test1.O0.bin(LOAD#2)
    va 0x080485c4 + 0x00000004 = 0x080485c8 r--- at base aae  + 0x000005c4 i686-test1.O0.bin(.eh_frame)
    va 0x080485c8 + 0x00000a38 = 0x08049000 r-xp at base aaa  + 0x000005c8 i686-test1.O0.bin(LOAD#2)
    va 0x08049000 + 0x000005c8 = 0x080495c8 rw-p at base aaf  + 0x00000000 i686-test1.O0.bin(LOAD#3)
    va 0x080495c8 + 0x00000014 = 0x080495dc rw-- at base aae  + 0x000005c8 i686-test1.O0.bin(.ctors+.dtors+.jcr)
    va 0x080495dc + 0x000000c8 = 0x080496a4 rw-p at base aag  + 0x00000000 i686-test1.O0.bin(.dynamic)
    va 0x080496a4 + 0x00000030 = 0x080496d4 rw-- at base aae  + 0x000006a4 i686-test1.O0.bin(.data+.got+.got.plt)
    va 0x080496d4 + 0x0000092c = 0x0804a000 rw-p at anon null + 0x00000000 i686-test1.O0.bin(.bss+LOAD#3)
disassembled 256 instructions and 1 failure (use --show-bad to see errors)
0x080482c8: ============================ Function (function call, symbol) <_init>
0x080482c8: 55                |U     |   push   ebp
0x080482c9: 89 e5             |..    |   mov    ebp, esp
0x080482cb: 83 ec 08          |...   |   sub    esp, 0x08
0x080482ce: e8 91 00 00 00    |..... |   call   0x08048364<call_gmon_start>
            (successors: 0x080482d3 0x08048364)

0x080482d3: e8 f8 00 00 00    |..... |   call   0x080483d0<frame_dummy>
            (dominator 0x080482c8)
            (successors: 0x080482d8 0x080483d0)

0x080482d8: e8 83 02 00 00    |..... |   call   0x08048560<__do_global_ctors_aux>
            (dominator 0x080482d3)
            (successors: 0x080482dd 0x08048560)

0x080482dd: c9                |.     |   leave  
0x080482de: c3                |.     |   ret    
            (dominator 0x080482d8)
            (successors:...)

0x080482f0: ============================ Function (function call, import) <signal@plt>
0x080482f0: ff 25 b4 96 04 08 |.%....|   jmp    DWORD PTR ds:[0x080496b4]
            (successors:...)

0x08048300: ============================ Function (function call, import) <puts@plt>
0x08048300: ff 25 b8 96 04 08 |.%....|   jmp    DWORD PTR ds:[0x080496b8]
            (successors:...)

0x08048310: ============================ Function (function call, import) <__libc_start_main@plt>
0x08048310: ff 25 bc 96 04 08 |.%....|   jmp    DWORD PTR ds:[0x080496bc]
            (successors:...)

0x08048320: ============================ Function (function call, import) <_exit@plt>
0x08048320: ff 25 c0 96 04 08 |.%....|   jmp    DWORD PTR ds:[0x080496c0]
            (successors:...)

0x08048330: ============================ Function (function call, import) <__gmon_start__@plt>
0x08048330: ff 25 c4 96 04 08 |.%....|   jmp    DWORD PTR ds:[0x080496c4]
            (successors:...)

0x08048340: ============================ Function (entry point, symbol) <_start>
0x08048340: 31 ed             |1.    |   xor    ebp, ebp
0x08048342: 5e                |^     |   pop    esi
0x08048343: 89 e1             |..    |   mov    ecx, esp
0x08048345: 83 e4 f0          |...   |   and    esp, 0xf0<-0x10>
0x08048348: 50                |P     |   push   eax
0x08048349: 54                |T     |   push   esp
0x0804834a: 52                |R     |   push   edx
0x0804834b: 68 00 85 04 08    |h.... |   push   0x08048500<__libc_csu_fini>
0x08048350: 68 90 84 04 08    |h.... |   push   0x08048490<__libc_csu_init>
0x08048355: 51                |Q     |   push   ecx
0x08048356: 56                |V     |   push   esi
0x08048357: 68 5b 84 04 08    |h[... |   push   0x0804845b<main>
0x0804835c: e8 af ff ff ff    |..... |   call   0x08048310<__libc_start_main@plt>
            (successors: 0x08048310 0x08048361)

0x08048361: f4                |.     |   hlt    
            (dominator 0x08048340)
            (successors:)

0x08048362: ============================ Function (padding) unknown name
0x08048362: 90                |.     |   nop    
0x08048363: 90                |.     |   nop    
            (successors: 0x08048364)

0x08048364: ============================ Function (function call, symbol) <call_gmon_start>
0x08048364: 55                |U     |   push   ebp
0x08048365: 89 e5             |..    |   mov    ebp, esp
0x08048367: 53                |S     |   push   ebx
0x08048368: 51                |Q     |   push   ecx
0x08048369: e8 00 00 00 00    |..... |   call   0x0804836e
0x0804836e: 5b                |[     |   pop    ebx
0x0804836f: 81 c3 3a 13 00 00 |..:...|   add    ebx, 0x0000133a
0x08048375: 8b 93 fc ff ff ff |......|   mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
0x0804837b: 85 d2             |..    |   test   edx, edx
0x0804837d: 74 05             |t.    |   je     0x08048384
            (successors: 0x0804837f 0x08048384)

0x0804837f: e8 ac ff ff ff    |..... |   call   0x08048330<__gmon_start__@plt>
            (dominator 0x08048364)
            (successors: 0x08048330 0x08048384)

0x08048384: 58                |X     |   pop    eax
0x08048385: 5b                |[     |   pop    ebx
0x08048386: c9                |.     |   leave  
0x08048387: c3                |.     |   ret    
            (dominator 0x08048364)
            (successors:...)

0x08048388: ============================ Function (padding) unknown name
0x08048388: 90                |.     |   nop    
0x08048389: 90                |.     |   nop    
0x0804838a: 90                |.     |   nop    
0x0804838b: 90                |.     |   nop    
0x0804838c: 90                |.     |   nop    
0x0804838d: 90                |.     |   nop    
0x0804838e: 90                |.     |   nop    
0x0804838f: 90                |.     |   nop    
            (successors: 0x08048390)

0x08048390: ============================ Function (function call, symbol) <__do_global_dtors_aux>
0x08048390: 55                |U     |   push   ebp
0x08048391: 89 e5             |..    |   mov    ebp, esp
0x08048393: 83 ec 08          |...   |   sub    esp, 0x08
0x08048396: 80 3d d4 96 04 08 |.=....|
0x0804839c: 00                |.     |   cmp    BYTE PTR ds:[0x080496d4], 0x00
0x0804839d: 75 2d             |u-    |   jne    0x080483cc
            (successors: 0x0804839f 0x080483cc)

0x0804839f: a1 d0 96 04 08    |..... |   mov    eax, DWORD PTR ds:[0x080496d0]
0x080483a4: 8b 10             |..    |   mov    edx, DWORD PTR ds:[eax]
0x080483a6: 85 d2             |..    |   test   edx, edx
0x080483a8: 74 1b             |t.    |   je     0x080483c5
            (dominator 0x08048390)
            (successors: 0x080483aa 0x080483c5)

0x080483aa: 8d b6 00 00 00 00 |......|   lea    esi, [esi + 0x00000000]
            (dominator 0x0804839f)
            (successors: 0x080483b0)

0x080483b0: 83 c0 04          |...   |   add    eax, 0x04
0x080483b3: a3 d0 96 04 08    |..... |   mov    DWORD PTR ds:[0x080496d0], eax
0x080483b8: ff d2             |..    |   call   edx
            (dominator 0x080483aa)
            (successors: 0x080483ba...)

0x080483ba: a1 d0 96 04 08    |..... |   mov    eax, DWORD PTR ds:[0x080496d0]
0x080483bf: 8b 10             |..    |   mov    edx, DWORD PTR ds:[eax]
0x080483c1: 85 d2             |..    |   test   edx, edx
0x080483c3: 75 eb             |u.    |   jne    0x080483b0
            (dominator 0x080483b0)
            (successors: 0x080483b0 0x080483c5)

0x080483c5: c6 05 d4 96 04 08 |......|
0x080483cb: 01                |.     |   mov    BYTE PTR ds:[0x080496d4], 0x01
            (dominator 0x0804839f)
            (successors: 0x080483cc)

0x080483cc: c9                |.     |   leave  
0x080483cd: c3                |.     |   ret    
            (dominator 0x08048390)
            (successors:...)

0x080483d0: ============================ Function (function call, symbol, discontiguous) <frame_dummy>
0x080483d0: 55                |U     |   push   ebp
0x080483d1: 89 e5             |..    |   mov    ebp, esp
0x080483d3: 83 ec 08          |...   |   sub    esp, 0x08
0x080483d6: a1 d8 95 04 08    |..... |   mov    eax, DWORD PTR ds:[0x080495d8]
0x080483db: 85 c0             |..    |   test   eax, eax
0x080483dd: 74 21             |t!    |   je     0x08048400
            (successors: 0x080483df 0x08048400)

0x080483df: b8 00 00 00 00    |..... |   mov    eax, 0x00000000
0x080483e4: 85 c0             |..    |   test   eax, eax
0x080483e6: 74 18             |t.    |   je     0x08048400
            (dominator 0x080483d0)
            (successors: 0x08048400)

0x08048400: 89 ec             |..    |   mov    esp, ebp
0x08048402: 5d                |]     |   pop    ebp
0x08048403: c3                |.     |   ret    
            (dominator 0x080483d0)
            (successors:...)

0x08048404: ============================ Function (function call, symbol) <bar>
0x08048404: 55                |U     |   push   ebp
0x08048405: 89 e5             |..    |   mov    ebp, esp
0x08048407: 83 ec 08          |...   |   sub    esp, 0x08
0x0804840a: c7 04 24 b4 85 04 |..$...|
0x08048410: 08                |.     |   mov    DWORD PTR ss:[esp], 0x080485b4
0x08048411: e8 ea fe ff ff    |..... |   call   0x08048300<puts@plt>
            (successors: 0x08048300 0x08048416)

0x08048416: c9                |.     |   leave  
0x08048417: c3                |.     |   ret    
            (dominator 0x08048404)
            (successors:...)

0x08048418: ============================ Function (function call, symbol) <foo>
0x08048418: 55                |U     |   push   ebp
0x08048419: 89 e5             |..    |   mov    ebp, esp
0x0804841b: 83 ec 08          |...   |   sub    esp, 0x08
0x0804841e: e8 e1 ff ff ff    |..... |   call   0x08048404<bar>
            (successors: 0x08048404 0x08048423)

0x08048423: c7 04 24 00 00 00 |..$...|
0x08048429: 00                |.     |   mov    DWORD PTR ss:[esp], 0x00000000
0x0804842a: e8 f1 fe ff ff    |..... |   call   0x08048320<_exit@plt>
            (dominator 0x08048418)
            (successors: 0x08048320)

0x0804842f: ============================ Function (symbol) <handler>
0x0804842f: 55                |U     |   push   ebp
0x08048430: 89 e5             |..    |   mov    ebp, esp
0x08048432: 83 ec 08          |...   |   sub    esp, 0x08
0x08048435: ff 05 d8 96 04 08 |......|   inc    DWORD PTR ds:[0x080496d8]
0x0804843b: e8 d8 ff ff ff    |..... |   call   0x08048418<foo>
            (successors: 0x08048418)

0x0804845b: ============================ Function (symbol) <main>
0x0804845b: 55                |U     |   push   ebp
0x0804845c: 89 e5             |..    |   mov    ebp, esp
0x0804845e: 83 ec 08          |...   |   sub    esp, 0x08
0x08048461: 83 e4 f0          |...   |   and    esp, 0xf0<-0x10>
0x08048464: b8 00 00 00 00    |..... |   mov    eax, 0x00000000
0x08048469: 29 c4             |).    |   sub    esp, eax
0x0804846b: c7 44 24 04 2f 84 |.D$./.|
0x08048471: 04 08             |..    |   mov    DWORD PTR ss:[esp + 0x04], 0x0804842f<handler>
0x08048473: c7 04 24 0a 00 00 |..$...|
0x08048479: 00                |.     |   mov    DWORD PTR ss:[esp], 0x0000000a
0x0804847a: e8 71 fe ff ff    |.q... |   call   0x080482f0<signal@plt>
            (successors: 0x080482f0 0x0804847f)

0x0804847f: b8 00 00 00 00    |..... |   mov    eax, 0x00000000
0x08048484: c9                |.     |   leave  
0x08048485: c3                |.     |   ret    
            (dominator 0x0804845b)
            (successors:...)

0x08048486: ============================ Function (padding) unknown name
0x08048486: 90                |.     |   nop    
0x08048487: 90                |.     |   nop    
0x08048488: 90                |.     |   nop    
0x08048489: 90                |.     |   nop    
0x0804848a: 90                |.     |   nop    
0x0804848b: 90                |.     |   nop    
0x0804848c: 90                |.     |   nop    
0x0804848d: 90                |.     |   nop    
0x0804848e: 90                |.     |   nop    
0x0804848f: 90                |.     |   nop    
            (successors: 0x08048490)

0x08048490: ============================ Function (symbol) <__libc_csu_init>
0x08048490: 55                |U     |   push   ebp
0x08048491: 89 e5             |..    |   mov    ebp, esp
0x08048493: 57                |W     |   push   edi
0x08048494: 56                |V     |   push   esi
0x08048495: 53                |S     |   push   ebx
0x08048496: 83 ec 0c          |...   |   sub    esp, 0x0c
0x08048499: e8 00 00 00 00    |..... |   call   0x0804849e
0x0804849e: 5b                |[     |   pop    ebx
0x0804849f: 81 c3 0a 12 00 00 |......|   add    ebx, 0x0000120a
0x080484a5: e8 1e fe ff ff    |..... |   call   0x080482c8<_init>
            (successors: 0x080482c8 0x080484aa)

0x080484aa: 8d 83 20 ff ff ff |.. ...|   lea    eax, [ebx + 0xffffff20<-0x000000e0>]
0x080484b0: 8d 93 20 ff ff ff |.. ...|   lea    edx, [ebx + 0xffffff20<-0x000000e0>]
0x080484b6: 29 d0             |).    |   sub    eax, edx
0x080484b8: c1 f8 02          |...   |   sar    eax, 0x02
0x080484bb: 89 45 f0          |.E.   |   mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
0x080484be: 75 10             |u.    |   jne    0x080484d0
0x080484c0: 83 c4 0c          |...   |   add    esp, 0x0c
0x080484c3: 5b                |[     |   pop    ebx
0x080484c4: 5e                |^     |   pop    esi
0x080484c5: 5f                |_     |   pop    edi
0x080484c6: 5d                |]     |   pop    ebp
0x080484c7: c3                |.     |   ret    
            (dominator 0x08048490)
            (successors:...)

0x08048500: ============================ Function (symbol, discontiguous) <__libc_csu_fini>
0x08048500: 55                |U     |   push   ebp
0x08048501: 89 e5             |..    |   mov    ebp, esp
0x08048503: 57                |W     |   push   edi
0x08048504: 56                |V     |   push   esi
0x08048505: 53                |S     |   push   ebx
0x08048506: 83 ec 0c          |...   |   sub    esp, 0x0c
0x08048509: e8 00 00 00 00    |..... |   call   0x0804850e
0x0804850e: 5b                |[     |   pop    ebx
0x0804850f: 81 c3 9a 11 00 00 |......|   add    ebx, 0x0000119a
0x08048515: 8d 83 20 ff ff ff |.. ...|   lea    eax, [ebx + 0xffffff20<-0x000000e0>]
0x0804851b: 8d 93 20 ff ff ff |.. ...|   lea    edx, [ebx + 0xffffff20<-0x000000e0>]
0x08048521: 29 d0             |).    |   sub    eax, edx
0x08048523: c1 f8 02          |...   |   sar    eax, 0x02
0x08048526: 89 45 f0          |.E.   |   mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
0x08048529: 48                |H     |   dec    eax
0x0804852a: 83 f8 ff          |...   |   cmp    eax, 0xff<-0x01>
0x0804852d: 74 1c             |t.    |   je     0x0804854b
0x0804854b: e8 40 00 00 00    |.@... |   call   0x08048590<_fini>
            (successors: 0x08048550 0x08048590)

0x08048550: 83 c4 0c          |...   |   add    esp, 0x0c
0x08048553: 5b                |[     |   pop    ebx
0x08048554: 5e                |^     |   pop    esi
0x08048555: 5f                |_     |   pop    edi
0x08048556: 5d                |]     |   pop    ebp
0x08048557: c3                |.     |   ret    
            (dominator 0x08048500)
            (successors:...)

0x08048558: ============================ Function (padding) unknown name
0x08048558: 90                |.     |   nop    
0x08048559: 90                |.     |   nop    
0x0804855a: 90                |.     |   nop    
0x0804855b: 90                |.     |   nop    
0x0804855c: 90                |.     |   nop    
0x0804855d: 90                |.     |   nop    
0x0804855e: 90                |.     |   nop    
0x0804855f: 90                |.     |   nop    
            (successors: 0x08048560)

0x08048560: ============================ Function (function call, symbol) <__do_global_ctors_aux>
0x08048560: 55                |U     |   push   ebp
0x08048561: 89 e5             |..    |   mov    ebp, esp
0x08048563: 53                |S     |   push   ebx
0x08048564: 83 ec 04          |...   |   sub    esp, 0x04
0x08048567: bb c8 95 04 08    |..... |   mov    ebx, 0x080495c8
0x0804856c: a1 c8 95 04 08    |..... |   mov    eax, DWORD PTR ds:[0x080495c8]
0x08048571: 83 f8 ff          |...   |   cmp    eax, 0xff<-0x01>
0x08048574: 74 16             |t.    |   je     0x0804858c
            (successors: 0x08048576 0x0804858c)

0x08048576: 8d 76 00          |.v.   |   lea    esi, [esi + 0x00]
0x08048579: 8d bc 27 00 00 00 |..'...|
0x0804857f: 00                |.     |   lea    edi, [edi + 0x00000000]
            (dominator 0x08048560)
            (successors: 0x08048580)

0x08048580: 83 eb 04          |...   |   sub    ebx, 0x04
0x08048583: ff d0             |..    |   call   eax
            (dominator 0x08048576)
            (successors: 0x08048585...)

0x08048585: 8b 03             |..    |   mov    eax, DWORD PTR ds:[ebx]
0x08048587: 83 f8 ff          |...   |   cmp    eax, 0xff<-0x01>
0x0804858a: 75 f4             |u.    |   jne    0x08048580
            (dominator 0x08048580)
            (successors: 0x08048580 0x0804858c)

0x0804858c: 58                |X     |   pop    eax
0x0804858d: 5b                |[     |   pop    ebx
0x0804858e: 5d                |]     |   pop    ebp
0x0804858f: c3                |.     |   ret    
            (dominator 0x08048560)
            (successors:...)

0x08048590: ============================ Function (function call, symbol) <_fini>
0x08048590: 55                |U     |   push   ebp
0x08048591: 89 e5             |..    |   mov    ebp, esp
0x08048593: 53                |S     |   push   ebx
0x08048594: 50                |P     |   push   eax
0x08048595: e8 00 00 00 00    |..... |   call   0x0804859a
0x0804859a: 5b                |[     |   pop    ebx
0x0804859b: 81 c3 0e 11 00 00 |......|   add    ebx, 0x0000110e
0x080485a1: e8 ea fd ff ff    |..... |   call   0x08048390<__do_global_dtors_aux>
            (successors: 0x08048390 0x080485a6)

0x080485a6: 58                |X     |   pop    eax
0x080485a7: 5b                |[     |   pop    ebx
0x080485a8: c9                |.     |   leave  
0x080485a9: c3                |.     |   ret    
            (dominator 0x08048590)
            (successors:...)

0x080485aa: ============================ Function (padding) unknown name
0x080485aa: 00 00             |..    |   add    BYTE PTR ds:[eax], al
            (successors: 0x080485ac)



generating ASCII dump...
