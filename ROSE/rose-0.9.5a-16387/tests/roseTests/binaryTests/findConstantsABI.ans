=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v416
    cx = v417
    dx = v418
    bx = v419
    sp = v420-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v421
    si = v422
    di = v423
    es = v424
    cs = v425
    ss = v426
    ds = v427
    fs = v428
    gs = v429
    cf = v430
    ?1 = v431
    pf = v432
    ?3 = v433
    af = v434
    ?5 = v435
    zf = v436
    sf = v437
    tf = v438
    if = v439
    df = v440
    of = v441
    iopl0 = v442
    iopl1 = v443
    nt = v444
    ?15 = v445
    memory = {
        size=4; addr=v420-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v633
    cx = v634
    dx = v635
    bx = v636
    sp = v637-0x4 [from 0x80482d8:call   0x08048580]
    bp = v638
    si = v639
    di = v640
    es = v641
    cs = v642
    ss = v643
    ds = v644
    fs = v645
    gs = v646
    cf = v647
    ?1 = v648
    pf = v649
    ?3 = v650
    af = v651
    ?5 = v652
    zf = v653
    sf = v654
    tf = v655
    if = v656
    df = v657
    of = v658
    iopl0 = v659
    iopl1 = v660
    nt = v661
    ?15 = v662
    memory = {
        size=4; addr=v637-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x4 [from 0x80482dd:leave  ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x8 [from 0x80482de:ret    ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = v922 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v984
    cx = v985
    dx = v986
    bx = v987
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = v998
    ?1 = v999
    pf = v1000
    ?3 = v1001
    af = v1002
    ?5 = v1003
    zf = v1004
    sf = v1005
    tf = v1006
    if = v1007
    df = v1008
    of = v1009
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = v1017 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v1079
    cx = v1080
    dx = v1081
    bx = v1082
    sp = v1083
    bp = v1084
    si = v1085
    di = v1086
    es = v1087
    cs = v1088
    ss = v1089
    ds = v1090
    fs = v1091
    gs = v1092
    cf = v1093
    ?1 = v1094
    pf = v1095
    ?3 = v1096
    af = v1097
    ?5 = v1098
    zf = v1099
    sf = v1100
    tf = v1101
    if = v1102
    df = v1103
    of = v1104
    iopl0 = v1105
    iopl1 = v1106
    nt = v1107
    ?15 = v1108
    memory = {}
    ip = v1112 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v1174
    cx = v1175
    dx = v1176
    bx = v1177
    sp = v1178
    bp = v1179
    si = v1180
    di = v1181
    es = v1182
    cs = v1183
    ss = v1184
    ds = v1185
    fs = v1186
    gs = v1187
    cf = v1188
    ?1 = v1189
    pf = v1190
    ?3 = v1191
    af = v1192
    ?5 = v1193
    zf = v1194
    sf = v1195
    tf = v1196
    if = v1197
    df = v1198
    of = v1199
    iopl0 = v1200
    iopl1 = v1201
    nt = v1202
    ?15 = v1203
    memory = {}
    ip = v1207 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v1269
    cx = v1270
    dx = v1271
    bx = v1272
    sp = v1273
    bp = v1274
    si = v1275
    di = v1276
    es = v1277
    cs = v1278
    ss = v1279
    ds = v1280
    fs = v1281
    gs = v1282
    cf = v1283
    ?1 = v1284
    pf = v1285
    ?3 = v1286
    af = v1287
    ?5 = v1288
    zf = v1289
    sf = v1290
    tf = v1291
    if = v1292
    df = v1293
    of = v1294
    iopl0 = v1295
    iopl1 = v1296
    nt = v1297
    ?15 = v1298
    memory = {}
    ip = v1302 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1364
    cx = v1365
    dx = v1366
    bx = v1367
    sp = v1368
    bp = v1369
    si = v1370
    di = v1371
    es = v1372
    cs = v1373
    ss = v1374
    ds = v1375
    fs = v1376
    gs = v1377
    cf = v1378
    ?1 = v1379
    pf = v1380
    ?3 = v1381
    af = v1382
    ?5 = v1383
    zf = v1384
    sf = v1385
    tf = v1386
    if = v1387
    df = v1388
    of = v1389
    iopl0 = v1390
    iopl1 = v1391
    nt = v1392
    ?15 = v1393
    memory = {}
    ip = v1397 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1459
    cx = v1460
    dx = v1461
    bx = v1462
    sp = v1463
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1465
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1459
    cx = v1460
    dx = v1461
    bx = v1462
    sp = v1463+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1463+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1474
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1459
    cx = v1463+0x4 [from 0x8048342:pop    esi]
    dx = v1461
    bx = v1462
    sp = v1614-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1548 [from 0x8048342:pop    esi]
    di = v1466
    es = v1467
    cs = v1468
    ss = v1469
    ds = v1470
    fs = v1471
    gs = v1472
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1474
    pf = -v1630-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1476
    af = <top>
    ?5 = v1478
    zf = v1633 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1481
    if = v1482
    df = v1483
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1485
    iopl1 = v1486
    nt = v1487
    ?15 = v1488
    memory = {
        size=4; addr=v1614-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v1614-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1614-0x1c [from 0x8048356:push   esi]; value=v1548 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x18 [from 0x8048355:push   ecx]; value=v1463+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1614-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1614-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1614-0xc [from 0x804834a:push   edx]; value=v1461
        size=4; addr=v1614-0x8 [from 0x8048349:push   esp]; value=v1614-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1614-0x4 [from 0x8048348:push   eax]; value=v1459
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v2146
    cx = v2147
    dx = v2148
    bx = v2149
    sp = v2150
    bp = v2151
    si = v2152
    di = v2153
    es = v2154
    cs = v2155
    ss = v2156
    ds = v2157
    fs = v2158
    gs = v2159
    cf = v2160
    ?1 = v2161
    pf = v2162
    ?3 = v2163
    af = v2164
    ?5 = v2165
    zf = v2166
    sf = v2167
    tf = v2168
    if = v2169
    df = v2170
    of = v2171
    iopl0 = v2172
    iopl1 = v2173
    nt = v2174
    ?15 = v2175
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048362:nop    
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243
    bp = v2244
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {}
    ip = 0x8048363 [from 0x8048362:nop    ]
0x8048363:nop    
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243
    bp = v2244
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {}
    ip = 0x8048364 [from 0x8048363:nop    ]
0x8048364:push   ebp
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x4 [from 0x8048364:push   ebp]
    bp = v2244
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x4 [from 0x8048364:push   ebp]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x8 [from 0x8048367:push   ebx]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0xc [from 0x8048368:push   ecx]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0xc [from 0x8048368:push   ecx]; value=v2240
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v2239
    cx = v2240
    dx = v2241
    bx = v2242
    sp = v2243-0x10 [from 0x8048369:call   0x0804836e]
    bp = v2243-0x4 [from 0x8048364:push   ebp]
    si = v2245
    di = v2246
    es = v2247
    cs = v2248
    ss = v2249
    ds = v2250
    fs = v2251
    gs = v2252
    cf = v2253
    ?1 = v2254
    pf = v2255
    ?3 = v2256
    af = v2257
    ?5 = v2258
    zf = v2259
    sf = v2260
    tf = v2261
    if = v2262
    df = v2263
    of = v2264
    iopl0 = v2265
    iopl1 = v2266
    nt = v2267
    ?15 = v2268
    memory = {
        size=4; addr=v2243-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v2243-0xc [from 0x8048368:push   ecx]; value=v2240
        size=4; addr=v2243-0x8 [from 0x8048367:push   ebx]; value=v2242
        size=4; addr=v2243-0x4 [from 0x8048364:push   ebp]; value=v2244
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2570
    cx = v2571
    dx = v2572
    bx = v2604 [from 0x804836e:pop    ebx]
    sp = v2574+0x4 [from 0x804836e:pop    ebx]
    bp = v2575
    si = v2576
    di = v2577
    es = v2578
    cs = v2579
    ss = v2580
    ds = v2581
    fs = v2582
    gs = v2583
    cf = v2584
    ?1 = v2585
    pf = v2586
    ?3 = v2587
    af = v2588
    ?5 = v2589
    zf = v2590
    sf = v2591
    tf = v2592
    if = v2593
    df = v2594
    of = v2595
    iopl0 = v2596
    iopl1 = v2597
    nt = v2598
    ?15 = v2599
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2570
    cx = v2571
    dx = v2572
    bx = v2604+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2574+0x4 [from 0x804836e:pop    ebx]
    bp = v2575
    si = v2576
    di = v2577
    es = v2578
    cs = v2579
    ss = v2580
    ds = v2581
    fs = v2582
    gs = v2583
    cf = v2666 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2585
    pf = -v2661-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2587
    af = v2665 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2589
    zf = v2664 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2663 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2592
    if = v2593
    df = v2594
    of = v2669 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2596
    iopl1 = v2597
    nt = v2598
    ?15 = v2599
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2570
    cx = v2571
    dx = v2705 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2604+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2574+0x4 [from 0x804836e:pop    ebx]
    bp = v2575
    si = v2576
    di = v2577
    es = v2578
    cs = v2579
    ss = v2580
    ds = v2581
    fs = v2582
    gs = v2583
    cf = v2666 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2585
    pf = -v2661-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2587
    af = v2665 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2589
    zf = v2664 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2663 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2592
    if = v2593
    df = v2594
    of = v2669 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2596
    iopl1 = v2597
    nt = v2598
    ?15 = v2599
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2570
    cx = v2571
    dx = v2705 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2604+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2574+0x4 [from 0x804836e:pop    ebx]
    bp = v2575
    si = v2576
    di = v2577
    es = v2578
    cs = v2579
    ss = v2580
    ds = v2581
    fs = v2582
    gs = v2583
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2585
    pf = -v2754-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2587
    af = <top>
    ?5 = v2589
    zf = v2757 [from 0x804837b:test   edx, edx]
    sf = v2756 [from 0x804837b:test   edx, edx]
    tf = v2592
    if = v2593
    df = v2594
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2596
    iopl1 = v2597
    nt = v2598
    ?15 = v2599
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2570
    cx = v2571
    dx = v2705 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2604+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2574+0x4 [from 0x804836e:pop    ebx]
    bp = v2575
    si = v2576
    di = v2577
    es = v2578
    cs = v2579
    ss = v2580
    ds = v2581
    fs = v2582
    gs = v2583
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2585
    pf = -v2754-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2587
    af = <top>
    ?5 = v2589
    zf = v2757 [from 0x804837b:test   edx, edx]
    sf = v2756 [from 0x804837b:test   edx, edx]
    tf = v2592
    if = v2593
    df = v2594
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2596
    iopl1 = v2597
    nt = v2598
    ?15 = v2599
    memory = {}
    ip = v2794 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v2916
    cx = v2917
    dx = v2918
    bx = v2919
    sp = v2920-0x4 [from 0x804837f:call   0x08048330]
    bp = v2921
    si = v2922
    di = v2923
    es = v2924
    cs = v2925
    ss = v2926
    ds = v2927
    fs = v2928
    gs = v2929
    cf = v2930
    ?1 = v2931
    pf = v2932
    ?3 = v2933
    af = v2934
    ?5 = v2935
    zf = v2936
    sf = v2937
    tf = v2938
    if = v2939
    df = v2940
    of = v2941
    iopl0 = v2942
    iopl1 = v2943
    nt = v2944
    ?15 = v2945
    memory = {
        size=4; addr=v2920-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v3167 [from 0x8048384:pop    eax]
    cx = v3134
    dx = v3135
    bx = v3136
    sp = v3137+0x4 [from 0x8048384:pop    eax]
    bp = v3138
    si = v3139
    di = v3140
    es = v3141
    cs = v3142
    ss = v3143
    ds = v3144
    fs = v3145
    gs = v3146
    cf = v3147
    ?1 = v3148
    pf = v3149
    ?3 = v3150
    af = v3151
    ?5 = v3152
    zf = v3153
    sf = v3154
    tf = v3155
    if = v3156
    df = v3157
    of = v3158
    iopl0 = v3159
    iopl1 = v3160
    nt = v3161
    ?15 = v3162
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v3167 [from 0x8048384:pop    eax]
    cx = v3134
    dx = v3135
    bx = v3203 [from 0x8048385:pop    ebx]
    sp = v3137+0x8 [from 0x8048385:pop    ebx]
    bp = v3138
    si = v3139
    di = v3140
    es = v3141
    cs = v3142
    ss = v3143
    ds = v3144
    fs = v3145
    gs = v3146
    cf = v3147
    ?1 = v3148
    pf = v3149
    ?3 = v3150
    af = v3151
    ?5 = v3152
    zf = v3153
    sf = v3154
    tf = v3155
    if = v3156
    df = v3157
    of = v3158
    iopl0 = v3159
    iopl1 = v3160
    nt = v3161
    ?15 = v3162
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v3167 [from 0x8048384:pop    eax]
    cx = v3134
    dx = v3135
    bx = v3203 [from 0x8048385:pop    ebx]
    sp = v3138+0x4 [from 0x8048386:leave  ]
    bp = v3239 [from 0x8048386:leave  ]
    si = v3139
    di = v3140
    es = v3141
    cs = v3142
    ss = v3143
    ds = v3144
    fs = v3145
    gs = v3146
    cf = v3147
    ?1 = v3148
    pf = v3149
    ?3 = v3150
    af = v3151
    ?5 = v3152
    zf = v3153
    sf = v3154
    tf = v3155
    if = v3156
    df = v3157
    of = v3158
    iopl0 = v3159
    iopl1 = v3160
    nt = v3161
    ?15 = v3162
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v3167 [from 0x8048384:pop    eax]
    cx = v3134
    dx = v3135
    bx = v3203 [from 0x8048385:pop    ebx]
    sp = v3138+0x8 [from 0x8048387:ret    ]
    bp = v3239 [from 0x8048386:leave  ]
    si = v3139
    di = v3140
    es = v3141
    cs = v3142
    ss = v3143
    ds = v3144
    fs = v3145
    gs = v3146
    cf = v3147
    ?1 = v3148
    pf = v3149
    ?3 = v3150
    af = v3151
    ?5 = v3152
    zf = v3153
    sf = v3154
    tf = v3155
    if = v3156
    df = v3157
    of = v3158
    iopl0 = v3159
    iopl1 = v3160
    nt = v3161
    ?15 = v3162
    memory = {}
    ip = v3277 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048388:nop    
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {}
    ip = 0x8048389 [from 0x8048388:nop    ]
0x8048389:nop    
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {}
    ip = 0x804838a [from 0x8048389:nop    ]
0x804838a:nop    
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {}
    ip = 0x804838b [from 0x804838a:nop    ]
0x804838b:nop    
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {}
    ip = 0x804838c [from 0x804838b:nop    ]
0x804838c:nop    
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {}
    ip = 0x804838d [from 0x804838c:nop    ]
0x804838d:nop    
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {}
    ip = 0x804838e [from 0x804838d:nop    ]
0x804838e:nop    
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {}
    ip = 0x804838f [from 0x804838e:nop    ]
0x804838f:nop    
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {}
    ip = 0x8048390 [from 0x804838f:nop    ]
0x8048390:push   ebp
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343-0x4 [from 0x8048390:push   ebp]
    bp = v3344
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {
        size=4; addr=v3343-0x4 [from 0x8048390:push   ebp]; value=v3344
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343-0x4 [from 0x8048390:push   ebp]
    bp = v3343-0x4 [from 0x8048390:push   ebp]
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = v3353
    ?1 = v3354
    pf = v3355
    ?3 = v3356
    af = v3357
    ?5 = v3358
    zf = v3359
    sf = v3360
    tf = v3361
    if = v3362
    df = v3363
    of = v3364
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {
        size=4; addr=v3343-0x4 [from 0x8048390:push   ebp]; value=v3344
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3343-0x4 [from 0x8048390:push   ebp]
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = -v3726-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v3354
    pf = -v3720-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v3356
    af = -v3724-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v3358
    zf = v3723 [from 0x8048393:sub    esp, 0x08]
    sf = v3722 [from 0x8048393:sub    esp, 0x08]
    tf = v3361
    if = v3362
    df = v3363
    of = v3730 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {
        size=4; addr=v3343-0x4 [from 0x8048390:push   ebp]; value=v3344
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3343-0x4 [from 0x8048390:push   ebp]
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = -v3798-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3354
    pf = -v3792-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3356
    af = -v3796-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3358
    zf = v3795 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3794 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3361
    if = v3362
    df = v3363
    of = v3802 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {
        size=4; addr=v3343-0x4 [from 0x8048390:push   ebp]; value=v3344
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v3339
    cx = v3340
    dx = v3341
    bx = v3342
    sp = v3343-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v3343-0x4 [from 0x8048390:push   ebp]
    si = v3345
    di = v3346
    es = v3347
    cs = v3348
    ss = v3349
    ds = v3350
    fs = v3351
    gs = v3352
    cf = -v3798-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v3354
    pf = -v3792-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v3356
    af = -v3796-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v3358
    zf = v3795 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3794 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v3361
    if = v3362
    df = v3363
    of = v3802 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v3365
    iopl1 = v3366
    nt = v3367
    ?15 = v3368
    memory = {
        size=4; addr=v3343-0x4 [from 0x8048390:push   ebp]; value=v3344
    }
    ip = v3837 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3992 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3960
    dx = v3961
    bx = v3962
    sp = v3963
    bp = v3964
    si = v3965
    di = v3966
    es = v3967
    cs = v3968
    ss = v3969
    ds = v3970
    fs = v3971
    gs = v3972
    cf = v3973
    ?1 = v3974
    pf = v3975
    ?3 = v3976
    af = v3977
    ?5 = v3978
    zf = v3979
    sf = v3980
    tf = v3981
    if = v3982
    df = v3983
    of = v3984
    iopl0 = v3985
    iopl1 = v3986
    nt = v3987
    ?15 = v3988
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3992 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3960
    dx = v4026 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3962
    sp = v3963
    bp = v3964
    si = v3965
    di = v3966
    es = v3967
    cs = v3968
    ss = v3969
    ds = v3970
    fs = v3971
    gs = v3972
    cf = v3973
    ?1 = v3974
    pf = v3975
    ?3 = v3976
    af = v3977
    ?5 = v3978
    zf = v3979
    sf = v3980
    tf = v3981
    if = v3982
    df = v3983
    of = v3984
    iopl0 = v3985
    iopl1 = v3986
    nt = v3987
    ?15 = v3988
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3992 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3960
    dx = v4026 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3962
    sp = v3963
    bp = v3964
    si = v3965
    di = v3966
    es = v3967
    cs = v3968
    ss = v3969
    ds = v3970
    fs = v3971
    gs = v3972
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3974
    pf = -v4075-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3976
    af = <top>
    ?5 = v3978
    zf = v4078 [from 0x80483a6:test   edx, edx]
    sf = v4077 [from 0x80483a6:test   edx, edx]
    tf = v3981
    if = v3982
    df = v3983
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3985
    iopl1 = v3986
    nt = v3987
    ?15 = v3988
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3992 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3960
    dx = v4026 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3962
    sp = v3963
    bp = v3964
    si = v3965
    di = v3966
    es = v3967
    cs = v3968
    ss = v3969
    ds = v3970
    fs = v3971
    gs = v3972
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3974
    pf = -v4075-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3976
    af = <top>
    ?5 = v3978
    zf = v4078 [from 0x80483a6:test   edx, edx]
    sf = v4077 [from 0x80483a6:test   edx, edx]
    tf = v3981
    if = v3982
    df = v3983
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3985
    iopl1 = v3986
    nt = v3987
    ?15 = v3988
    memory = {}
    ip = v4115 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v4237
    cx = v4238
    dx = v4239
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = v4251
    ?1 = v4252
    pf = v4253
    ?3 = v4254
    af = v4255
    ?5 = v4256
    zf = v4257
    sf = v4258
    tf = v4259
    if = v4260
    df = v4261
    of = v4262
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v4237+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v4238
    dx = v4239
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = v4331 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4252
    pf = -v4326-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4254
    af = v4330 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4256
    zf = v4329 [from 0x80483b0:add    eax, 0x04]
    sf = v4328 [from 0x80483b0:add    eax, 0x04]
    tf = v4259
    if = v4260
    df = v4261
    of = v4334 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v4237+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v4238
    dx = v4239
    bx = v4240
    sp = v4241
    bp = v4242
    si = v4243 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = v4331 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4252
    pf = -v4326-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4254
    af = v4330 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4256
    zf = v4329 [from 0x80483b0:add    eax, 0x04]
    sf = v4328 [from 0x80483b0:add    eax, 0x04]
    tf = v4259
    if = v4260
    df = v4261
    of = v4334 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v4237+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v4237+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v4238
    dx = v4239
    bx = v4240
    sp = v4241-0x4 [from 0x80483b8:call   edx]
    bp = v4242
    si = v4243 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v4244
    es = v4245
    cs = v4246
    ss = v4247
    ds = v4248
    fs = v4249
    gs = v4250
    cf = v4331 [from 0x80483b0:add    eax, 0x04]
    ?1 = v4252
    pf = -v4326-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v4254
    af = v4330 [from 0x80483b0:add    eax, 0x04]
    ?5 = v4256
    zf = v4329 [from 0x80483b0:add    eax, 0x04]
    sf = v4328 [from 0x80483b0:add    eax, 0x04]
    tf = v4259
    if = v4260
    df = v4261
    of = v4334 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v4263
    iopl1 = v4264
    nt = v4265
    ?15 = v4266
    memory = {
        size=4; addr=v4241-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v4239
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v4590 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4558
    dx = v4559
    bx = v4560
    sp = v4561
    bp = v4562
    si = v4563
    di = v4564
    es = v4565
    cs = v4566
    ss = v4567
    ds = v4568
    fs = v4569
    gs = v4570
    cf = v4571
    ?1 = v4572
    pf = v4573
    ?3 = v4574
    af = v4575
    ?5 = v4576
    zf = v4577
    sf = v4578
    tf = v4579
    if = v4580
    df = v4581
    of = v4582
    iopl0 = v4583
    iopl1 = v4584
    nt = v4585
    ?15 = v4586
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v4590 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4558
    dx = v4624 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4560
    sp = v4561
    bp = v4562
    si = v4563
    di = v4564
    es = v4565
    cs = v4566
    ss = v4567
    ds = v4568
    fs = v4569
    gs = v4570
    cf = v4571
    ?1 = v4572
    pf = v4573
    ?3 = v4574
    af = v4575
    ?5 = v4576
    zf = v4577
    sf = v4578
    tf = v4579
    if = v4580
    df = v4581
    of = v4582
    iopl0 = v4583
    iopl1 = v4584
    nt = v4585
    ?15 = v4586
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v4590 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4558
    dx = v4624 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4560
    sp = v4561
    bp = v4562
    si = v4563
    di = v4564
    es = v4565
    cs = v4566
    ss = v4567
    ds = v4568
    fs = v4569
    gs = v4570
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4572
    pf = -v4673-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4574
    af = <top>
    ?5 = v4576
    zf = v4676 [from 0x80483c1:test   edx, edx]
    sf = v4675 [from 0x80483c1:test   edx, edx]
    tf = v4579
    if = v4580
    df = v4581
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4583
    iopl1 = v4584
    nt = v4585
    ?15 = v4586
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v4590 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4558
    dx = v4624 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4560
    sp = v4561
    bp = v4562
    si = v4563
    di = v4564
    es = v4565
    cs = v4566
    ss = v4567
    ds = v4568
    fs = v4569
    gs = v4570
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4572
    pf = -v4673-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4574
    af = <top>
    ?5 = v4576
    zf = v4676 [from 0x80483c1:test   edx, edx]
    sf = v4675 [from 0x80483c1:test   edx, edx]
    tf = v4579
    if = v4580
    df = v4581
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4583
    iopl1 = v4584
    nt = v4585
    ?15 = v4586
    memory = {}
    ip = v4714 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v4836
    cx = v4837
    dx = v4838
    bx = v4839
    sp = v4840
    bp = v4841
    si = v4842
    di = v4843
    es = v4844
    cs = v4845
    ss = v4846
    ds = v4847
    fs = v4848
    gs = v4849
    cf = v4850
    ?1 = v4851
    pf = v4852
    ?3 = v4853
    af = v4854
    ?5 = v4855
    zf = v4856
    sf = v4857
    tf = v4858
    if = v4859
    df = v4860
    of = v4861
    iopl0 = v4862
    iopl1 = v4863
    nt = v4864
    ?15 = v4865
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v4836
    cx = v4837
    dx = v4838
    bx = v4839
    sp = v4841+0x4 [from 0x80483cc:leave  ]
    bp = v4906 [from 0x80483cc:leave  ]
    si = v4842
    di = v4843
    es = v4844
    cs = v4845
    ss = v4846
    ds = v4847
    fs = v4848
    gs = v4849
    cf = v4850
    ?1 = v4851
    pf = v4852
    ?3 = v4853
    af = v4854
    ?5 = v4855
    zf = v4856
    sf = v4857
    tf = v4858
    if = v4859
    df = v4860
    of = v4861
    iopl0 = v4862
    iopl1 = v4863
    nt = v4864
    ?15 = v4865
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v4836
    cx = v4837
    dx = v4838
    bx = v4839
    sp = v4841+0x8 [from 0x80483cd:ret    ]
    bp = v4906 [from 0x80483cc:leave  ]
    si = v4842
    di = v4843
    es = v4844
    cs = v4845
    ss = v4846
    ds = v4847
    fs = v4848
    gs = v4849
    cf = v4850
    ?1 = v4851
    pf = v4852
    ?3 = v4853
    af = v4854
    ?5 = v4855
    zf = v4856
    sf = v4857
    tf = v4858
    if = v4859
    df = v4860
    of = v4861
    iopl0 = v4862
    iopl1 = v4863
    nt = v4864
    ?15 = v4865
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v4944 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v5006
    cx = v5007
    dx = v5008
    bx = v5009
    sp = v5010-0x4 [from 0x80483d0:push   ebp]
    bp = v5011
    si = v5012
    di = v5013
    es = v5014
    cs = v5015
    ss = v5016
    ds = v5017
    fs = v5018
    gs = v5019
    cf = v5020
    ?1 = v5021
    pf = v5022
    ?3 = v5023
    af = v5024
    ?5 = v5025
    zf = v5026
    sf = v5027
    tf = v5028
    if = v5029
    df = v5030
    of = v5031
    iopl0 = v5032
    iopl1 = v5033
    nt = v5034
    ?15 = v5035
    memory = {
        size=4; addr=v5010-0x4 [from 0x80483d0:push   ebp]; value=v5011
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v5006
    cx = v5007
    dx = v5008
    bx = v5009
    sp = v5010-0x4 [from 0x80483d0:push   ebp]
    bp = v5010-0x4 [from 0x80483d0:push   ebp]
    si = v5012
    di = v5013
    es = v5014
    cs = v5015
    ss = v5016
    ds = v5017
    fs = v5018
    gs = v5019
    cf = v5020
    ?1 = v5021
    pf = v5022
    ?3 = v5023
    af = v5024
    ?5 = v5025
    zf = v5026
    sf = v5027
    tf = v5028
    if = v5029
    df = v5030
    of = v5031
    iopl0 = v5032
    iopl1 = v5033
    nt = v5034
    ?15 = v5035
    memory = {
        size=4; addr=v5010-0x4 [from 0x80483d0:push   ebp]; value=v5011
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v5006
    cx = v5007
    dx = v5008
    bx = v5009
    sp = v5010-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v5010-0x4 [from 0x80483d0:push   ebp]
    si = v5012
    di = v5013
    es = v5014
    cs = v5015
    ss = v5016
    ds = v5017
    fs = v5018
    gs = v5019
    cf = -v5137-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v5021
    pf = -v5131-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v5023
    af = -v5135-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v5025
    zf = v5134 [from 0x80483d3:sub    esp, 0x08]
    sf = v5133 [from 0x80483d3:sub    esp, 0x08]
    tf = v5028
    if = v5029
    df = v5030
    of = v5141 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v5032
    iopl1 = v5033
    nt = v5034
    ?15 = v5035
    memory = {
        size=4; addr=v5010-0x4 [from 0x80483d0:push   ebp]; value=v5011
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v5176 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5007
    dx = v5008
    bx = v5009
    sp = v5010-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v5010-0x4 [from 0x80483d0:push   ebp]
    si = v5012
    di = v5013
    es = v5014
    cs = v5015
    ss = v5016
    ds = v5017
    fs = v5018
    gs = v5019
    cf = -v5137-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v5021
    pf = -v5131-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v5023
    af = -v5135-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v5025
    zf = v5134 [from 0x80483d3:sub    esp, 0x08]
    sf = v5133 [from 0x80483d3:sub    esp, 0x08]
    tf = v5028
    if = v5029
    df = v5030
    of = v5141 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v5032
    iopl1 = v5033
    nt = v5034
    ?15 = v5035
    memory = {
        size=4; addr=v5010-0x4 [from 0x80483d0:push   ebp]; value=v5011
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v5176 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5007
    dx = v5008
    bx = v5009
    sp = v5010-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v5010-0x4 [from 0x80483d0:push   ebp]
    si = v5012
    di = v5013
    es = v5014
    cs = v5015
    ss = v5016
    ds = v5017
    fs = v5018
    gs = v5019
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v5021
    pf = -v5225-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v5023
    af = <top>
    ?5 = v5025
    zf = v5228 [from 0x80483db:test   eax, eax]
    sf = v5227 [from 0x80483db:test   eax, eax]
    tf = v5028
    if = v5029
    df = v5030
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v5032
    iopl1 = v5033
    nt = v5034
    ?15 = v5035
    memory = {
        size=4; addr=v5010-0x4 [from 0x80483d0:push   ebp]; value=v5011
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v5176 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5007
    dx = v5008
    bx = v5009
    sp = v5010-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v5010-0x4 [from 0x80483d0:push   ebp]
    si = v5012
    di = v5013
    es = v5014
    cs = v5015
    ss = v5016
    ds = v5017
    fs = v5018
    gs = v5019
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v5021
    pf = -v5225-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v5023
    af = <top>
    ?5 = v5025
    zf = v5228 [from 0x80483db:test   eax, eax]
    sf = v5227 [from 0x80483db:test   eax, eax]
    tf = v5028
    if = v5029
    df = v5030
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v5032
    iopl1 = v5033
    nt = v5034
    ?15 = v5035
    memory = {
        size=4; addr=v5010-0x4 [from 0x80483d0:push   ebp]; value=v5011
    }
    ip = v5265 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5388
    dx = v5389
    bx = v5390
    sp = v5391
    bp = v5392
    si = v5393
    di = v5394
    es = v5395
    cs = v5396
    ss = v5397
    ds = v5398
    fs = v5399
    gs = v5400
    cf = v5401
    ?1 = v5402
    pf = v5403
    ?3 = v5404
    af = v5405
    ?5 = v5406
    zf = v5407
    sf = v5408
    tf = v5409
    if = v5410
    df = v5411
    of = v5412
    iopl0 = v5413
    iopl1 = v5414
    nt = v5415
    ?15 = v5416
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5388
    dx = v5389
    bx = v5390
    sp = v5391
    bp = v5392
    si = v5393
    di = v5394
    es = v5395
    cs = v5396
    ss = v5397
    ds = v5398
    fs = v5399
    gs = v5400
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5402
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5404
    af = <top>
    ?5 = v5406
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5409
    if = v5410
    df = v5411
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5413
    iopl1 = v5414
    nt = v5415
    ?15 = v5416
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5388
    dx = v5389
    bx = v5390
    sp = v5391
    bp = v5392
    si = v5393
    di = v5394
    es = v5395
    cs = v5396
    ss = v5397
    ds = v5398
    fs = v5399
    gs = v5400
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5402
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5404
    af = <top>
    ?5 = v5406
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5409
    if = v5410
    df = v5411
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5413
    iopl1 = v5414
    nt = v5415
    ?15 = v5416
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5388
    dx = v5389
    bx = v5390
    sp = v5392
    bp = v5392
    si = v5393
    di = v5394
    es = v5395
    cs = v5396
    ss = v5397
    ds = v5398
    fs = v5399
    gs = v5400
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5402
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5404
    af = <top>
    ?5 = v5406
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5409
    if = v5410
    df = v5411
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5413
    iopl1 = v5414
    nt = v5415
    ?15 = v5416
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5388
    dx = v5389
    bx = v5390
    sp = v5392+0x4 [from 0x8048402:pop    ebp]
    bp = v5575 [from 0x8048402:pop    ebp]
    si = v5393
    di = v5394
    es = v5395
    cs = v5396
    ss = v5397
    ds = v5398
    fs = v5399
    gs = v5400
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5402
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5404
    af = <top>
    ?5 = v5406
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5409
    if = v5410
    df = v5411
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5413
    iopl1 = v5414
    nt = v5415
    ?15 = v5416
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v5388
    dx = v5389
    bx = v5390
    sp = v5392+0x8 [from 0x8048403:ret    ]
    bp = v5575 [from 0x8048402:pop    ebp]
    si = v5393
    di = v5394
    es = v5395
    cs = v5396
    ss = v5397
    ds = v5398
    fs = v5399
    gs = v5400
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v5402
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v5404
    af = <top>
    ?5 = v5406
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v5409
    if = v5410
    df = v5411
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v5413
    iopl1 = v5414
    nt = v5415
    ?15 = v5416
    memory = {}
    ip = v5613 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048404:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x8048405 [from 0x8048404:nop    ]
0x8048405:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x8048406 [from 0x8048405:nop    ]
0x8048406:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x8048407 [from 0x8048406:nop    ]
0x8048407:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x8048408 [from 0x8048407:nop    ]
0x8048408:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x8048409 [from 0x8048408:nop    ]
0x8048409:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x804840a [from 0x8048409:nop    ]
0x804840a:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x804840b [from 0x804840a:nop    ]
0x804840b:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x804840c [from 0x804840b:nop    ]
0x804840c:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x804840d [from 0x804840c:nop    ]
0x804840d:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x804840e [from 0x804840d:nop    ]
0x804840e:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x804840f [from 0x804840e:nop    ]
0x804840f:nop    
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {}
    ip = 0x8048410 [from 0x804840f:nop    ]
0x8048410:push   ebp
    ax = v5675
    cx = v5676
    dx = v5677
    bx = v5678
    sp = v5679-0x4 [from 0x8048410:push   ebp]
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {
        size=4; addr=v5679-0x4 [from 0x8048410:push   ebp]; value=v5680
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v5675
    cx = v5676
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5678
    sp = v5679-0x4 [from 0x8048410:push   ebp]
    bp = v5680
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {
        size=4; addr=v5679-0x4 [from 0x8048410:push   ebp]; value=v5680
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v5675
    cx = v5676
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5678
    sp = v5679-0x4 [from 0x8048410:push   ebp]
    bp = v5679-0x4 [from 0x8048410:push   ebp]
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = v5689
    ?1 = v5690
    pf = v5691
    ?3 = v5692
    af = v5693
    ?5 = v5694
    zf = v5695
    sf = v5696
    tf = v5697
    if = v5698
    df = v5699
    of = v5700
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {
        size=4; addr=v5679-0x4 [from 0x8048410:push   ebp]; value=v5680
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v5675
    cx = v5676
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5678
    sp = v5679-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v5679-0x4 [from 0x8048410:push   ebp]
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = -v6223-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v5690
    pf = -v6217-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v5692
    af = -v6221-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v5694
    zf = v6220 [from 0x8048418:sub    esp, 0x08]
    sf = v6219 [from 0x8048418:sub    esp, 0x08]
    tf = v5697
    if = v5698
    df = v5699
    of = v6227 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {
        size=4; addr=v5679-0x4 [from 0x8048410:push   ebp]; value=v5680
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v5675
    cx = v5676
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5678
    sp = v6261 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5679-0x4 [from 0x8048410:push   ebp]
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5690
    pf = -v6277-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5692
    af = <top>
    ?5 = v5694
    zf = v6280 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6279 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5697
    if = v5698
    df = v5699
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {
        size=4; addr=v5679-0x4 [from 0x8048410:push   ebp]; value=v5680
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v5675
    cx = v5676
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5678
    sp = v6261 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5679-0x4 [from 0x8048410:push   ebp]
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5690
    pf = -v6277-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5692
    af = <top>
    ?5 = v5694
    zf = v6280 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6279 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5697
    if = v5698
    df = v5699
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {
        size=4; addr=v6261+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v5675
    cx = v5676
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5678
    sp = v6261 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5679-0x4 [from 0x8048410:push   ebp]
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5690
    pf = -v6277-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5692
    af = <top>
    ?5 = v5694
    zf = v6280 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6279 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5697
    if = v5698
    df = v5699
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {
        size=4; addr=v6261 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v6261+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v5675
    cx = v5676
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5678
    sp = v6261-0x4 [from 0x8048429:call   0x080482f0]
    bp = v5679-0x4 [from 0x8048410:push   ebp]
    si = v5681
    di = v5682
    es = v5683
    cs = v5684
    ss = v5685
    ds = v5686
    fs = v5687
    gs = v5688
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5690
    pf = -v6277-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5692
    af = <top>
    ?5 = v5694
    zf = v6280 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v6279 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5697
    if = v5698
    df = v5699
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5701
    iopl1 = v5702
    nt = v5703
    ?15 = v5704
    memory = {
        size=4; addr=v6261 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v6261+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v6261-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v6573
    cx = v6574
    dx = v6575
    bx = v6576
    sp = v6578
    bp = v6578
    si = v6579
    di = v6580
    es = v6581
    cs = v6582
    ss = v6583
    ds = v6584
    fs = v6585
    gs = v6586
    cf = v6587
    ?1 = v6588
    pf = v6589
    ?3 = v6590
    af = v6591
    ?5 = v6592
    zf = v6593
    sf = v6594
    tf = v6595
    if = v6596
    df = v6597
    of = v6598
    iopl0 = v6599
    iopl1 = v6600
    nt = v6601
    ?15 = v6602
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6574
    dx = v6575
    bx = v6576
    sp = v6578
    bp = v6578
    si = v6579
    di = v6580
    es = v6581
    cs = v6582
    ss = v6583
    ds = v6584
    fs = v6585
    gs = v6586
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6588
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6590
    af = <top>
    ?5 = v6592
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6595
    if = v6596
    df = v6597
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6599
    iopl1 = v6600
    nt = v6601
    ?15 = v6602
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6574
    dx = v6575
    bx = v6576
    sp = v6578+0x4 [from 0x8048432:pop    ebp]
    bp = v6694 [from 0x8048432:pop    ebp]
    si = v6579
    di = v6580
    es = v6581
    cs = v6582
    ss = v6583
    ds = v6584
    fs = v6585
    gs = v6586
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6588
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6590
    af = <top>
    ?5 = v6592
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6595
    if = v6596
    df = v6597
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6599
    iopl1 = v6600
    nt = v6601
    ?15 = v6602
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v6574
    dx = v6575
    bx = v6576
    sp = v6578+0x8 [from 0x8048433:ret    ]
    bp = v6694 [from 0x8048432:pop    ebp]
    si = v6579
    di = v6580
    es = v6581
    cs = v6582
    ss = v6583
    ds = v6584
    fs = v6585
    gs = v6586
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v6588
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v6590
    af = <top>
    ?5 = v6592
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v6595
    if = v6596
    df = v6597
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v6599
    iopl1 = v6600
    nt = v6601
    ?15 = v6602
    memory = {}
    ip = v6732 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v6794
    cx = v6795
    dx = v6796
    bx = v6797
    sp = v6798-0x4 [from 0x8048440:push   ebp]
    bp = v6799
    si = v6800
    di = v6801
    es = v6802
    cs = v6803
    ss = v6804
    ds = v6805
    fs = v6806
    gs = v6807
    cf = v6808
    ?1 = v6809
    pf = v6810
    ?3 = v6811
    af = v6812
    ?5 = v6813
    zf = v6814
    sf = v6815
    tf = v6816
    if = v6817
    df = v6818
    of = v6819
    iopl0 = v6820
    iopl1 = v6821
    nt = v6822
    ?15 = v6823
    memory = {
        size=4; addr=v6798-0x4 [from 0x8048440:push   ebp]; value=v6799
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v6794
    cx = v6795
    dx = v6796
    bx = v6797
    sp = v6798-0x4 [from 0x8048440:push   ebp]
    bp = v6798-0x4 [from 0x8048440:push   ebp]
    si = v6800
    di = v6801
    es = v6802
    cs = v6803
    ss = v6804
    ds = v6805
    fs = v6806
    gs = v6807
    cf = v6808
    ?1 = v6809
    pf = v6810
    ?3 = v6811
    af = v6812
    ?5 = v6813
    zf = v6814
    sf = v6815
    tf = v6816
    if = v6817
    df = v6818
    of = v6819
    iopl0 = v6820
    iopl1 = v6821
    nt = v6822
    ?15 = v6823
    memory = {
        size=4; addr=v6798-0x4 [from 0x8048440:push   ebp]; value=v6799
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v6794
    cx = v6795
    dx = v6796
    bx = v6797
    sp = v6798-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v6798-0x4 [from 0x8048440:push   ebp]
    si = v6800
    di = v6801
    es = v6802
    cs = v6803
    ss = v6804
    ds = v6805
    fs = v6806
    gs = v6807
    cf = -v6925-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6809
    pf = -v6919-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6811
    af = -v6923-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6813
    zf = v6922 [from 0x8048443:sub    esp, 0x08]
    sf = v6921 [from 0x8048443:sub    esp, 0x08]
    tf = v6816
    if = v6817
    df = v6818
    of = v6929 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6820
    iopl1 = v6821
    nt = v6822
    ?15 = v6823
    memory = {
        size=4; addr=v6798-0x4 [from 0x8048440:push   ebp]; value=v6799
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6794
    cx = v6795
    dx = v6796
    bx = v6797
    sp = v6798-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v6798-0x4 [from 0x8048440:push   ebp]
    si = v6800
    di = v6801
    es = v6802
    cs = v6803
    ss = v6804
    ds = v6805
    fs = v6806
    gs = v6807
    cf = -v6925-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6809
    pf = -v6919-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6811
    af = -v6923-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6813
    zf = v6922 [from 0x8048443:sub    esp, 0x08]
    sf = v6921 [from 0x8048443:sub    esp, 0x08]
    tf = v6816
    if = v6817
    df = v6818
    of = v6929 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6820
    iopl1 = v6821
    nt = v6822
    ?15 = v6823
    memory = {
        size=4; addr=v6798-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6798-0x4 [from 0x8048440:push   ebp]; value=v6799
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v6794
    cx = v6795
    dx = v6796
    bx = v6797
    sp = v6798-0x10 [from 0x804844d:call   0x08048300]
    bp = v6798-0x4 [from 0x8048440:push   ebp]
    si = v6800
    di = v6801
    es = v6802
    cs = v6803
    ss = v6804
    ds = v6805
    fs = v6806
    gs = v6807
    cf = -v6925-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6809
    pf = -v6919-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6811
    af = -v6923-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6813
    zf = v6922 [from 0x8048443:sub    esp, 0x08]
    sf = v6921 [from 0x8048443:sub    esp, 0x08]
    tf = v6816
    if = v6817
    df = v6818
    of = v6929 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6820
    iopl1 = v6821
    nt = v6822
    ?15 = v6823
    memory = {
        size=4; addr=v6798-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v6798-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6798-0x4 [from 0x8048440:push   ebp]; value=v6799
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v7183
    cx = v7184
    dx = v7185
    bx = v7186
    sp = v7188
    bp = v7188
    si = v7189
    di = v7190
    es = v7191
    cs = v7192
    ss = v7193
    ds = v7194
    fs = v7195
    gs = v7196
    cf = v7197
    ?1 = v7198
    pf = v7199
    ?3 = v7200
    af = v7201
    ?5 = v7202
    zf = v7203
    sf = v7204
    tf = v7205
    if = v7206
    df = v7207
    of = v7208
    iopl0 = v7209
    iopl1 = v7210
    nt = v7211
    ?15 = v7212
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v7183
    cx = v7184
    dx = v7185
    bx = v7186
    sp = v7188+0x4 [from 0x8048454:pop    ebp]
    bp = v7249 [from 0x8048454:pop    ebp]
    si = v7189
    di = v7190
    es = v7191
    cs = v7192
    ss = v7193
    ds = v7194
    fs = v7195
    gs = v7196
    cf = v7197
    ?1 = v7198
    pf = v7199
    ?3 = v7200
    af = v7201
    ?5 = v7202
    zf = v7203
    sf = v7204
    tf = v7205
    if = v7206
    df = v7207
    of = v7208
    iopl0 = v7209
    iopl1 = v7210
    nt = v7211
    ?15 = v7212
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v7183
    cx = v7184
    dx = v7185
    bx = v7186
    sp = v7188+0x8 [from 0x8048455:ret    ]
    bp = v7249 [from 0x8048454:pop    ebp]
    si = v7189
    di = v7190
    es = v7191
    cs = v7192
    ss = v7193
    ds = v7194
    fs = v7195
    gs = v7196
    cf = v7197
    ?1 = v7198
    pf = v7199
    ?3 = v7200
    af = v7201
    ?5 = v7202
    zf = v7203
    sf = v7204
    tf = v7205
    if = v7206
    df = v7207
    of = v7208
    iopl0 = v7209
    iopl1 = v7210
    nt = v7211
    ?15 = v7212
    memory = {}
    ip = v7287 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v7349
    cx = v7350
    dx = v7351
    bx = v7352
    sp = v7353-0x4 [from 0x8048460:push   ebp]
    bp = v7354
    si = v7355
    di = v7356
    es = v7357
    cs = v7358
    ss = v7359
    ds = v7360
    fs = v7361
    gs = v7362
    cf = v7363
    ?1 = v7364
    pf = v7365
    ?3 = v7366
    af = v7367
    ?5 = v7368
    zf = v7369
    sf = v7370
    tf = v7371
    if = v7372
    df = v7373
    of = v7374
    iopl0 = v7375
    iopl1 = v7376
    nt = v7377
    ?15 = v7378
    memory = {
        size=4; addr=v7353-0x4 [from 0x8048460:push   ebp]; value=v7354
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v7349
    cx = v7350
    dx = v7351
    bx = v7352
    sp = v7353-0x4 [from 0x8048460:push   ebp]
    bp = v7353-0x4 [from 0x8048460:push   ebp]
    si = v7355
    di = v7356
    es = v7357
    cs = v7358
    ss = v7359
    ds = v7360
    fs = v7361
    gs = v7362
    cf = v7363
    ?1 = v7364
    pf = v7365
    ?3 = v7366
    af = v7367
    ?5 = v7368
    zf = v7369
    sf = v7370
    tf = v7371
    if = v7372
    df = v7373
    of = v7374
    iopl0 = v7375
    iopl1 = v7376
    nt = v7377
    ?15 = v7378
    memory = {
        size=4; addr=v7353-0x4 [from 0x8048460:push   ebp]; value=v7354
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v7349
    cx = v7350
    dx = v7351
    bx = v7352
    sp = v7353-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v7353-0x4 [from 0x8048460:push   ebp]
    si = v7355
    di = v7356
    es = v7357
    cs = v7358
    ss = v7359
    ds = v7360
    fs = v7361
    gs = v7362
    cf = -v7480-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7364
    pf = -v7474-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7366
    af = -v7478-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7368
    zf = v7477 [from 0x8048463:sub    esp, 0x08]
    sf = v7476 [from 0x8048463:sub    esp, 0x08]
    tf = v7371
    if = v7372
    df = v7373
    of = v7484 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7375
    iopl1 = v7376
    nt = v7377
    ?15 = v7378
    memory = {
        size=4; addr=v7353-0x4 [from 0x8048460:push   ebp]; value=v7354
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7349
    cx = v7350
    dx = v7351
    bx = v7352
    sp = v7353-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v7353-0x4 [from 0x8048460:push   ebp]
    si = v7355
    di = v7356
    es = v7357
    cs = v7358
    ss = v7359
    ds = v7360
    fs = v7361
    gs = v7362
    cf = -v7480-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7364
    pf = -v7474-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7366
    af = -v7478-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7368
    zf = v7477 [from 0x8048463:sub    esp, 0x08]
    sf = v7476 [from 0x8048463:sub    esp, 0x08]
    tf = v7371
    if = v7372
    df = v7373
    of = v7484 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7375
    iopl1 = v7376
    nt = v7377
    ?15 = v7378
    memory = {
        size=4; addr=v7353-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7353-0x4 [from 0x8048460:push   ebp]; value=v7354
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v7349
    cx = v7350
    dx = v7351
    bx = v7352
    sp = v7353-0x10 [from 0x804846d:call   0x08048300]
    bp = v7353-0x4 [from 0x8048460:push   ebp]
    si = v7355
    di = v7356
    es = v7357
    cs = v7358
    ss = v7359
    ds = v7360
    fs = v7361
    gs = v7362
    cf = -v7480-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v7364
    pf = -v7474-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v7366
    af = -v7478-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v7368
    zf = v7477 [from 0x8048463:sub    esp, 0x08]
    sf = v7476 [from 0x8048463:sub    esp, 0x08]
    tf = v7371
    if = v7372
    df = v7373
    of = v7484 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v7375
    iopl1 = v7376
    nt = v7377
    ?15 = v7378
    memory = {
        size=4; addr=v7353-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v7353-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7353-0x4 [from 0x8048460:push   ebp]; value=v7354
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7738
    cx = v7739
    dx = v7740
    bx = v7741
    sp = v7742
    bp = v7743
    si = v7744
    di = v7745
    es = v7746
    cs = v7747
    ss = v7748
    ds = v7749
    fs = v7750
    gs = v7751
    cf = v7752
    ?1 = v7753
    pf = v7754
    ?3 = v7755
    af = v7756
    ?5 = v7757
    zf = v7758
    sf = v7759
    tf = v7760
    if = v7761
    df = v7762
    of = v7763
    iopl0 = v7764
    iopl1 = v7765
    nt = v7766
    ?15 = v7767
    memory = {
        size=4; addr=v7742; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v7738
    cx = v7739
    dx = v7740
    bx = v7741
    sp = v7742-0x4 [from 0x8048479:call   0x08048320]
    bp = v7743
    si = v7744
    di = v7745
    es = v7746
    cs = v7747
    ss = v7748
    ds = v7749
    fs = v7750
    gs = v7751
    cf = v7752
    ?1 = v7753
    pf = v7754
    ?3 = v7755
    af = v7756
    ?5 = v7757
    zf = v7758
    sf = v7759
    tf = v7760
    if = v7761
    df = v7762
    of = v7763
    iopl0 = v7764
    iopl1 = v7765
    nt = v7766
    ?15 = v7767
    memory = {
        size=4; addr=v7742; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7742-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v7990
    cx = v7991
    dx = v7992
    bx = v7993
    sp = v7994-0x4 [from 0x8048480:push   ebp]
    bp = v7995
    si = v7996
    di = v7997
    es = v7998
    cs = v7999
    ss = v8000
    ds = v8001
    fs = v8002
    gs = v8003
    cf = v8004
    ?1 = v8005
    pf = v8006
    ?3 = v8007
    af = v8008
    ?5 = v8009
    zf = v8010
    sf = v8011
    tf = v8012
    if = v8013
    df = v8014
    of = v8015
    iopl0 = v8016
    iopl1 = v8017
    nt = v8018
    ?15 = v8019
    memory = {
        size=4; addr=v7994-0x4 [from 0x8048480:push   ebp]; value=v7995
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v7990
    cx = v7991
    dx = v7992
    bx = v7993
    sp = v7994-0x4 [from 0x8048480:push   ebp]
    bp = v7994-0x4 [from 0x8048480:push   ebp]
    si = v7996
    di = v7997
    es = v7998
    cs = v7999
    ss = v8000
    ds = v8001
    fs = v8002
    gs = v8003
    cf = v8004
    ?1 = v8005
    pf = v8006
    ?3 = v8007
    af = v8008
    ?5 = v8009
    zf = v8010
    sf = v8011
    tf = v8012
    if = v8013
    df = v8014
    of = v8015
    iopl0 = v8016
    iopl1 = v8017
    nt = v8018
    ?15 = v8019
    memory = {
        size=4; addr=v7994-0x4 [from 0x8048480:push   ebp]; value=v7995
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v7990
    cx = v7991
    dx = v7992
    bx = v7993
    sp = v7994-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7994-0x4 [from 0x8048480:push   ebp]
    si = v7996
    di = v7997
    es = v7998
    cs = v7999
    ss = v8000
    ds = v8001
    fs = v8002
    gs = v8003
    cf = -v8121-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8005
    pf = -v8115-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v8007
    af = -v8119-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v8009
    zf = v8118 [from 0x8048483:sub    esp, 0x08]
    sf = v8117 [from 0x8048483:sub    esp, 0x08]
    tf = v8012
    if = v8013
    df = v8014
    of = v8125 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v8016
    iopl1 = v8017
    nt = v8018
    ?15 = v8019
    memory = {
        size=4; addr=v7994-0x4 [from 0x8048480:push   ebp]; value=v7995
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v7990
    cx = v7991
    dx = v7992
    bx = v7993
    sp = v7994-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7994-0x4 [from 0x8048480:push   ebp]
    si = v7996
    di = v7997
    es = v7998
    cs = v7999
    ss = v8000
    ds = v8001
    fs = v8002
    gs = v8003
    cf = -v8121-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8005
    pf = -v8185-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8007
    af = v8189 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8009
    zf = v8188 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8187 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8012
    if = v8013
    df = v8014
    of = v8192 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8016
    iopl1 = v8017
    nt = v8018
    ?15 = v8019
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v8160+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7990
    cx = v7991
    dx = v7992
    bx = v7993
    sp = v7994-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7994-0x4 [from 0x8048480:push   ebp]
    si = v7996
    di = v7997
    es = v7998
    cs = v7999
    ss = v8000
    ds = v8001
    fs = v8002
    gs = v8003
    cf = -v8121-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8005
    pf = -v8185-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8007
    af = v8189 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8009
    zf = v8188 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8187 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8012
    if = v8013
    df = v8014
    of = v8192 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8016
    iopl1 = v8017
    nt = v8018
    ?15 = v8019
    memory = {
        size=4; addr=v7994-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v7990
    cx = v7991
    dx = v7992
    bx = v7993
    sp = v7994-0x10 [from 0x8048493:call   0x08048300]
    bp = v7994-0x4 [from 0x8048480:push   ebp]
    si = v7996
    di = v7997
    es = v7998
    cs = v7999
    ss = v8000
    ds = v8001
    fs = v8002
    gs = v8003
    cf = -v8121-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8005
    pf = -v8185-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8007
    af = v8189 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8009
    zf = v8188 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v8187 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8012
    if = v8013
    df = v8014
    of = v8192 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8016
    iopl1 = v8017
    nt = v8018
    ?15 = v8019
    memory = {
        size=4; addr=v7994-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v7994-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v8449
    cx = v8450
    dx = v8451
    bx = v8452
    sp = v8453
    bp = v8454
    si = v8455
    di = v8456
    es = v8457
    cs = v8458
    ss = v8459
    ds = v8460
    fs = v8461
    gs = v8462
    cf = v8463
    ?1 = v8464
    pf = v8465
    ?3 = v8466
    af = v8467
    ?5 = v8468
    zf = v8469
    sf = v8470
    tf = v8471
    if = v8472
    df = v8473
    of = v8474
    iopl0 = v8475
    iopl1 = v8476
    nt = v8477
    ?15 = v8478
    memory = {
        size=4; addr=v8453; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v8449
    cx = v8450
    dx = v8451
    bx = v8452
    sp = v8453-0x4 [from 0x804849f:call   0x08048320]
    bp = v8454
    si = v8455
    di = v8456
    es = v8457
    cs = v8458
    ss = v8459
    ds = v8460
    fs = v8461
    gs = v8462
    cf = v8463
    ?1 = v8464
    pf = v8465
    ?3 = v8466
    af = v8467
    ?5 = v8468
    zf = v8469
    sf = v8470
    tf = v8471
    if = v8472
    df = v8473
    of = v8474
    iopl0 = v8475
    iopl1 = v8476
    nt = v8477
    ?15 = v8478
    memory = {
        size=4; addr=v8453; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v8453-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484a4:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484a5 [from 0x80484a4:nop    ]
0x80484a5:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484a6 [from 0x80484a5:nop    ]
0x80484a6:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484a7 [from 0x80484a6:nop    ]
0x80484a7:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484a8 [from 0x80484a7:nop    ]
0x80484a8:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484a9 [from 0x80484a8:nop    ]
0x80484a9:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484aa [from 0x80484a9:nop    ]
0x80484aa:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484ab [from 0x80484aa:nop    ]
0x80484ab:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484ac [from 0x80484ab:nop    ]
0x80484ac:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484ad [from 0x80484ac:nop    ]
0x80484ad:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484ae [from 0x80484ad:nop    ]
0x80484ae:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484af [from 0x80484ae:nop    ]
0x80484af:nop    
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {}
    ip = 0x80484b0 [from 0x80484af:nop    ]
0x80484b0:push   ebp
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705-0x4 [from 0x80484b0:push   ebp]
    bp = v8706
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {
        size=4; addr=v8705-0x4 [from 0x80484b0:push   ebp]; value=v8706
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705-0x4 [from 0x80484b0:push   ebp]
    bp = v8705-0x4 [from 0x80484b0:push   ebp]
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {
        size=4; addr=v8705-0x4 [from 0x80484b0:push   ebp]; value=v8706
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705-0x8 [from 0x80484b3:push   edi]
    bp = v8705-0x4 [from 0x80484b0:push   ebp]
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {
        size=4; addr=v8705-0x8 [from 0x80484b3:push   edi]; value=v8708
        size=4; addr=v8705-0x4 [from 0x80484b0:push   ebp]; value=v8706
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705-0xc [from 0x80484b4:push   esi]
    bp = v8705-0x4 [from 0x80484b0:push   ebp]
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {
        size=4; addr=v8705-0xc [from 0x80484b4:push   esi]; value=v8707
        size=4; addr=v8705-0x8 [from 0x80484b3:push   edi]; value=v8708
        size=4; addr=v8705-0x4 [from 0x80484b0:push   ebp]; value=v8706
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705-0x10 [from 0x80484b5:push   ebx]
    bp = v8705-0x4 [from 0x80484b0:push   ebp]
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = v8715
    ?1 = v8716
    pf = v8717
    ?3 = v8718
    af = v8719
    ?5 = v8720
    zf = v8721
    sf = v8722
    tf = v8723
    if = v8724
    df = v8725
    of = v8726
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {
        size=4; addr=v8705-0x10 [from 0x80484b5:push   ebx]; value=v8704
        size=4; addr=v8705-0xc [from 0x80484b4:push   esi]; value=v8707
        size=4; addr=v8705-0x8 [from 0x80484b3:push   edi]; value=v8708
        size=4; addr=v8705-0x4 [from 0x80484b0:push   ebp]; value=v8706
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v8705-0x4 [from 0x80484b0:push   ebp]
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = -v9324-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8716
    pf = -v9318-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8718
    af = -v9322-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8720
    zf = v9321 [from 0x80484b6:sub    esp, 0x0c]
    sf = v9320 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8723
    if = v8724
    df = v8725
    of = v9328 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {
        size=4; addr=v8705-0x10 [from 0x80484b5:push   ebx]; value=v8704
        size=4; addr=v8705-0xc [from 0x80484b4:push   esi]; value=v8707
        size=4; addr=v8705-0x8 [from 0x80484b3:push   edi]; value=v8708
        size=4; addr=v8705-0x4 [from 0x80484b0:push   ebp]; value=v8706
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v8701
    cx = v8702
    dx = v8703
    bx = v8704
    sp = v8705-0x20 [from 0x80484b9:call   0x080484be]
    bp = v8705-0x4 [from 0x80484b0:push   ebp]
    si = v8707
    di = v8708
    es = v8709
    cs = v8710
    ss = v8711
    ds = v8712
    fs = v8713
    gs = v8714
    cf = -v9324-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v8716
    pf = -v9318-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v8718
    af = -v9322-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v8720
    zf = v9321 [from 0x80484b6:sub    esp, 0x0c]
    sf = v9320 [from 0x80484b6:sub    esp, 0x0c]
    tf = v8723
    if = v8724
    df = v8725
    of = v9328 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v8727
    iopl1 = v8728
    nt = v8729
    ?15 = v8730
    memory = {
        size=4; addr=v8705-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v8705-0x10 [from 0x80484b5:push   ebx]; value=v8704
        size=4; addr=v8705-0xc [from 0x80484b4:push   esi]; value=v8707
        size=4; addr=v8705-0x8 [from 0x80484b3:push   edi]; value=v8708
        size=4; addr=v8705-0x4 [from 0x80484b0:push   ebp]; value=v8706
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v9457
    cx = v9458
    dx = v9459
    bx = v9491 [from 0x80484be:pop    ebx]
    sp = v9461+0x4 [from 0x80484be:pop    ebx]
    bp = v9462
    si = v9463
    di = v9464
    es = v9465
    cs = v9466
    ss = v9467
    ds = v9468
    fs = v9469
    gs = v9470
    cf = v9471
    ?1 = v9472
    pf = v9473
    ?3 = v9474
    af = v9475
    ?5 = v9476
    zf = v9477
    sf = v9478
    tf = v9479
    if = v9480
    df = v9481
    of = v9482
    iopl0 = v9483
    iopl1 = v9484
    nt = v9485
    ?15 = v9486
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v9457
    cx = v9458
    dx = v9459
    bx = v9491+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v9461+0x4 [from 0x80484be:pop    ebx]
    bp = v9462
    si = v9463
    di = v9464
    es = v9465
    cs = v9466
    ss = v9467
    ds = v9468
    fs = v9469
    gs = v9470
    cf = v9553 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v9472
    pf = -v9548-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v9474
    af = v9552 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v9476
    zf = v9551 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v9550 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v9479
    if = v9480
    df = v9481
    of = v9556 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v9483
    iopl1 = v9484
    nt = v9485
    ?15 = v9486
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v9457
    cx = v9458
    dx = v9459
    bx = v9491+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v9461 [from 0x80484c5:call   0x080482c8]
    bp = v9462
    si = v9463
    di = v9464
    es = v9465
    cs = v9466
    ss = v9467
    ds = v9468
    fs = v9469
    gs = v9470
    cf = v9553 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v9472
    pf = -v9548-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v9474
    af = v9552 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v9476
    zf = v9551 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v9550 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v9479
    if = v9480
    df = v9481
    of = v9556 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v9483
    iopl1 = v9484
    nt = v9485
    ?15 = v9486
    memory = {
        size=4; addr=v9461 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9778-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9776
    dx = v9777
    bx = v9778
    sp = v9779
    bp = v9780
    si = v9781
    di = v9782
    es = v9783
    cs = v9784
    ss = v9785
    ds = v9786
    fs = v9787
    gs = v9788
    cf = v9789
    ?1 = v9790
    pf = v9791
    ?3 = v9792
    af = v9793
    ?5 = v9794
    zf = v9795
    sf = v9796
    tf = v9797
    if = v9798
    df = v9799
    of = v9800
    iopl0 = v9801
    iopl1 = v9802
    nt = v9803
    ?15 = v9804
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9778-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9776
    dx = v9778-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9778
    sp = v9779
    bp = v9780
    si = v9781
    di = v9782
    es = v9783
    cs = v9784
    ss = v9785
    ds = v9786
    fs = v9787
    gs = v9788
    cf = v9789
    ?1 = v9790
    pf = v9791
    ?3 = v9792
    af = v9793
    ?5 = v9794
    zf = v9795
    sf = v9796
    tf = v9797
    if = v9798
    df = v9799
    of = v9800
    iopl0 = v9801
    iopl1 = v9802
    nt = v9803
    ?15 = v9804
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v19556 [from 0x80484d6:sub    eax, edx]
    cx = v9776
    dx = v9778-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9778
    sp = v9779
    bp = v9780
    si = v9781
    di = v9782
    es = v9783
    cs = v9784
    ss = v9785
    ds = v9786
    fs = v9787
    gs = v9788
    cf = -v9905-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v9790
    pf = -v9899-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v9792
    af = -v9903-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v9794
    zf = v9902 [from 0x80484d6:sub    eax, edx]
    sf = v9901 [from 0x80484d6:sub    eax, edx]
    tf = v9797
    if = v9798
    df = v9799
    of = v9909 [from 0x80484d6:sub    eax, edx]
    iopl0 = v9801
    iopl1 = v9802
    nt = v9803
    ?15 = v9804
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v9948 [from 0x80484d8:sar    eax, 0x02]
    cx = v9776
    dx = v9778-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9778
    sp = v9779
    bp = v9780
    si = v9781
    di = v9782
    es = v9783
    cs = v9784
    ss = v9785
    ds = v9786
    fs = v9787
    gs = v9788
    cf = v9951 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9790
    pf = -v9971-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9792
    af = <top>
    ?5 = v9794
    zf = v9976 [from 0x80484d8:sar    eax, 0x02]
    sf = v9974 [from 0x80484d8:sar    eax, 0x02]
    tf = v9797
    if = v9798
    df = v9799
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9801
    iopl1 = v9802
    nt = v9803
    ?15 = v9804
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v9948 [from 0x80484d8:sar    eax, 0x02]
    cx = v9776
    dx = v9778-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9778
    sp = v9779
    bp = v9780
    si = v9781
    di = v9782
    es = v9783
    cs = v9784
    ss = v9785
    ds = v9786
    fs = v9787
    gs = v9788
    cf = v9951 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9790
    pf = -v9971-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9792
    af = <top>
    ?5 = v9794
    zf = v9976 [from 0x80484d8:sar    eax, 0x02]
    sf = v9974 [from 0x80484d8:sar    eax, 0x02]
    tf = v9797
    if = v9798
    df = v9799
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9801
    iopl1 = v9802
    nt = v9803
    ?15 = v9804
    memory = {
        size=4; addr=v9780-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9948 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v9948 [from 0x80484d8:sar    eax, 0x02]
    cx = v9776
    dx = v9778-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9778
    sp = v9779
    bp = v9780
    si = v9781
    di = v9782
    es = v9783
    cs = v9784
    ss = v9785
    ds = v9786
    fs = v9787
    gs = v9788
    cf = v9951 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v9790
    pf = -v9971-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v9792
    af = <top>
    ?5 = v9794
    zf = v9976 [from 0x80484d8:sar    eax, 0x02]
    sf = v9974 [from 0x80484d8:sar    eax, 0x02]
    tf = v9797
    if = v9798
    df = v9799
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v9801
    iopl1 = v9802
    nt = v9803
    ?15 = v9804
    memory = {
        size=4; addr=v9780-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9948 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v10048 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v10170
    cx = v10171
    dx = v10172
    bx = v10173
    sp = v10174+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v10175
    si = v10176
    di = v10177
    es = v10178
    cs = v10179
    ss = v10180
    ds = v10181
    fs = v10182
    gs = v10183
    cf = v10230 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10185
    pf = -v10225-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10187
    af = v10229 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10189
    zf = v10228 [from 0x80484e0:add    esp, 0x0c]
    sf = v10227 [from 0x80484e0:add    esp, 0x0c]
    tf = v10192
    if = v10193
    df = v10194
    of = v10233 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10196
    iopl1 = v10197
    nt = v10198
    ?15 = v10199
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v10170
    cx = v10171
    dx = v10172
    bx = v10269 [from 0x80484e3:pop    ebx]
    sp = v10174+0x10 [from 0x80484e3:pop    ebx]
    bp = v10175
    si = v10176
    di = v10177
    es = v10178
    cs = v10179
    ss = v10180
    ds = v10181
    fs = v10182
    gs = v10183
    cf = v10230 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10185
    pf = -v10225-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10187
    af = v10229 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10189
    zf = v10228 [from 0x80484e0:add    esp, 0x0c]
    sf = v10227 [from 0x80484e0:add    esp, 0x0c]
    tf = v10192
    if = v10193
    df = v10194
    of = v10233 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10196
    iopl1 = v10197
    nt = v10198
    ?15 = v10199
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v10170
    cx = v10171
    dx = v10172
    bx = v10269 [from 0x80484e3:pop    ebx]
    sp = v10174+0x14 [from 0x80484e4:pop    esi]
    bp = v10175
    si = v10305 [from 0x80484e4:pop    esi]
    di = v10177
    es = v10178
    cs = v10179
    ss = v10180
    ds = v10181
    fs = v10182
    gs = v10183
    cf = v10230 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10185
    pf = -v10225-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10187
    af = v10229 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10189
    zf = v10228 [from 0x80484e0:add    esp, 0x0c]
    sf = v10227 [from 0x80484e0:add    esp, 0x0c]
    tf = v10192
    if = v10193
    df = v10194
    of = v10233 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10196
    iopl1 = v10197
    nt = v10198
    ?15 = v10199
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v10170
    cx = v10171
    dx = v10172
    bx = v10269 [from 0x80484e3:pop    ebx]
    sp = v10174+0x18 [from 0x80484e5:pop    edi]
    bp = v10175
    si = v10305 [from 0x80484e4:pop    esi]
    di = v10341 [from 0x80484e5:pop    edi]
    es = v10178
    cs = v10179
    ss = v10180
    ds = v10181
    fs = v10182
    gs = v10183
    cf = v10230 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10185
    pf = -v10225-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10187
    af = v10229 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10189
    zf = v10228 [from 0x80484e0:add    esp, 0x0c]
    sf = v10227 [from 0x80484e0:add    esp, 0x0c]
    tf = v10192
    if = v10193
    df = v10194
    of = v10233 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10196
    iopl1 = v10197
    nt = v10198
    ?15 = v10199
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v10170
    cx = v10171
    dx = v10172
    bx = v10269 [from 0x80484e3:pop    ebx]
    sp = v10174+0x1c [from 0x80484e6:pop    ebp]
    bp = v10377 [from 0x80484e6:pop    ebp]
    si = v10305 [from 0x80484e4:pop    esi]
    di = v10341 [from 0x80484e5:pop    edi]
    es = v10178
    cs = v10179
    ss = v10180
    ds = v10181
    fs = v10182
    gs = v10183
    cf = v10230 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10185
    pf = -v10225-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10187
    af = v10229 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10189
    zf = v10228 [from 0x80484e0:add    esp, 0x0c]
    sf = v10227 [from 0x80484e0:add    esp, 0x0c]
    tf = v10192
    if = v10193
    df = v10194
    of = v10233 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10196
    iopl1 = v10197
    nt = v10198
    ?15 = v10199
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v10170
    cx = v10171
    dx = v10172
    bx = v10269 [from 0x80484e3:pop    ebx]
    sp = v10174+0x20 [from 0x80484e7:ret    ]
    bp = v10377 [from 0x80484e6:pop    ebp]
    si = v10305 [from 0x80484e4:pop    esi]
    di = v10341 [from 0x80484e5:pop    edi]
    es = v10178
    cs = v10179
    ss = v10180
    ds = v10181
    fs = v10182
    gs = v10183
    cf = v10230 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10185
    pf = -v10225-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10187
    af = v10229 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10189
    zf = v10228 [from 0x80484e0:add    esp, 0x0c]
    sf = v10227 [from 0x80484e0:add    esp, 0x0c]
    tf = v10192
    if = v10193
    df = v10194
    of = v10233 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10196
    iopl1 = v10197
    nt = v10198
    ?15 = v10199
    memory = {}
    ip = v10415 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v10477
    cx = v10478
    dx = v10479
    bx = v10480
    sp = v10481-0x4 [from 0x8048520:push   ebp]
    bp = v10482
    si = v10483
    di = v10484
    es = v10485
    cs = v10486
    ss = v10487
    ds = v10488
    fs = v10489
    gs = v10490
    cf = v10491
    ?1 = v10492
    pf = v10493
    ?3 = v10494
    af = v10495
    ?5 = v10496
    zf = v10497
    sf = v10498
    tf = v10499
    if = v10500
    df = v10501
    of = v10502
    iopl0 = v10503
    iopl1 = v10504
    nt = v10505
    ?15 = v10506
    memory = {
        size=4; addr=v10481-0x4 [from 0x8048520:push   ebp]; value=v10482
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v10477
    cx = v10478
    dx = v10479
    bx = v10480
    sp = v10481-0x4 [from 0x8048520:push   ebp]
    bp = v10481-0x4 [from 0x8048520:push   ebp]
    si = v10483
    di = v10484
    es = v10485
    cs = v10486
    ss = v10487
    ds = v10488
    fs = v10489
    gs = v10490
    cf = v10491
    ?1 = v10492
    pf = v10493
    ?3 = v10494
    af = v10495
    ?5 = v10496
    zf = v10497
    sf = v10498
    tf = v10499
    if = v10500
    df = v10501
    of = v10502
    iopl0 = v10503
    iopl1 = v10504
    nt = v10505
    ?15 = v10506
    memory = {
        size=4; addr=v10481-0x4 [from 0x8048520:push   ebp]; value=v10482
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v10477
    cx = v10478
    dx = v10479
    bx = v10480
    sp = v10481-0x8 [from 0x8048523:push   edi]
    bp = v10481-0x4 [from 0x8048520:push   ebp]
    si = v10483
    di = v10484
    es = v10485
    cs = v10486
    ss = v10487
    ds = v10488
    fs = v10489
    gs = v10490
    cf = v10491
    ?1 = v10492
    pf = v10493
    ?3 = v10494
    af = v10495
    ?5 = v10496
    zf = v10497
    sf = v10498
    tf = v10499
    if = v10500
    df = v10501
    of = v10502
    iopl0 = v10503
    iopl1 = v10504
    nt = v10505
    ?15 = v10506
    memory = {
        size=4; addr=v10481-0x8 [from 0x8048523:push   edi]; value=v10484
        size=4; addr=v10481-0x4 [from 0x8048520:push   ebp]; value=v10482
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v10477
    cx = v10478
    dx = v10479
    bx = v10480
    sp = v10481-0xc [from 0x8048524:push   esi]
    bp = v10481-0x4 [from 0x8048520:push   ebp]
    si = v10483
    di = v10484
    es = v10485
    cs = v10486
    ss = v10487
    ds = v10488
    fs = v10489
    gs = v10490
    cf = v10491
    ?1 = v10492
    pf = v10493
    ?3 = v10494
    af = v10495
    ?5 = v10496
    zf = v10497
    sf = v10498
    tf = v10499
    if = v10500
    df = v10501
    of = v10502
    iopl0 = v10503
    iopl1 = v10504
    nt = v10505
    ?15 = v10506
    memory = {
        size=4; addr=v10481-0xc [from 0x8048524:push   esi]; value=v10483
        size=4; addr=v10481-0x8 [from 0x8048523:push   edi]; value=v10484
        size=4; addr=v10481-0x4 [from 0x8048520:push   ebp]; value=v10482
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v10477
    cx = v10478
    dx = v10479
    bx = v10480
    sp = v10481-0x10 [from 0x8048525:push   ebx]
    bp = v10481-0x4 [from 0x8048520:push   ebp]
    si = v10483
    di = v10484
    es = v10485
    cs = v10486
    ss = v10487
    ds = v10488
    fs = v10489
    gs = v10490
    cf = v10491
    ?1 = v10492
    pf = v10493
    ?3 = v10494
    af = v10495
    ?5 = v10496
    zf = v10497
    sf = v10498
    tf = v10499
    if = v10500
    df = v10501
    of = v10502
    iopl0 = v10503
    iopl1 = v10504
    nt = v10505
    ?15 = v10506
    memory = {
        size=4; addr=v10481-0x10 [from 0x8048525:push   ebx]; value=v10480
        size=4; addr=v10481-0xc [from 0x8048524:push   esi]; value=v10483
        size=4; addr=v10481-0x8 [from 0x8048523:push   edi]; value=v10484
        size=4; addr=v10481-0x4 [from 0x8048520:push   ebp]; value=v10482
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v10477
    cx = v10478
    dx = v10479
    bx = v10480
    sp = v10481-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v10481-0x4 [from 0x8048520:push   ebp]
    si = v10483
    di = v10484
    es = v10485
    cs = v10486
    ss = v10487
    ds = v10488
    fs = v10489
    gs = v10490
    cf = -v10716-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v10492
    pf = -v10710-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v10494
    af = -v10714-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v10496
    zf = v10713 [from 0x8048526:sub    esp, 0x0c]
    sf = v10712 [from 0x8048526:sub    esp, 0x0c]
    tf = v10499
    if = v10500
    df = v10501
    of = v10720 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v10503
    iopl1 = v10504
    nt = v10505
    ?15 = v10506
    memory = {
        size=4; addr=v10481-0x10 [from 0x8048525:push   ebx]; value=v10480
        size=4; addr=v10481-0xc [from 0x8048524:push   esi]; value=v10483
        size=4; addr=v10481-0x8 [from 0x8048523:push   edi]; value=v10484
        size=4; addr=v10481-0x4 [from 0x8048520:push   ebp]; value=v10482
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v10477
    cx = v10478
    dx = v10479
    bx = v10480
    sp = v10481-0x20 [from 0x8048529:call   0x0804852e]
    bp = v10481-0x4 [from 0x8048520:push   ebp]
    si = v10483
    di = v10484
    es = v10485
    cs = v10486
    ss = v10487
    ds = v10488
    fs = v10489
    gs = v10490
    cf = -v10716-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v10492
    pf = -v10710-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v10494
    af = -v10714-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v10496
    zf = v10713 [from 0x8048526:sub    esp, 0x0c]
    sf = v10712 [from 0x8048526:sub    esp, 0x0c]
    tf = v10499
    if = v10500
    df = v10501
    of = v10720 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v10503
    iopl1 = v10504
    nt = v10505
    ?15 = v10506
    memory = {
        size=4; addr=v10481-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v10481-0x10 [from 0x8048525:push   ebx]; value=v10480
        size=4; addr=v10481-0xc [from 0x8048524:push   esi]; value=v10483
        size=4; addr=v10481-0x8 [from 0x8048523:push   edi]; value=v10484
        size=4; addr=v10481-0x4 [from 0x8048520:push   ebp]; value=v10482
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v10849
    cx = v10850
    dx = v10851
    bx = v10883 [from 0x804852e:pop    ebx]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = v10863
    ?1 = v10864
    pf = v10865
    ?3 = v10866
    af = v10867
    ?5 = v10868
    zf = v10869
    sf = v10870
    tf = v10871
    if = v10872
    df = v10873
    of = v10874
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v10849
    cx = v10850
    dx = v10851
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = v10945 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10864
    pf = -v10940-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10866
    af = v10944 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10868
    zf = v10943 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10942 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10871
    if = v10872
    df = v10873
    of = v10948 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10883+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v10850
    dx = v10851
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = v10945 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10864
    pf = -v10940-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10866
    af = v10944 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10868
    zf = v10943 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10942 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10871
    if = v10872
    df = v10873
    of = v10948 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10883+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v10850
    dx = v10883+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = v10945 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v10864
    pf = -v10940-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v10866
    af = v10944 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v10868
    zf = v10943 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v10942 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v10871
    if = v10872
    df = v10873
    of = v10948 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v21766 [from 0x8048541:sub    eax, edx]
    cx = v10850
    dx = v10883+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = -v11080-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v10864
    pf = -v11074-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v10866
    af = -v11078-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v10868
    zf = v11077 [from 0x8048541:sub    eax, edx]
    sf = v11076 [from 0x8048541:sub    eax, edx]
    tf = v10871
    if = v10872
    df = v10873
    of = v11084 [from 0x8048541:sub    eax, edx]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v11123 [from 0x8048543:sar    eax, 0x02]
    cx = v10850
    dx = v10883+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = v11126 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10864
    pf = -v11146-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v10866
    af = <top>
    ?5 = v10868
    zf = v11151 [from 0x8048543:sar    eax, 0x02]
    sf = v11149 [from 0x8048543:sar    eax, 0x02]
    tf = v10871
    if = v10872
    df = v10873
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v11123 [from 0x8048543:sar    eax, 0x02]
    cx = v10850
    dx = v10883+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = v11126 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10864
    pf = -v11146-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v10866
    af = <top>
    ?5 = v10868
    zf = v11151 [from 0x8048543:sar    eax, 0x02]
    sf = v11149 [from 0x8048543:sar    eax, 0x02]
    tf = v10871
    if = v10872
    df = v10873
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {
        size=4; addr=v10854-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11123 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v11123-0x1 [from 0x8048549:dec    eax]
    cx = v10850
    dx = v10883+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = v11126 [from 0x8048543:sar    eax, 0x02]
    ?1 = v10864
    pf = -v11245-0x1 [from 0x8048549:dec    eax]
    ?3 = v10866
    af = -v11249-0x1 [from 0x8048549:dec    eax]
    ?5 = v10868
    zf = v11248 [from 0x8048549:dec    eax]
    sf = v11247 [from 0x8048549:dec    eax]
    tf = v10871
    if = v10872
    df = v10873
    of = v11253 [from 0x8048549:dec    eax]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {
        size=4; addr=v10854-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11123 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v11123-0x1 [from 0x8048549:dec    eax]
    cx = v10850
    dx = v10883+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = -v11318-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v10864
    pf = -v11312-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v10866
    af = -v11316-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v10868
    zf = v11315 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v11314 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v10871
    if = v10872
    df = v10873
    of = v11322 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {
        size=4; addr=v10854-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11123 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v11123-0x1 [from 0x8048549:dec    eax]
    cx = v10850
    dx = v10883+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10883+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v10853+0x4 [from 0x804852e:pop    ebx]
    bp = v10854
    si = v10855
    di = v10856
    es = v10857
    cs = v10858
    ss = v10859
    ds = v10860
    fs = v10861
    gs = v10862
    cf = -v11318-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v10864
    pf = -v11312-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v10866
    af = -v11316-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v10868
    zf = v11315 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v11314 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v10871
    if = v10872
    df = v10873
    of = v11322 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v10875
    iopl1 = v10876
    nt = v10877
    ?15 = v10878
    memory = {
        size=4; addr=v10854-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11123 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v11356 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v11478
    cx = v11479
    dx = v11480
    bx = v11481
    sp = v11482-0x4 [from 0x804856b:call   0x080485b0]
    bp = v11483
    si = v11484
    di = v11485
    es = v11486
    cs = v11487
    ss = v11488
    ds = v11489
    fs = v11490
    gs = v11491
    cf = v11492
    ?1 = v11493
    pf = v11494
    ?3 = v11495
    af = v11496
    ?5 = v11497
    zf = v11498
    sf = v11499
    tf = v11500
    if = v11501
    df = v11502
    of = v11503
    iopl0 = v11504
    iopl1 = v11505
    nt = v11506
    ?15 = v11507
    memory = {
        size=4; addr=v11482-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v11695
    cx = v11696
    dx = v11697
    bx = v11698
    sp = v11699+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v11700
    si = v11701
    di = v11702
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = v11755 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11710
    pf = -v11750-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11712
    af = v11754 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11714
    zf = v11753 [from 0x8048570:add    esp, 0x0c]
    sf = v11752 [from 0x8048570:add    esp, 0x0c]
    tf = v11717
    if = v11718
    df = v11719
    of = v11758 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v11695
    cx = v11696
    dx = v11697
    bx = v11794 [from 0x8048573:pop    ebx]
    sp = v11699+0x10 [from 0x8048573:pop    ebx]
    bp = v11700
    si = v11701
    di = v11702
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = v11755 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11710
    pf = -v11750-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11712
    af = v11754 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11714
    zf = v11753 [from 0x8048570:add    esp, 0x0c]
    sf = v11752 [from 0x8048570:add    esp, 0x0c]
    tf = v11717
    if = v11718
    df = v11719
    of = v11758 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v11695
    cx = v11696
    dx = v11697
    bx = v11794 [from 0x8048573:pop    ebx]
    sp = v11699+0x14 [from 0x8048574:pop    esi]
    bp = v11700
    si = v11830 [from 0x8048574:pop    esi]
    di = v11702
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = v11755 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11710
    pf = -v11750-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11712
    af = v11754 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11714
    zf = v11753 [from 0x8048570:add    esp, 0x0c]
    sf = v11752 [from 0x8048570:add    esp, 0x0c]
    tf = v11717
    if = v11718
    df = v11719
    of = v11758 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v11695
    cx = v11696
    dx = v11697
    bx = v11794 [from 0x8048573:pop    ebx]
    sp = v11699+0x18 [from 0x8048575:pop    edi]
    bp = v11700
    si = v11830 [from 0x8048574:pop    esi]
    di = v11866 [from 0x8048575:pop    edi]
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = v11755 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11710
    pf = -v11750-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11712
    af = v11754 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11714
    zf = v11753 [from 0x8048570:add    esp, 0x0c]
    sf = v11752 [from 0x8048570:add    esp, 0x0c]
    tf = v11717
    if = v11718
    df = v11719
    of = v11758 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v11695
    cx = v11696
    dx = v11697
    bx = v11794 [from 0x8048573:pop    ebx]
    sp = v11699+0x1c [from 0x8048576:pop    ebp]
    bp = v11902 [from 0x8048576:pop    ebp]
    si = v11830 [from 0x8048574:pop    esi]
    di = v11866 [from 0x8048575:pop    edi]
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = v11755 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11710
    pf = -v11750-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11712
    af = v11754 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11714
    zf = v11753 [from 0x8048570:add    esp, 0x0c]
    sf = v11752 [from 0x8048570:add    esp, 0x0c]
    tf = v11717
    if = v11718
    df = v11719
    of = v11758 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v11695
    cx = v11696
    dx = v11697
    bx = v11794 [from 0x8048573:pop    ebx]
    sp = v11699+0x20 [from 0x8048577:ret    ]
    bp = v11902 [from 0x8048576:pop    ebp]
    si = v11830 [from 0x8048574:pop    esi]
    di = v11866 [from 0x8048575:pop    edi]
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = v11755 [from 0x8048570:add    esp, 0x0c]
    ?1 = v11710
    pf = -v11750-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v11712
    af = v11754 [from 0x8048570:add    esp, 0x0c]
    ?5 = v11714
    zf = v11753 [from 0x8048570:add    esp, 0x0c]
    sf = v11752 [from 0x8048570:add    esp, 0x0c]
    tf = v11717
    if = v11718
    df = v11719
    of = v11758 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = v11940 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048578:nop    
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {}
    ip = 0x8048579 [from 0x8048578:nop    ]
0x8048579:nop    
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {}
    ip = 0x804857a [from 0x8048579:nop    ]
0x804857a:nop    
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {}
    ip = 0x804857b [from 0x804857a:nop    ]
0x804857b:nop    
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {}
    ip = 0x804857c [from 0x804857b:nop    ]
0x804857c:nop    
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {}
    ip = 0x804857d [from 0x804857c:nop    ]
0x804857d:nop    
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {}
    ip = 0x804857e [from 0x804857d:nop    ]
0x804857e:nop    
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {}
    ip = 0x804857f [from 0x804857e:nop    ]
0x804857f:nop    
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {}
    ip = 0x8048580 [from 0x804857f:nop    ]
0x8048580:push   ebp
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006-0x4 [from 0x8048580:push   ebp]
    bp = v12007
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {
        size=4; addr=v12006-0x4 [from 0x8048580:push   ebp]; value=v12007
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006-0x4 [from 0x8048580:push   ebp]
    bp = v12006-0x4 [from 0x8048580:push   ebp]
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {
        size=4; addr=v12006-0x4 [from 0x8048580:push   ebp]; value=v12007
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006-0x8 [from 0x8048583:push   ebx]
    bp = v12006-0x4 [from 0x8048580:push   ebp]
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = v12016
    ?1 = v12017
    pf = v12018
    ?3 = v12019
    af = v12020
    ?5 = v12021
    zf = v12022
    sf = v12023
    tf = v12024
    if = v12025
    df = v12026
    of = v12027
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {
        size=4; addr=v12006-0x8 [from 0x8048583:push   ebx]; value=v12005
        size=4; addr=v12006-0x4 [from 0x8048580:push   ebp]; value=v12007
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v12002
    cx = v12003
    dx = v12004
    bx = v12005
    sp = v12006-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12006-0x4 [from 0x8048580:push   ebp]
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = -v12425-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12017
    pf = -v12419-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12019
    af = -v12423-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12021
    zf = v12422 [from 0x8048584:sub    esp, 0x04]
    sf = v12421 [from 0x8048584:sub    esp, 0x04]
    tf = v12024
    if = v12025
    df = v12026
    of = v12429 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {
        size=4; addr=v12006-0x8 [from 0x8048583:push   ebx]; value=v12005
        size=4; addr=v12006-0x4 [from 0x8048580:push   ebp]; value=v12007
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v12002
    cx = v12003
    dx = v12004
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v12006-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12006-0x4 [from 0x8048580:push   ebp]
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = -v12425-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12017
    pf = -v12419-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12019
    af = -v12423-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12021
    zf = v12422 [from 0x8048584:sub    esp, 0x04]
    sf = v12421 [from 0x8048584:sub    esp, 0x04]
    tf = v12024
    if = v12025
    df = v12026
    of = v12429 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {
        size=4; addr=v12006-0x8 [from 0x8048583:push   ebx]; value=v12005
        size=4; addr=v12006-0x4 [from 0x8048580:push   ebp]; value=v12007
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v12497 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12003
    dx = v12004
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v12006-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12006-0x4 [from 0x8048580:push   ebp]
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = -v12425-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v12017
    pf = -v12419-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v12019
    af = -v12423-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v12021
    zf = v12422 [from 0x8048584:sub    esp, 0x04]
    sf = v12421 [from 0x8048584:sub    esp, 0x04]
    tf = v12024
    if = v12025
    df = v12026
    of = v12429 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {
        size=4; addr=v12006-0x8 [from 0x8048583:push   ebx]; value=v12005
        size=4; addr=v12006-0x4 [from 0x8048580:push   ebp]; value=v12007
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v12497 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12003
    dx = v12004
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v12006-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12006-0x4 [from 0x8048580:push   ebp]
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = -v12562-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v12017
    pf = -v12556-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v12019
    af = -v12560-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v12021
    zf = v12559 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v12558 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v12024
    if = v12025
    df = v12026
    of = v12566 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {
        size=4; addr=v12006-0x8 [from 0x8048583:push   ebx]; value=v12005
        size=4; addr=v12006-0x4 [from 0x8048580:push   ebp]; value=v12007
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v12497 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v12003
    dx = v12004
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v12006-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v12006-0x4 [from 0x8048580:push   ebp]
    si = v12008
    di = v12009
    es = v12010
    cs = v12011
    ss = v12012
    ds = v12013
    fs = v12014
    gs = v12015
    cf = -v12562-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v12017
    pf = -v12556-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v12019
    af = -v12560-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v12021
    zf = v12559 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v12558 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v12024
    if = v12025
    df = v12026
    of = v12566 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v12028
    iopl1 = v12029
    nt = v12030
    ?15 = v12031
    memory = {
        size=4; addr=v12006-0x8 [from 0x8048583:push   ebx]; value=v12005
        size=4; addr=v12006-0x4 [from 0x8048580:push   ebp]; value=v12007
    }
    ip = v12600 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v12722
    cx = v12723
    dx = v12724
    bx = v12725
    sp = v12726
    bp = v12727
    si = v12728 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12729
    es = v12730
    cs = v12731
    ss = v12732
    ds = v12733
    fs = v12734
    gs = v12735
    cf = v12736
    ?1 = v12737
    pf = v12738
    ?3 = v12739
    af = v12740
    ?5 = v12741
    zf = v12742
    sf = v12743
    tf = v12744
    if = v12745
    df = v12746
    of = v12747
    iopl0 = v12748
    iopl1 = v12749
    nt = v12750
    ?15 = v12751
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v12722
    cx = v12723
    dx = v12724
    bx = v12725
    sp = v12726
    bp = v12727
    si = v12728 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12729 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12730
    cs = v12731
    ss = v12732
    ds = v12733
    fs = v12734
    gs = v12735
    cf = v12736
    ?1 = v12737
    pf = v12738
    ?3 = v12739
    af = v12740
    ?5 = v12741
    zf = v12742
    sf = v12743
    tf = v12744
    if = v12745
    df = v12746
    of = v12747
    iopl0 = v12748
    iopl1 = v12749
    nt = v12750
    ?15 = v12751
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v12722
    cx = v12723
    dx = v12724
    bx = v12725-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v12726
    bp = v12727
    si = v12728 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12729 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12730
    cs = v12731
    ss = v12732
    ds = v12733
    fs = v12734
    gs = v12735
    cf = -v12853-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v12737
    pf = -v12847-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v12739
    af = -v12851-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v12741
    zf = v12850 [from 0x80485a0:sub    ebx, 0x04]
    sf = v12849 [from 0x80485a0:sub    ebx, 0x04]
    tf = v12744
    if = v12745
    df = v12746
    of = v12857 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v12748
    iopl1 = v12749
    nt = v12750
    ?15 = v12751
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v12722
    cx = v12723
    dx = v12724
    bx = v12725-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v12726-0x4 [from 0x80485a3:call   eax]
    bp = v12727
    si = v12728 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v12729 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v12730
    cs = v12731
    ss = v12732
    ds = v12733
    fs = v12734
    gs = v12735
    cf = -v12853-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v12737
    pf = -v12847-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v12739
    af = -v12851-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v12741
    zf = v12850 [from 0x80485a0:sub    ebx, 0x04]
    sf = v12849 [from 0x80485a0:sub    ebx, 0x04]
    tf = v12744
    if = v12745
    df = v12746
    of = v12857 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v12748
    iopl1 = v12749
    nt = v12750
    ?15 = v12751
    memory = {
        size=4; addr=v12726-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v12722
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v13077 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v13046
    dx = v13047
    bx = v13048
    sp = v13049
    bp = v13050
    si = v13051
    di = v13052
    es = v13053
    cs = v13054
    ss = v13055
    ds = v13056
    fs = v13057
    gs = v13058
    cf = v13059
    ?1 = v13060
    pf = v13061
    ?3 = v13062
    af = v13063
    ?5 = v13064
    zf = v13065
    sf = v13066
    tf = v13067
    if = v13068
    df = v13069
    of = v13070
    iopl0 = v13071
    iopl1 = v13072
    nt = v13073
    ?15 = v13074
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v13077 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v13046
    dx = v13047
    bx = v13048
    sp = v13049
    bp = v13050
    si = v13051
    di = v13052
    es = v13053
    cs = v13054
    ss = v13055
    ds = v13056
    fs = v13057
    gs = v13058
    cf = -v13142-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v13060
    pf = -v13136-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v13062
    af = -v13140-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v13064
    zf = v13139 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v13138 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v13067
    if = v13068
    df = v13069
    of = v13146 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v13071
    iopl1 = v13072
    nt = v13073
    ?15 = v13074
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v13077 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v13046
    dx = v13047
    bx = v13048
    sp = v13049
    bp = v13050
    si = v13051
    di = v13052
    es = v13053
    cs = v13054
    ss = v13055
    ds = v13056
    fs = v13057
    gs = v13058
    cf = -v13142-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v13060
    pf = -v13136-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v13062
    af = -v13140-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v13064
    zf = v13139 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v13138 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v13067
    if = v13068
    df = v13069
    of = v13146 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v13071
    iopl1 = v13072
    nt = v13073
    ?15 = v13074
    memory = {}
    ip = v13181 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v13337 [from 0x80485ac:pop    eax]
    cx = v13304
    dx = v13305
    bx = v13306
    sp = v13307+0x4 [from 0x80485ac:pop    eax]
    bp = v13308
    si = v13309
    di = v13310
    es = v13311
    cs = v13312
    ss = v13313
    ds = v13314
    fs = v13315
    gs = v13316
    cf = v13317
    ?1 = v13318
    pf = v13319
    ?3 = v13320
    af = v13321
    ?5 = v13322
    zf = v13323
    sf = v13324
    tf = v13325
    if = v13326
    df = v13327
    of = v13328
    iopl0 = v13329
    iopl1 = v13330
    nt = v13331
    ?15 = v13332
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v13337 [from 0x80485ac:pop    eax]
    cx = v13304
    dx = v13305
    bx = v13373 [from 0x80485ad:pop    ebx]
    sp = v13307+0x8 [from 0x80485ad:pop    ebx]
    bp = v13308
    si = v13309
    di = v13310
    es = v13311
    cs = v13312
    ss = v13313
    ds = v13314
    fs = v13315
    gs = v13316
    cf = v13317
    ?1 = v13318
    pf = v13319
    ?3 = v13320
    af = v13321
    ?5 = v13322
    zf = v13323
    sf = v13324
    tf = v13325
    if = v13326
    df = v13327
    of = v13328
    iopl0 = v13329
    iopl1 = v13330
    nt = v13331
    ?15 = v13332
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v13337 [from 0x80485ac:pop    eax]
    cx = v13304
    dx = v13305
    bx = v13373 [from 0x80485ad:pop    ebx]
    sp = v13307+0xc [from 0x80485ae:pop    ebp]
    bp = v13409 [from 0x80485ae:pop    ebp]
    si = v13309
    di = v13310
    es = v13311
    cs = v13312
    ss = v13313
    ds = v13314
    fs = v13315
    gs = v13316
    cf = v13317
    ?1 = v13318
    pf = v13319
    ?3 = v13320
    af = v13321
    ?5 = v13322
    zf = v13323
    sf = v13324
    tf = v13325
    if = v13326
    df = v13327
    of = v13328
    iopl0 = v13329
    iopl1 = v13330
    nt = v13331
    ?15 = v13332
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v13337 [from 0x80485ac:pop    eax]
    cx = v13304
    dx = v13305
    bx = v13373 [from 0x80485ad:pop    ebx]
    sp = v13307+0x10 [from 0x80485af:ret    ]
    bp = v13409 [from 0x80485ae:pop    ebp]
    si = v13309
    di = v13310
    es = v13311
    cs = v13312
    ss = v13313
    ds = v13314
    fs = v13315
    gs = v13316
    cf = v13317
    ?1 = v13318
    pf = v13319
    ?3 = v13320
    af = v13321
    ?5 = v13322
    zf = v13323
    sf = v13324
    tf = v13325
    if = v13326
    df = v13327
    of = v13328
    iopl0 = v13329
    iopl1 = v13330
    nt = v13331
    ?15 = v13332
    memory = {}
    ip = v13447 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v13509
    cx = v13510
    dx = v13511
    bx = v13512
    sp = v13513-0x4 [from 0x80485b0:push   ebp]
    bp = v13514
    si = v13515
    di = v13516
    es = v13517
    cs = v13518
    ss = v13519
    ds = v13520
    fs = v13521
    gs = v13522
    cf = v13523
    ?1 = v13524
    pf = v13525
    ?3 = v13526
    af = v13527
    ?5 = v13528
    zf = v13529
    sf = v13530
    tf = v13531
    if = v13532
    df = v13533
    of = v13534
    iopl0 = v13535
    iopl1 = v13536
    nt = v13537
    ?15 = v13538
    memory = {
        size=4; addr=v13513-0x4 [from 0x80485b0:push   ebp]; value=v13514
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v13509
    cx = v13510
    dx = v13511
    bx = v13512
    sp = v13513-0x4 [from 0x80485b0:push   ebp]
    bp = v13513-0x4 [from 0x80485b0:push   ebp]
    si = v13515
    di = v13516
    es = v13517
    cs = v13518
    ss = v13519
    ds = v13520
    fs = v13521
    gs = v13522
    cf = v13523
    ?1 = v13524
    pf = v13525
    ?3 = v13526
    af = v13527
    ?5 = v13528
    zf = v13529
    sf = v13530
    tf = v13531
    if = v13532
    df = v13533
    of = v13534
    iopl0 = v13535
    iopl1 = v13536
    nt = v13537
    ?15 = v13538
    memory = {
        size=4; addr=v13513-0x4 [from 0x80485b0:push   ebp]; value=v13514
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v13509
    cx = v13510
    dx = v13511
    bx = v13512
    sp = v13513-0x8 [from 0x80485b3:push   ebx]
    bp = v13513-0x4 [from 0x80485b0:push   ebp]
    si = v13515
    di = v13516
    es = v13517
    cs = v13518
    ss = v13519
    ds = v13520
    fs = v13521
    gs = v13522
    cf = v13523
    ?1 = v13524
    pf = v13525
    ?3 = v13526
    af = v13527
    ?5 = v13528
    zf = v13529
    sf = v13530
    tf = v13531
    if = v13532
    df = v13533
    of = v13534
    iopl0 = v13535
    iopl1 = v13536
    nt = v13537
    ?15 = v13538
    memory = {
        size=4; addr=v13513-0x8 [from 0x80485b3:push   ebx]; value=v13512
        size=4; addr=v13513-0x4 [from 0x80485b0:push   ebp]; value=v13514
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v13509
    cx = v13510
    dx = v13511
    bx = v13512
    sp = v13513-0xc [from 0x80485b4:push   eax]
    bp = v13513-0x4 [from 0x80485b0:push   ebp]
    si = v13515
    di = v13516
    es = v13517
    cs = v13518
    ss = v13519
    ds = v13520
    fs = v13521
    gs = v13522
    cf = v13523
    ?1 = v13524
    pf = v13525
    ?3 = v13526
    af = v13527
    ?5 = v13528
    zf = v13529
    sf = v13530
    tf = v13531
    if = v13532
    df = v13533
    of = v13534
    iopl0 = v13535
    iopl1 = v13536
    nt = v13537
    ?15 = v13538
    memory = {
        size=4; addr=v13513-0xc [from 0x80485b4:push   eax]; value=v13509
        size=4; addr=v13513-0x8 [from 0x80485b3:push   ebx]; value=v13512
        size=4; addr=v13513-0x4 [from 0x80485b0:push   ebp]; value=v13514
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v13509
    cx = v13510
    dx = v13511
    bx = v13512
    sp = v13513-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v13513-0x4 [from 0x80485b0:push   ebp]
    si = v13515
    di = v13516
    es = v13517
    cs = v13518
    ss = v13519
    ds = v13520
    fs = v13521
    gs = v13522
    cf = v13523
    ?1 = v13524
    pf = v13525
    ?3 = v13526
    af = v13527
    ?5 = v13528
    zf = v13529
    sf = v13530
    tf = v13531
    if = v13532
    df = v13533
    of = v13534
    iopl0 = v13535
    iopl1 = v13536
    nt = v13537
    ?15 = v13538
    memory = {
        size=4; addr=v13513-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v13513-0xc [from 0x80485b4:push   eax]; value=v13509
        size=4; addr=v13513-0x8 [from 0x80485b3:push   ebx]; value=v13512
        size=4; addr=v13513-0x4 [from 0x80485b0:push   ebp]; value=v13514
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v13776
    cx = v13777
    dx = v13778
    bx = v13810 [from 0x80485ba:pop    ebx]
    sp = v13780+0x4 [from 0x80485ba:pop    ebx]
    bp = v13781
    si = v13782
    di = v13783
    es = v13784
    cs = v13785
    ss = v13786
    ds = v13787
    fs = v13788
    gs = v13789
    cf = v13790
    ?1 = v13791
    pf = v13792
    ?3 = v13793
    af = v13794
    ?5 = v13795
    zf = v13796
    sf = v13797
    tf = v13798
    if = v13799
    df = v13800
    of = v13801
    iopl0 = v13802
    iopl1 = v13803
    nt = v13804
    ?15 = v13805
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v13776
    cx = v13777
    dx = v13778
    bx = v13810+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v13780+0x4 [from 0x80485ba:pop    ebx]
    bp = v13781
    si = v13782
    di = v13783
    es = v13784
    cs = v13785
    ss = v13786
    ds = v13787
    fs = v13788
    gs = v13789
    cf = v13872 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v13791
    pf = -v13867-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v13793
    af = v13871 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v13795
    zf = v13870 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v13869 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v13798
    if = v13799
    df = v13800
    of = v13875 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v13802
    iopl1 = v13803
    nt = v13804
    ?15 = v13805
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v13776
    cx = v13777
    dx = v13778
    bx = v13810+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v13780 [from 0x80485c1:call   0x08048390]
    bp = v13781
    si = v13782
    di = v13783
    es = v13784
    cs = v13785
    ss = v13786
    ds = v13787
    fs = v13788
    gs = v13789
    cf = v13872 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v13791
    pf = -v13867-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v13793
    af = v13871 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v13795
    zf = v13870 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v13869 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v13798
    if = v13799
    df = v13800
    of = v13875 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v13802
    iopl1 = v13803
    nt = v13804
    ?15 = v13805
    memory = {
        size=4; addr=v13780 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v14128 [from 0x80485c6:pop    eax]
    cx = v14095
    dx = v14096
    bx = v14097
    sp = v14098+0x4 [from 0x80485c6:pop    eax]
    bp = v14099
    si = v14100
    di = v14101
    es = v14102
    cs = v14103
    ss = v14104
    ds = v14105
    fs = v14106
    gs = v14107
    cf = v14108
    ?1 = v14109
    pf = v14110
    ?3 = v14111
    af = v14112
    ?5 = v14113
    zf = v14114
    sf = v14115
    tf = v14116
    if = v14117
    df = v14118
    of = v14119
    iopl0 = v14120
    iopl1 = v14121
    nt = v14122
    ?15 = v14123
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v14128 [from 0x80485c6:pop    eax]
    cx = v14095
    dx = v14096
    bx = v14164 [from 0x80485c7:pop    ebx]
    sp = v14098+0x8 [from 0x80485c7:pop    ebx]
    bp = v14099
    si = v14100
    di = v14101
    es = v14102
    cs = v14103
    ss = v14104
    ds = v14105
    fs = v14106
    gs = v14107
    cf = v14108
    ?1 = v14109
    pf = v14110
    ?3 = v14111
    af = v14112
    ?5 = v14113
    zf = v14114
    sf = v14115
    tf = v14116
    if = v14117
    df = v14118
    of = v14119
    iopl0 = v14120
    iopl1 = v14121
    nt = v14122
    ?15 = v14123
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v14128 [from 0x80485c6:pop    eax]
    cx = v14095
    dx = v14096
    bx = v14164 [from 0x80485c7:pop    ebx]
    sp = v14099+0x4 [from 0x80485c8:leave  ]
    bp = v14200 [from 0x80485c8:leave  ]
    si = v14100
    di = v14101
    es = v14102
    cs = v14103
    ss = v14104
    ds = v14105
    fs = v14106
    gs = v14107
    cf = v14108
    ?1 = v14109
    pf = v14110
    ?3 = v14111
    af = v14112
    ?5 = v14113
    zf = v14114
    sf = v14115
    tf = v14116
    if = v14117
    df = v14118
    of = v14119
    iopl0 = v14120
    iopl1 = v14121
    nt = v14122
    ?15 = v14123
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v14128 [from 0x80485c6:pop    eax]
    cx = v14095
    dx = v14096
    bx = v14164 [from 0x80485c7:pop    ebx]
    sp = v14099+0x8 [from 0x80485c9:ret    ]
    bp = v14200 [from 0x80485c8:leave  ]
    si = v14100
    di = v14101
    es = v14102
    cs = v14103
    ss = v14104
    ds = v14105
    fs = v14106
    gs = v14107
    cf = v14108
    ?1 = v14109
    pf = v14110
    ?3 = v14111
    af = v14112
    ?5 = v14113
    zf = v14114
    sf = v14115
    tf = v14116
    if = v14117
    df = v14118
    of = v14119
    iopl0 = v14120
    iopl1 = v14121
    nt = v14122
    ?15 = v14123
    memory = {}
    ip = v14238 [from 0x80485c9:ret    ]
analyzed headers: 1
