=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax=v32[32]
    cx=v33[32]
    dx=v34[32]
    bx=v35[32]
    sp=(add[32] v36[32] -4[32])
    bp=v37[32]
    si=v38[32]
    di=v39[32]
    es=v40[16]
    cs=v41[16]
    ss=v42[16]
    ds=v43[16]
    fs=v44[16]
    gs=v45[16]
    cf=v46[1]
    ?1=v47[1]
    pf=v48[1]
    ?3=v49[1]
    af=v50[1]
    ?5=v51[1]
    zf=v52[1]
    sf=v53[1]
    tf=v54[1]
    if=v55[1]
    df=v56[1]
    of=v57[1]
    iopl0=v58[1]
    iopl1=v59[1]
    nt=v60[1]
    ?15=v61[1]
    ip=134513353[32]
    memory:
        (add[32] v36[32] -4[32]): v37[32] 4 bytes
    ip = 134513353[32]
0x80482c9:mov    ebp, esp
    ax=v32[32]
    cx=v33[32]
    dx=v34[32]
    bx=v35[32]
    sp=(add[32] v36[32] -4[32])
    bp=(add[32] v36[32] -4[32])
    si=v38[32]
    di=v39[32]
    es=v40[16]
    cs=v41[16]
    ss=v42[16]
    ds=v43[16]
    fs=v44[16]
    gs=v45[16]
    cf=v46[1]
    ?1=v47[1]
    pf=v48[1]
    ?3=v49[1]
    af=v50[1]
    ?5=v51[1]
    zf=v52[1]
    sf=v53[1]
    tf=v54[1]
    if=v55[1]
    df=v56[1]
    of=v57[1]
    iopl0=v58[1]
    iopl1=v59[1]
    nt=v60[1]
    ?15=v61[1]
    ip=134513355[32]
    memory:
        (add[32] v36[32] -4[32]): v37[32] 4 bytes
    ip = 134513355[32]
0x80482cb:sub    esp, 0x08
    ax=v32[32]
    cx=v33[32]
    dx=v34[32]
    bx=v35[32]
    sp=(add[32] (add[32] v36[32] -4[32]) -8[32])
    bp=(add[32] v36[32] -4[32])
    si=v38[32]
    di=v39[32]
    es=v40[16]
    cs=v41[16]
    ss=v42[16]
    ds=v43[16]
    fs=v44[16]
    gs=v45[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))))
    ?1=v47[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))))))
    ?3=v49[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))))
    ?5=v51[1]
    zf=(zerop[1] (add[32] (add[32] v36[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))
    tf=v54[1]
    if=v55[1]
    df=v56[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))))
    iopl0=v58[1]
    iopl1=v59[1]
    nt=v60[1]
    ?15=v61[1]
    ip=134513358[32]
    memory:
        (add[32] v36[32] -4[32]): v37[32] 4 bytes
    ip = 134513358[32]
0x80482ce:call   0x08048364
    ax=v32[32]
    cx=v33[32]
    dx=v34[32]
    bx=v35[32]
    sp=(add[32] (add[32] (add[32] v36[32] -4[32]) -8[32]) -4[32])
    bp=(add[32] v36[32] -4[32])
    si=v38[32]
    di=v39[32]
    es=v40[16]
    cs=v41[16]
    ss=v42[16]
    ds=v43[16]
    fs=v44[16]
    gs=v45[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))))
    ?1=v47[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v36[32] -4[32]) -8[32])))))))
    ?3=v49[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))))
    ?5=v51[1]
    zf=(zerop[1] (add[32] (add[32] v36[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v36[32] -4[32]) -8[32]))
    tf=v54[1]
    if=v55[1]
    df=v56[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v36[32] -4[32])) 4294967288[33]))))))
    iopl0=v58[1]
    iopl1=v59[1]
    nt=v60[1]
    ?15=v61[1]
    ip=134513508[32]
    memory:
        (add[32] v36[32] -4[32]): v37[32] 4 bytes
        (add[32] (add[32] (add[32] v36[32] -4[32]) -8[32]) -4[32]): 134513363[32] 4 bytes
    ip = 134513508[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax=v94[32]
    cx=v95[32]
    dx=v96[32]
    bx=v97[32]
    sp=(add[32] v98[32] -4[32])
    bp=v99[32]
    si=v100[32]
    di=v101[32]
    es=v102[16]
    cs=v103[16]
    ss=v104[16]
    ds=v105[16]
    fs=v106[16]
    gs=v107[16]
    cf=v108[1]
    ?1=v109[1]
    pf=v110[1]
    ?3=v111[1]
    af=v112[1]
    ?5=v113[1]
    zf=v114[1]
    sf=v115[1]
    tf=v116[1]
    if=v117[1]
    df=v118[1]
    of=v119[1]
    iopl0=v120[1]
    iopl1=v121[1]
    nt=v122[1]
    ?15=v123[1]
    ip=134513616[32]
    memory:
        (add[32] v98[32] -4[32]): 134513368[32] 4 bytes
    ip = 134513616[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax=v156[32]
    cx=v157[32]
    dx=v158[32]
    bx=v159[32]
    sp=(add[32] v160[32] -4[32])
    bp=v161[32]
    si=v162[32]
    di=v163[32]
    es=v164[16]
    cs=v165[16]
    ss=v166[16]
    ds=v167[16]
    fs=v168[16]
    gs=v169[16]
    cf=v170[1]
    ?1=v171[1]
    pf=v172[1]
    ?3=v173[1]
    af=v174[1]
    ?5=v175[1]
    zf=v176[1]
    sf=v177[1]
    tf=v178[1]
    if=v179[1]
    df=v180[1]
    of=v181[1]
    iopl0=v182[1]
    iopl1=v183[1]
    nt=v184[1]
    ?15=v185[1]
    ip=134514048[32]
    memory:
        (add[32] v160[32] -4[32]): 134513373[32] 4 bytes
    ip = 134514048[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax=v218[32]
    cx=v219[32]
    dx=v220[32]
    bx=v221[32]
    sp=(add[32] v223[32] 4[32])
    bp=v248[32]
    si=v224[32]
    di=v225[32]
    es=v226[16]
    cs=v227[16]
    ss=v228[16]
    ds=v229[16]
    fs=v230[16]
    gs=v231[16]
    cf=v232[1]
    ?1=v233[1]
    pf=v234[1]
    ?3=v235[1]
    af=v236[1]
    ?5=v237[1]
    zf=v238[1]
    sf=v239[1]
    tf=v240[1]
    if=v241[1]
    df=v242[1]
    of=v243[1]
    iopl0=v244[1]
    iopl1=v245[1]
    nt=v246[1]
    ?15=v247[1]
    ip=134513374[32]
    memory:
        v223[32]: v248[32] 4 bytes read-only
    ip = 134513374[32]
0x80482de:ret    
    ax=v218[32]
    cx=v219[32]
    dx=v220[32]
    bx=v221[32]
    sp=(add[32] (add[32] v223[32] 4[32]) 4[32])
    bp=v248[32]
    si=v224[32]
    di=v225[32]
    es=v226[16]
    cs=v227[16]
    ss=v228[16]
    ds=v229[16]
    fs=v230[16]
    gs=v231[16]
    cf=v232[1]
    ?1=v233[1]
    pf=v234[1]
    ?3=v235[1]
    af=v236[1]
    ?5=v237[1]
    zf=v238[1]
    sf=v239[1]
    tf=v240[1]
    if=v241[1]
    df=v242[1]
    of=v243[1]
    iopl0=v244[1]
    iopl1=v245[1]
    nt=v246[1]
    ?15=v247[1]
    ip=v249[32]
    memory:
        v223[32]: v248[32] 4 bytes read-only
        (add[32] v223[32] 4[32]): v249[32] 4 bytes read-only
    ip = v249[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax=v282[32]
    cx=v283[32]
    dx=v284[32]
    bx=v285[32]
    sp=v286[32]
    bp=v287[32]
    si=v288[32]
    di=v289[32]
    es=v290[16]
    cs=v291[16]
    ss=v292[16]
    ds=v293[16]
    fs=v294[16]
    gs=v295[16]
    cf=v296[1]
    ?1=v297[1]
    pf=v298[1]
    ?3=v299[1]
    af=v300[1]
    ?5=v301[1]
    zf=v302[1]
    sf=v303[1]
    tf=v304[1]
    if=v305[1]
    df=v306[1]
    of=v307[1]
    iopl0=v308[1]
    iopl1=v309[1]
    nt=v310[1]
    ?15=v311[1]
    ip=v312[32]
    memory:
        134518484[32]: v312[32] 4 bytes read-only
    ip = v312[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax=v345[32]
    cx=v346[32]
    dx=v347[32]
    bx=v348[32]
    sp=v349[32]
    bp=v350[32]
    si=v351[32]
    di=v352[32]
    es=v353[16]
    cs=v354[16]
    ss=v355[16]
    ds=v356[16]
    fs=v357[16]
    gs=v358[16]
    cf=v359[1]
    ?1=v360[1]
    pf=v361[1]
    ?3=v362[1]
    af=v363[1]
    ?5=v364[1]
    zf=v365[1]
    sf=v366[1]
    tf=v367[1]
    if=v368[1]
    df=v369[1]
    of=v370[1]
    iopl0=v371[1]
    iopl1=v372[1]
    nt=v373[1]
    ?15=v374[1]
    ip=v375[32]
    memory:
        134518488[32]: v375[32] 4 bytes read-only
    ip = v375[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax=v408[32]
    cx=v409[32]
    dx=v410[32]
    bx=v411[32]
    sp=v412[32]
    bp=v413[32]
    si=v414[32]
    di=v415[32]
    es=v416[16]
    cs=v417[16]
    ss=v418[16]
    ds=v419[16]
    fs=v420[16]
    gs=v421[16]
    cf=v422[1]
    ?1=v423[1]
    pf=v424[1]
    ?3=v425[1]
    af=v426[1]
    ?5=v427[1]
    zf=v428[1]
    sf=v429[1]
    tf=v430[1]
    if=v431[1]
    df=v432[1]
    of=v433[1]
    iopl0=v434[1]
    iopl1=v435[1]
    nt=v436[1]
    ?15=v437[1]
    ip=v438[32]
    memory:
        134518492[32]: v438[32] 4 bytes read-only
    ip = v438[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax=v471[32]
    cx=v472[32]
    dx=v473[32]
    bx=v474[32]
    sp=v475[32]
    bp=v476[32]
    si=v477[32]
    di=v478[32]
    es=v479[16]
    cs=v480[16]
    ss=v481[16]
    ds=v482[16]
    fs=v483[16]
    gs=v484[16]
    cf=v485[1]
    ?1=v486[1]
    pf=v487[1]
    ?3=v488[1]
    af=v489[1]
    ?5=v490[1]
    zf=v491[1]
    sf=v492[1]
    tf=v493[1]
    if=v494[1]
    df=v495[1]
    of=v496[1]
    iopl0=v497[1]
    iopl1=v498[1]
    nt=v499[1]
    ?15=v500[1]
    ip=v501[32]
    memory:
        134518496[32]: v501[32] 4 bytes read-only
    ip = v501[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax=v534[32]
    cx=v535[32]
    dx=v536[32]
    bx=v537[32]
    sp=v538[32]
    bp=v539[32]
    si=v540[32]
    di=v541[32]
    es=v542[16]
    cs=v543[16]
    ss=v544[16]
    ds=v545[16]
    fs=v546[16]
    gs=v547[16]
    cf=v548[1]
    ?1=v549[1]
    pf=v550[1]
    ?3=v551[1]
    af=v552[1]
    ?5=v553[1]
    zf=v554[1]
    sf=v555[1]
    tf=v556[1]
    if=v557[1]
    df=v558[1]
    of=v559[1]
    iopl0=v560[1]
    iopl1=v561[1]
    nt=v562[1]
    ?15=v563[1]
    ip=v564[32]
    memory:
        134518500[32]: v564[32] 4 bytes read-only
    ip = v564[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax=v597[32]
    cx=v598[32]
    dx=v599[32]
    bx=v600[32]
    sp=v601[32]
    bp=(bv-xor[32] v602[32] v602[32])
    si=v603[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))))))
    ?3=v614[1]
    af=v627[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-xor[32] v602[32] v602[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] v602[32] v602[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513474[32]
    memory:
    ip = 134513474[32]
0x8048342:pop    esi
    ax=v597[32]
    cx=v598[32]
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] v601[32] 4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))))))
    ?3=v614[1]
    af=v627[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-xor[32] v602[32] v602[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] v602[32] v602[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513475[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only
    ip = 134513475[32]
0x8048343:mov    ecx, esp
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] v601[32] 4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] v602[32] v602[32])))))))
    ?3=v614[1]
    af=v627[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-xor[32] v602[32] v602[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] v602[32] v602[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513477[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only
    ip = 134513477[32]
0x8048345:and    esp, 0xf0<-0x10>
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(bv-and[32] (add[32] v601[32] 4[32]) -16[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513480[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only
    ip = 134513480[32]
0x8048348:push   eax
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513481[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
    ip = 134513481[32]
0x8048349:push   esp
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513482[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) 4 bytes
    ip = 134513482[32]
0x804834a:push   edx
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513483[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): v599[32] 4 bytes
    ip = 134513483[32]
0x804834b:push   0x08048520
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513488[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): v599[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
    ip = 134513488[32]
0x8048350:push   0x080484b0
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513493[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): v599[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
    ip = 134513493[32]
0x8048355:push   ecx
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513494[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): v599[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): (add[32] v601[32] 4[32]) 4 bytes
    ip = 134513494[32]
0x8048356:push   esi
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513495[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): v599[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): (add[32] v601[32] 4[32]) 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): v628[32] 4 bytes
    ip = 134513495[32]
0x8048357:push   0x08048410
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513500[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): v599[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): (add[32] v601[32] 4[32]) 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): v628[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513680[32] 4 bytes
    ip = 134513500[32]
0x804835c:call   0x08048310
    ax=v597[32]
    cx=(add[32] v601[32] 4[32])
    dx=v599[32]
    bx=v600[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32])
    bp=(bv-xor[32] v602[32] v602[32])
    si=v628[32]
    di=v604[32]
    es=v605[16]
    cs=v606[16]
    ss=v607[16]
    ds=v608[16]
    fs=v609[16]
    gs=v610[16]
    cf=0[1]
    ?1=v612[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32])))))))
    ?3=v614[1]
    af=v629[1]
    ?5=v616[1]
    zf=(zerop[1] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]))
    tf=v619[1]
    if=v620[1]
    df=v621[1]
    of=0[1]
    iopl0=v623[1]
    iopl1=v624[1]
    nt=v625[1]
    ?15=v626[1]
    ip=134513424[32]
    memory:
        v601[32]: v628[32] 4 bytes read-only clobbered
        (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]): v597[32] 4 bytes
        (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]): (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) 4 bytes
        (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]): v599[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513952[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513840[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): (add[32] v601[32] 4[32]) 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): v628[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513680[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] (bv-and[32] (add[32] v601[32] 4[32]) -16[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]) -4[32]): 134513505[32] 4 bytes
    ip = 134513424[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax=v662[32]
    cx=v663[32]
    dx=v664[32]
    bx=v665[32]
    sp=v666[32]
    bp=v667[32]
    si=v668[32]
    di=v669[32]
    es=v670[16]
    cs=v671[16]
    ss=v672[16]
    ds=v673[16]
    fs=v674[16]
    gs=v675[16]
    cf=v676[1]
    ?1=v677[1]
    pf=v678[1]
    ?3=v679[1]
    af=v680[1]
    ?5=v681[1]
    zf=v682[1]
    sf=v683[1]
    tf=v684[1]
    if=v685[1]
    df=v686[1]
    of=v687[1]
    iopl0=v688[1]
    iopl1=v689[1]
    nt=v690[1]
    ?15=v691[1]
    ip=134513505[32]
    memory:
    ip = 134513505[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048362:nop    
    ax=v724[32]
    cx=v725[32]
    dx=v726[32]
    bx=v727[32]
    sp=v728[32]
    bp=v729[32]
    si=v730[32]
    di=v731[32]
    es=v732[16]
    cs=v733[16]
    ss=v734[16]
    ds=v735[16]
    fs=v736[16]
    gs=v737[16]
    cf=v738[1]
    ?1=v739[1]
    pf=v740[1]
    ?3=v741[1]
    af=v742[1]
    ?5=v743[1]
    zf=v744[1]
    sf=v745[1]
    tf=v746[1]
    if=v747[1]
    df=v748[1]
    of=v749[1]
    iopl0=v750[1]
    iopl1=v751[1]
    nt=v752[1]
    ?15=v753[1]
    ip=134513507[32]
    memory:
    ip = 134513507[32]
0x8048363:nop    
    ax=v724[32]
    cx=v725[32]
    dx=v726[32]
    bx=v727[32]
    sp=v728[32]
    bp=v729[32]
    si=v730[32]
    di=v731[32]
    es=v732[16]
    cs=v733[16]
    ss=v734[16]
    ds=v735[16]
    fs=v736[16]
    gs=v737[16]
    cf=v738[1]
    ?1=v739[1]
    pf=v740[1]
    ?3=v741[1]
    af=v742[1]
    ?5=v743[1]
    zf=v744[1]
    sf=v745[1]
    tf=v746[1]
    if=v747[1]
    df=v748[1]
    of=v749[1]
    iopl0=v750[1]
    iopl1=v751[1]
    nt=v752[1]
    ?15=v753[1]
    ip=134513508[32]
    memory:
    ip = 134513508[32]
0x8048364:push   ebp
    ax=v724[32]
    cx=v725[32]
    dx=v726[32]
    bx=v727[32]
    sp=(add[32] v728[32] -4[32])
    bp=v729[32]
    si=v730[32]
    di=v731[32]
    es=v732[16]
    cs=v733[16]
    ss=v734[16]
    ds=v735[16]
    fs=v736[16]
    gs=v737[16]
    cf=v738[1]
    ?1=v739[1]
    pf=v740[1]
    ?3=v741[1]
    af=v742[1]
    ?5=v743[1]
    zf=v744[1]
    sf=v745[1]
    tf=v746[1]
    if=v747[1]
    df=v748[1]
    of=v749[1]
    iopl0=v750[1]
    iopl1=v751[1]
    nt=v752[1]
    ?15=v753[1]
    ip=134513509[32]
    memory:
        (add[32] v728[32] -4[32]): v729[32] 4 bytes
    ip = 134513509[32]
0x8048365:mov    ebp, esp
    ax=v724[32]
    cx=v725[32]
    dx=v726[32]
    bx=v727[32]
    sp=(add[32] v728[32] -4[32])
    bp=(add[32] v728[32] -4[32])
    si=v730[32]
    di=v731[32]
    es=v732[16]
    cs=v733[16]
    ss=v734[16]
    ds=v735[16]
    fs=v736[16]
    gs=v737[16]
    cf=v738[1]
    ?1=v739[1]
    pf=v740[1]
    ?3=v741[1]
    af=v742[1]
    ?5=v743[1]
    zf=v744[1]
    sf=v745[1]
    tf=v746[1]
    if=v747[1]
    df=v748[1]
    of=v749[1]
    iopl0=v750[1]
    iopl1=v751[1]
    nt=v752[1]
    ?15=v753[1]
    ip=134513511[32]
    memory:
        (add[32] v728[32] -4[32]): v729[32] 4 bytes
    ip = 134513511[32]
0x8048367:push   ebx
    ax=v724[32]
    cx=v725[32]
    dx=v726[32]
    bx=v727[32]
    sp=(add[32] (add[32] v728[32] -4[32]) -4[32])
    bp=(add[32] v728[32] -4[32])
    si=v730[32]
    di=v731[32]
    es=v732[16]
    cs=v733[16]
    ss=v734[16]
    ds=v735[16]
    fs=v736[16]
    gs=v737[16]
    cf=v738[1]
    ?1=v739[1]
    pf=v740[1]
    ?3=v741[1]
    af=v742[1]
    ?5=v743[1]
    zf=v744[1]
    sf=v745[1]
    tf=v746[1]
    if=v747[1]
    df=v748[1]
    of=v749[1]
    iopl0=v750[1]
    iopl1=v751[1]
    nt=v752[1]
    ?15=v753[1]
    ip=134513512[32]
    memory:
        (add[32] v728[32] -4[32]): v729[32] 4 bytes
        (add[32] (add[32] v728[32] -4[32]) -4[32]): v727[32] 4 bytes
    ip = 134513512[32]
0x8048368:push   ecx
    ax=v724[32]
    cx=v725[32]
    dx=v726[32]
    bx=v727[32]
    sp=(add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v728[32] -4[32])
    si=v730[32]
    di=v731[32]
    es=v732[16]
    cs=v733[16]
    ss=v734[16]
    ds=v735[16]
    fs=v736[16]
    gs=v737[16]
    cf=v738[1]
    ?1=v739[1]
    pf=v740[1]
    ?3=v741[1]
    af=v742[1]
    ?5=v743[1]
    zf=v744[1]
    sf=v745[1]
    tf=v746[1]
    if=v747[1]
    df=v748[1]
    of=v749[1]
    iopl0=v750[1]
    iopl1=v751[1]
    nt=v752[1]
    ?15=v753[1]
    ip=134513513[32]
    memory:
        (add[32] v728[32] -4[32]): v729[32] 4 bytes
        (add[32] (add[32] v728[32] -4[32]) -4[32]): v727[32] 4 bytes
        (add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]): v725[32] 4 bytes
    ip = 134513513[32]
0x8048369:call   0x0804836e
    ax=v724[32]
    cx=v725[32]
    dx=v726[32]
    bx=v727[32]
    sp=(add[32] (add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]) -4[32])
    bp=(add[32] v728[32] -4[32])
    si=v730[32]
    di=v731[32]
    es=v732[16]
    cs=v733[16]
    ss=v734[16]
    ds=v735[16]
    fs=v736[16]
    gs=v737[16]
    cf=v738[1]
    ?1=v739[1]
    pf=v740[1]
    ?3=v741[1]
    af=v742[1]
    ?5=v743[1]
    zf=v744[1]
    sf=v745[1]
    tf=v746[1]
    if=v747[1]
    df=v748[1]
    of=v749[1]
    iopl0=v750[1]
    iopl1=v751[1]
    nt=v752[1]
    ?15=v753[1]
    ip=134513518[32]
    memory:
        (add[32] v728[32] -4[32]): v729[32] 4 bytes
        (add[32] (add[32] v728[32] -4[32]) -4[32]): v727[32] 4 bytes
        (add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]): v725[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] v728[32] -4[32]) -4[32]) -4[32]) -4[32]): 134513518[32] 4 bytes
    ip = 134513518[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax=v786[32]
    cx=v787[32]
    dx=v788[32]
    bx=v816[32]
    sp=(add[32] v790[32] 4[32])
    bp=v791[32]
    si=v792[32]
    di=v793[32]
    es=v794[16]
    cs=v795[16]
    ss=v796[16]
    ds=v797[16]
    fs=v798[16]
    gs=v799[16]
    cf=v800[1]
    ?1=v801[1]
    pf=v802[1]
    ?3=v803[1]
    af=v804[1]
    ?5=v805[1]
    zf=v806[1]
    sf=v807[1]
    tf=v808[1]
    if=v809[1]
    df=v810[1]
    of=v811[1]
    iopl0=v812[1]
    iopl1=v813[1]
    nt=v814[1]
    ?15=v815[1]
    ip=134513519[32]
    memory:
        v790[32]: v816[32] 4 bytes read-only
    ip = 134513519[32]
0x804836f:add    ebx, 0x0000135a
    ax=v786[32]
    cx=v787[32]
    dx=v788[32]
    bx=(add[32] v816[32] 4954[32])
    sp=(add[32] v790[32] 4[32])
    bp=v791[32]
    si=v792[32]
    di=v793[32]
    es=v794[16]
    cs=v795[16]
    ss=v796[16]
    ds=v797[16]
    fs=v798[16]
    gs=v799[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33])))))
    ?1=v801[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))))))
    ?3=v803[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33])))))
    ?5=v805[1]
    zf=(zerop[1] (add[32] v816[32] 4954[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v816[32] 4954[32]))
    tf=v808[1]
    if=v809[1]
    df=v810[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))))
    iopl0=v812[1]
    iopl1=v813[1]
    nt=v814[1]
    ?15=v815[1]
    ip=134513525[32]
    memory:
        v790[32]: v816[32] 4 bytes read-only
    ip = 134513525[32]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax=v786[32]
    cx=v787[32]
    dx=v817[32]
    bx=(add[32] v816[32] 4954[32])
    sp=(add[32] v790[32] 4[32])
    bp=v791[32]
    si=v792[32]
    di=v793[32]
    es=v794[16]
    cs=v795[16]
    ss=v796[16]
    ds=v797[16]
    fs=v798[16]
    gs=v799[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33])))))
    ?1=v801[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v816[32] 4954[32])))))))
    ?3=v803[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33])))))
    ?5=v805[1]
    zf=(zerop[1] (add[32] v816[32] 4954[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v816[32] 4954[32]))
    tf=v808[1]
    if=v809[1]
    df=v810[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v816[32]) (bv-xor[33] 4954[33] (add[33] (uextend[33] 33[32] v816[32]) 4954[33]))))))
    iopl0=v812[1]
    iopl1=v813[1]
    nt=v814[1]
    ?15=v815[1]
    ip=134513531[32]
    memory:
        v790[32]: v816[32] 4 bytes read-only
        (add[32] (add[32] v816[32] 4954[32]) -4[32]): v817[32] 4 bytes read-only
    ip = 134513531[32]
0x804837b:test   edx, edx
    ax=v786[32]
    cx=v787[32]
    dx=v817[32]
    bx=(add[32] v816[32] 4954[32])
    sp=(add[32] v790[32] 4[32])
    bp=v791[32]
    si=v792[32]
    di=v793[32]
    es=v794[16]
    cs=v795[16]
    ss=v796[16]
    ds=v797[16]
    fs=v798[16]
    gs=v799[16]
    cf=0[1]
    ?1=v801[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))))))
    ?3=v803[1]
    af=v818[1]
    ?5=v805[1]
    zf=(zerop[1] (bv-and[32] v817[32] v817[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] v817[32] v817[32]))
    tf=v808[1]
    if=v809[1]
    df=v810[1]
    of=0[1]
    iopl0=v812[1]
    iopl1=v813[1]
    nt=v814[1]
    ?15=v815[1]
    ip=134513533[32]
    memory:
        v790[32]: v816[32] 4 bytes read-only
        (add[32] (add[32] v816[32] 4954[32]) -4[32]): v817[32] 4 bytes read-only
    ip = 134513533[32]
0x804837d:je     0x08048384
    ax=v786[32]
    cx=v787[32]
    dx=v817[32]
    bx=(add[32] v816[32] 4954[32])
    sp=(add[32] v790[32] 4[32])
    bp=v791[32]
    si=v792[32]
    di=v793[32]
    es=v794[16]
    cs=v795[16]
    ss=v796[16]
    ds=v797[16]
    fs=v798[16]
    gs=v799[16]
    cf=0[1]
    ?1=v801[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v817[32] v817[32])))))))
    ?3=v803[1]
    af=v818[1]
    ?5=v805[1]
    zf=(zerop[1] (bv-and[32] v817[32] v817[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] v817[32] v817[32]))
    tf=v808[1]
    if=v809[1]
    df=v810[1]
    of=0[1]
    iopl0=v812[1]
    iopl1=v813[1]
    nt=v814[1]
    ?15=v815[1]
    ip=(ite[32] (zerop[1] (bv-and[32] v817[32] v817[32])) 134513540[32] 134513535[32])
    memory:
        v790[32]: v816[32] 4 bytes read-only
        (add[32] (add[32] v816[32] 4954[32]) -4[32]): v817[32] 4 bytes read-only
    ip = (ite[32] (zerop[1] (bv-and[32] v817[32] v817[32])) 134513540[32] 134513535[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax=v851[32]
    cx=v852[32]
    dx=v853[32]
    bx=v854[32]
    sp=(add[32] v855[32] -4[32])
    bp=v856[32]
    si=v857[32]
    di=v858[32]
    es=v859[16]
    cs=v860[16]
    ss=v861[16]
    ds=v862[16]
    fs=v863[16]
    gs=v864[16]
    cf=v865[1]
    ?1=v866[1]
    pf=v867[1]
    ?3=v868[1]
    af=v869[1]
    ?5=v870[1]
    zf=v871[1]
    sf=v872[1]
    tf=v873[1]
    if=v874[1]
    df=v875[1]
    of=v876[1]
    iopl0=v877[1]
    iopl1=v878[1]
    nt=v879[1]
    ?15=v880[1]
    ip=134513456[32]
    memory:
        (add[32] v855[32] -4[32]): 134513540[32] 4 bytes
    ip = 134513456[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax=v943[32]
    cx=v914[32]
    dx=v915[32]
    bx=v916[32]
    sp=(add[32] v917[32] 4[32])
    bp=v918[32]
    si=v919[32]
    di=v920[32]
    es=v921[16]
    cs=v922[16]
    ss=v923[16]
    ds=v924[16]
    fs=v925[16]
    gs=v926[16]
    cf=v927[1]
    ?1=v928[1]
    pf=v929[1]
    ?3=v930[1]
    af=v931[1]
    ?5=v932[1]
    zf=v933[1]
    sf=v934[1]
    tf=v935[1]
    if=v936[1]
    df=v937[1]
    of=v938[1]
    iopl0=v939[1]
    iopl1=v940[1]
    nt=v941[1]
    ?15=v942[1]
    ip=134513541[32]
    memory:
        v917[32]: v943[32] 4 bytes read-only
    ip = 134513541[32]
0x8048385:pop    ebx
    ax=v943[32]
    cx=v914[32]
    dx=v915[32]
    bx=v944[32]
    sp=(add[32] (add[32] v917[32] 4[32]) 4[32])
    bp=v918[32]
    si=v919[32]
    di=v920[32]
    es=v921[16]
    cs=v922[16]
    ss=v923[16]
    ds=v924[16]
    fs=v925[16]
    gs=v926[16]
    cf=v927[1]
    ?1=v928[1]
    pf=v929[1]
    ?3=v930[1]
    af=v931[1]
    ?5=v932[1]
    zf=v933[1]
    sf=v934[1]
    tf=v935[1]
    if=v936[1]
    df=v937[1]
    of=v938[1]
    iopl0=v939[1]
    iopl1=v940[1]
    nt=v941[1]
    ?15=v942[1]
    ip=134513542[32]
    memory:
        v917[32]: v943[32] 4 bytes read-only
        (add[32] v917[32] 4[32]): v944[32] 4 bytes read-only
    ip = 134513542[32]
0x8048386:leave  
    ax=v943[32]
    cx=v914[32]
    dx=v915[32]
    bx=v944[32]
    sp=(add[32] v918[32] 4[32])
    bp=v945[32]
    si=v919[32]
    di=v920[32]
    es=v921[16]
    cs=v922[16]
    ss=v923[16]
    ds=v924[16]
    fs=v925[16]
    gs=v926[16]
    cf=v927[1]
    ?1=v928[1]
    pf=v929[1]
    ?3=v930[1]
    af=v931[1]
    ?5=v932[1]
    zf=v933[1]
    sf=v934[1]
    tf=v935[1]
    if=v936[1]
    df=v937[1]
    of=v938[1]
    iopl0=v939[1]
    iopl1=v940[1]
    nt=v941[1]
    ?15=v942[1]
    ip=134513543[32]
    memory:
        v917[32]: v943[32] 4 bytes read-only
        (add[32] v917[32] 4[32]): v944[32] 4 bytes read-only
        v918[32]: v945[32] 4 bytes read-only
    ip = 134513543[32]
0x8048387:ret    
    ax=v943[32]
    cx=v914[32]
    dx=v915[32]
    bx=v944[32]
    sp=(add[32] (add[32] v918[32] 4[32]) 4[32])
    bp=v945[32]
    si=v919[32]
    di=v920[32]
    es=v921[16]
    cs=v922[16]
    ss=v923[16]
    ds=v924[16]
    fs=v925[16]
    gs=v926[16]
    cf=v927[1]
    ?1=v928[1]
    pf=v929[1]
    ?3=v930[1]
    af=v931[1]
    ?5=v932[1]
    zf=v933[1]
    sf=v934[1]
    tf=v935[1]
    if=v936[1]
    df=v937[1]
    of=v938[1]
    iopl0=v939[1]
    iopl1=v940[1]
    nt=v941[1]
    ?15=v942[1]
    ip=v946[32]
    memory:
        v917[32]: v943[32] 4 bytes read-only
        (add[32] v917[32] 4[32]): v944[32] 4 bytes read-only
        v918[32]: v945[32] 4 bytes read-only
        (add[32] v918[32] 4[32]): v946[32] 4 bytes read-only
    ip = v946[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048388:nop    
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=v983[32]
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513545[32]
    memory:
    ip = 134513545[32]
0x8048389:nop    
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=v983[32]
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513546[32]
    memory:
    ip = 134513546[32]
0x804838a:nop    
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=v983[32]
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513547[32]
    memory:
    ip = 134513547[32]
0x804838b:nop    
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=v983[32]
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513548[32]
    memory:
    ip = 134513548[32]
0x804838c:nop    
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=v983[32]
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513549[32]
    memory:
    ip = 134513549[32]
0x804838d:nop    
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=v983[32]
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513550[32]
    memory:
    ip = 134513550[32]
0x804838e:nop    
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=v983[32]
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513551[32]
    memory:
    ip = 134513551[32]
0x804838f:nop    
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=v983[32]
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513552[32]
    memory:
    ip = 134513552[32]
0x8048390:push   ebp
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=(add[32] v983[32] -4[32])
    bp=v984[32]
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513553[32]
    memory:
        (add[32] v983[32] -4[32]): v984[32] 4 bytes
    ip = 134513553[32]
0x8048391:mov    ebp, esp
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=(add[32] v983[32] -4[32])
    bp=(add[32] v983[32] -4[32])
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=v993[1]
    ?1=v994[1]
    pf=v995[1]
    ?3=v996[1]
    af=v997[1]
    ?5=v998[1]
    zf=v999[1]
    sf=v1000[1]
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=v1004[1]
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513555[32]
    memory:
        (add[32] v983[32] -4[32]): v984[32] 4 bytes
    ip = 134513555[32]
0x8048393:sub    esp, 0x08
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=(add[32] (add[32] v983[32] -4[32]) -8[32])
    bp=(add[32] v983[32] -4[32])
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) 4294967288[33]))))))
    ?1=v994[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v983[32] -4[32]) -8[32])))))))
    ?3=v996[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) 4294967288[33]))))))
    ?5=v998[1]
    zf=(zerop[1] (add[32] (add[32] v983[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v983[32] -4[32]) -8[32]))
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v983[32] -4[32])) 4294967288[33]))))))
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513558[32]
    memory:
        (add[32] v983[32] -4[32]): v984[32] 4 bytes
    ip = 134513558[32]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=(add[32] (add[32] v983[32] -4[32]) -8[32])
    bp=(add[32] v983[32] -4[32])
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9]))))))
    ?1=v994[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] v1009[32]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] v1009[32])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] v1009[32]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v1009[32]))))))
    ?3=v996[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9]))))))
    ?5=v998[1]
    zf=(zerop[1] (extract[8] 0[32] 8[32] v1009[32]))
    sf=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v1009[32]))
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9]))))))
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=134513565[32]
    memory:
        (add[32] v983[32] -4[32]): v984[32] 4 bytes
        134518516[32]: v1009[32] 1 byte read-only
    ip = 134513565[32]
0x804839d:jne    0x080483cc
    ax=v979[32]
    cx=v980[32]
    dx=v981[32]
    bx=v982[32]
    sp=(add[32] (add[32] v983[32] -4[32]) -8[32])
    bp=(add[32] v983[32] -4[32])
    si=v985[32]
    di=v986[32]
    es=v987[16]
    cs=v988[16]
    ss=v989[16]
    ds=v990[16]
    fs=v991[16]
    gs=v992[16]
    cf=(invert[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9]))))))
    ?1=v994[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] v1009[32]))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] v1009[32])))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] v1009[32]))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] v1009[32])) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v1009[32]))))))
    ?3=v996[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9]))))))
    ?5=v998[1]
    zf=(zerop[1] (extract[8] 0[32] 8[32] v1009[32]))
    sf=(extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] v1009[32]))
    tf=v1001[1]
    if=v1002[1]
    df=v1003[1]
    of=(bv-xor[1] (extract[1] 7[32] 8[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9]))))) (extract[1] 6[32] 7[32] (extract[8] 1[32] 9[32] (bv-xor[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) (bv-xor[9] 255[9] (add[9] (uextend[9] 9[32] (extract[8] 0[32] 8[32] v1009[32])) -256[9]))))))
    iopl0=v1005[1]
    iopl1=v1006[1]
    nt=v1007[1]
    ?15=v1008[1]
    ip=(ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] v1009[32]))) 134513612[32] 134513567[32])
    memory:
        (add[32] v983[32] -4[32]): v984[32] 4 bytes
        134518516[32]: v1009[32] 1 byte read-only
    ip = (ite[32] (invert[1] (zerop[1] (extract[8] 0[32] 8[32] v1009[32]))) 134513612[32] 134513567[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax=v1072[32]
    cx=v1043[32]
    dx=v1044[32]
    bx=v1045[32]
    sp=v1046[32]
    bp=v1047[32]
    si=v1048[32]
    di=v1049[32]
    es=v1050[16]
    cs=v1051[16]
    ss=v1052[16]
    ds=v1053[16]
    fs=v1054[16]
    gs=v1055[16]
    cf=v1056[1]
    ?1=v1057[1]
    pf=v1058[1]
    ?3=v1059[1]
    af=v1060[1]
    ?5=v1061[1]
    zf=v1062[1]
    sf=v1063[1]
    tf=v1064[1]
    if=v1065[1]
    df=v1066[1]
    of=v1067[1]
    iopl0=v1068[1]
    iopl1=v1069[1]
    nt=v1070[1]
    ?15=v1071[1]
    ip=134513572[32]
    memory:
        134518512[32]: v1072[32] 4 bytes read-only
    ip = 134513572[32]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax=v1072[32]
    cx=v1043[32]
    dx=v1073[32]
    bx=v1045[32]
    sp=v1046[32]
    bp=v1047[32]
    si=v1048[32]
    di=v1049[32]
    es=v1050[16]
    cs=v1051[16]
    ss=v1052[16]
    ds=v1053[16]
    fs=v1054[16]
    gs=v1055[16]
    cf=v1056[1]
    ?1=v1057[1]
    pf=v1058[1]
    ?3=v1059[1]
    af=v1060[1]
    ?5=v1061[1]
    zf=v1062[1]
    sf=v1063[1]
    tf=v1064[1]
    if=v1065[1]
    df=v1066[1]
    of=v1067[1]
    iopl0=v1068[1]
    iopl1=v1069[1]
    nt=v1070[1]
    ?15=v1071[1]
    ip=134513574[32]
    memory:
        134518512[32]: v1072[32] 4 bytes read-only
        v1072[32]: v1073[32] 4 bytes read-only
    ip = 134513574[32]
0x80483a6:test   edx, edx
    ax=v1072[32]
    cx=v1043[32]
    dx=v1073[32]
    bx=v1045[32]
    sp=v1046[32]
    bp=v1047[32]
    si=v1048[32]
    di=v1049[32]
    es=v1050[16]
    cs=v1051[16]
    ss=v1052[16]
    ds=v1053[16]
    fs=v1054[16]
    gs=v1055[16]
    cf=0[1]
    ?1=v1057[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))))))
    ?3=v1059[1]
    af=v1074[1]
    ?5=v1061[1]
    zf=(zerop[1] (bv-and[32] v1073[32] v1073[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] v1073[32] v1073[32]))
    tf=v1064[1]
    if=v1065[1]
    df=v1066[1]
    of=0[1]
    iopl0=v1068[1]
    iopl1=v1069[1]
    nt=v1070[1]
    ?15=v1071[1]
    ip=134513576[32]
    memory:
        134518512[32]: v1072[32] 4 bytes read-only
        v1072[32]: v1073[32] 4 bytes read-only
    ip = 134513576[32]
0x80483a8:je     0x080483c5
    ax=v1072[32]
    cx=v1043[32]
    dx=v1073[32]
    bx=v1045[32]
    sp=v1046[32]
    bp=v1047[32]
    si=v1048[32]
    di=v1049[32]
    es=v1050[16]
    cs=v1051[16]
    ss=v1052[16]
    ds=v1053[16]
    fs=v1054[16]
    gs=v1055[16]
    cf=0[1]
    ?1=v1057[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1073[32] v1073[32])))))))
    ?3=v1059[1]
    af=v1074[1]
    ?5=v1061[1]
    zf=(zerop[1] (bv-and[32] v1073[32] v1073[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] v1073[32] v1073[32]))
    tf=v1064[1]
    if=v1065[1]
    df=v1066[1]
    of=0[1]
    iopl0=v1068[1]
    iopl1=v1069[1]
    nt=v1070[1]
    ?15=v1071[1]
    ip=(ite[32] (zerop[1] (bv-and[32] v1073[32] v1073[32])) 134513605[32] 134513578[32])
    memory:
        134518512[32]: v1072[32] 4 bytes read-only
        v1072[32]: v1073[32] 4 bytes read-only
    ip = (ite[32] (zerop[1] (bv-and[32] v1073[32] v1073[32])) 134513605[32] 134513578[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax=v1107[32]
    cx=v1108[32]
    dx=v1109[32]
    bx=v1110[32]
    sp=v1111[32]
    bp=v1112[32]
    si=v1113[32]
    di=v1114[32]
    es=v1115[16]
    cs=v1116[16]
    ss=v1117[16]
    ds=v1118[16]
    fs=v1119[16]
    gs=v1120[16]
    cf=v1121[1]
    ?1=v1122[1]
    pf=v1123[1]
    ?3=v1124[1]
    af=v1125[1]
    ?5=v1126[1]
    zf=v1127[1]
    sf=v1128[1]
    tf=v1129[1]
    if=v1130[1]
    df=v1131[1]
    of=v1132[1]
    iopl0=v1133[1]
    iopl1=v1134[1]
    nt=v1135[1]
    ?15=v1136[1]
    ip=134513584[32]
    memory:
    ip = 134513584[32]
0x80483b0:add    eax, 0x04
    ax=(add[32] v1107[32] 4[32])
    cx=v1108[32]
    dx=v1109[32]
    bx=v1110[32]
    sp=v1111[32]
    bp=v1112[32]
    si=v1113[32]
    di=v1114[32]
    es=v1115[16]
    cs=v1116[16]
    ss=v1117[16]
    ds=v1118[16]
    fs=v1119[16]
    gs=v1120[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))
    ?1=v1122[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))))))
    ?3=v1124[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))
    ?5=v1126[1]
    zf=(zerop[1] (add[32] v1107[32] 4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v1107[32] 4[32]))
    tf=v1129[1]
    if=v1130[1]
    df=v1131[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))))
    iopl0=v1133[1]
    iopl1=v1134[1]
    nt=v1135[1]
    ?15=v1136[1]
    ip=134513587[32]
    memory:
    ip = 134513587[32]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax=(add[32] v1107[32] 4[32])
    cx=v1108[32]
    dx=v1109[32]
    bx=v1110[32]
    sp=v1111[32]
    bp=v1112[32]
    si=v1113[32]
    di=v1114[32]
    es=v1115[16]
    cs=v1116[16]
    ss=v1117[16]
    ds=v1118[16]
    fs=v1119[16]
    gs=v1120[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))
    ?1=v1122[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))))))
    ?3=v1124[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))
    ?5=v1126[1]
    zf=(zerop[1] (add[32] v1107[32] 4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v1107[32] 4[32]))
    tf=v1129[1]
    if=v1130[1]
    df=v1131[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))))
    iopl0=v1133[1]
    iopl1=v1134[1]
    nt=v1135[1]
    ?15=v1136[1]
    ip=134513592[32]
    memory:
        134518512[32]: (add[32] v1107[32] 4[32]) 4 bytes
    ip = 134513592[32]
0x80483b8:call   edx
    ax=(add[32] v1107[32] 4[32])
    cx=v1108[32]
    dx=v1109[32]
    bx=v1110[32]
    sp=(add[32] v1111[32] -4[32])
    bp=v1112[32]
    si=v1113[32]
    di=v1114[32]
    es=v1115[16]
    cs=v1116[16]
    ss=v1117[16]
    ds=v1118[16]
    fs=v1119[16]
    gs=v1120[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))
    ?1=v1122[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1107[32] 4[32])))))))
    ?3=v1124[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33])))))
    ?5=v1126[1]
    zf=(zerop[1] (add[32] v1107[32] 4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v1107[32] 4[32]))
    tf=v1129[1]
    if=v1130[1]
    df=v1131[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1107[32]) (bv-xor[33] 4[33] (add[33] (uextend[33] 33[32] v1107[32]) 4[33]))))))
    iopl0=v1133[1]
    iopl1=v1134[1]
    nt=v1135[1]
    ?15=v1136[1]
    ip=v1109[32]
    memory:
        134518512[32]: (add[32] v1107[32] 4[32]) 4 bytes clobbered
        (add[32] v1111[32] -4[32]): 134513594[32] 4 bytes
    ip = v1109[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax=v1199[32]
    cx=v1170[32]
    dx=v1171[32]
    bx=v1172[32]
    sp=v1173[32]
    bp=v1174[32]
    si=v1175[32]
    di=v1176[32]
    es=v1177[16]
    cs=v1178[16]
    ss=v1179[16]
    ds=v1180[16]
    fs=v1181[16]
    gs=v1182[16]
    cf=v1183[1]
    ?1=v1184[1]
    pf=v1185[1]
    ?3=v1186[1]
    af=v1187[1]
    ?5=v1188[1]
    zf=v1189[1]
    sf=v1190[1]
    tf=v1191[1]
    if=v1192[1]
    df=v1193[1]
    of=v1194[1]
    iopl0=v1195[1]
    iopl1=v1196[1]
    nt=v1197[1]
    ?15=v1198[1]
    ip=134513599[32]
    memory:
        134518512[32]: v1199[32] 4 bytes read-only
    ip = 134513599[32]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax=v1199[32]
    cx=v1170[32]
    dx=v1200[32]
    bx=v1172[32]
    sp=v1173[32]
    bp=v1174[32]
    si=v1175[32]
    di=v1176[32]
    es=v1177[16]
    cs=v1178[16]
    ss=v1179[16]
    ds=v1180[16]
    fs=v1181[16]
    gs=v1182[16]
    cf=v1183[1]
    ?1=v1184[1]
    pf=v1185[1]
    ?3=v1186[1]
    af=v1187[1]
    ?5=v1188[1]
    zf=v1189[1]
    sf=v1190[1]
    tf=v1191[1]
    if=v1192[1]
    df=v1193[1]
    of=v1194[1]
    iopl0=v1195[1]
    iopl1=v1196[1]
    nt=v1197[1]
    ?15=v1198[1]
    ip=134513601[32]
    memory:
        134518512[32]: v1199[32] 4 bytes read-only
        v1199[32]: v1200[32] 4 bytes read-only
    ip = 134513601[32]
0x80483c1:test   edx, edx
    ax=v1199[32]
    cx=v1170[32]
    dx=v1200[32]
    bx=v1172[32]
    sp=v1173[32]
    bp=v1174[32]
    si=v1175[32]
    di=v1176[32]
    es=v1177[16]
    cs=v1178[16]
    ss=v1179[16]
    ds=v1180[16]
    fs=v1181[16]
    gs=v1182[16]
    cf=0[1]
    ?1=v1184[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))))))
    ?3=v1186[1]
    af=v1201[1]
    ?5=v1188[1]
    zf=(zerop[1] (bv-and[32] v1200[32] v1200[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] v1200[32] v1200[32]))
    tf=v1191[1]
    if=v1192[1]
    df=v1193[1]
    of=0[1]
    iopl0=v1195[1]
    iopl1=v1196[1]
    nt=v1197[1]
    ?15=v1198[1]
    ip=134513603[32]
    memory:
        134518512[32]: v1199[32] 4 bytes read-only
        v1199[32]: v1200[32] 4 bytes read-only
    ip = 134513603[32]
0x80483c3:jne    0x080483b0
    ax=v1199[32]
    cx=v1170[32]
    dx=v1200[32]
    bx=v1172[32]
    sp=v1173[32]
    bp=v1174[32]
    si=v1175[32]
    di=v1176[32]
    es=v1177[16]
    cs=v1178[16]
    ss=v1179[16]
    ds=v1180[16]
    fs=v1181[16]
    gs=v1182[16]
    cf=0[1]
    ?1=v1184[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1200[32] v1200[32])))))))
    ?3=v1186[1]
    af=v1201[1]
    ?5=v1188[1]
    zf=(zerop[1] (bv-and[32] v1200[32] v1200[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] v1200[32] v1200[32]))
    tf=v1191[1]
    if=v1192[1]
    df=v1193[1]
    of=0[1]
    iopl0=v1195[1]
    iopl1=v1196[1]
    nt=v1197[1]
    ?15=v1198[1]
    ip=(ite[32] (invert[1] (zerop[1] (bv-and[32] v1200[32] v1200[32]))) 134513584[32] 134513605[32])
    memory:
        134518512[32]: v1199[32] 4 bytes read-only
        v1199[32]: v1200[32] 4 bytes read-only
    ip = (ite[32] (invert[1] (zerop[1] (bv-and[32] v1200[32] v1200[32]))) 134513584[32] 134513605[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax=v1234[32]
    cx=v1235[32]
    dx=v1236[32]
    bx=v1237[32]
    sp=v1238[32]
    bp=v1239[32]
    si=v1240[32]
    di=v1241[32]
    es=v1242[16]
    cs=v1243[16]
    ss=v1244[16]
    ds=v1245[16]
    fs=v1246[16]
    gs=v1247[16]
    cf=v1248[1]
    ?1=v1249[1]
    pf=v1250[1]
    ?3=v1251[1]
    af=v1252[1]
    ?5=v1253[1]
    zf=v1254[1]
    sf=v1255[1]
    tf=v1256[1]
    if=v1257[1]
    df=v1258[1]
    of=v1259[1]
    iopl0=v1260[1]
    iopl1=v1261[1]
    nt=v1262[1]
    ?15=v1263[1]
    ip=134513612[32]
    memory:
        134518516[32]: 1[32] 1 byte
    ip = 134513612[32]
0x80483cc:leave  
    ax=v1234[32]
    cx=v1235[32]
    dx=v1236[32]
    bx=v1237[32]
    sp=(add[32] v1239[32] 4[32])
    bp=v1264[32]
    si=v1240[32]
    di=v1241[32]
    es=v1242[16]
    cs=v1243[16]
    ss=v1244[16]
    ds=v1245[16]
    fs=v1246[16]
    gs=v1247[16]
    cf=v1248[1]
    ?1=v1249[1]
    pf=v1250[1]
    ?3=v1251[1]
    af=v1252[1]
    ?5=v1253[1]
    zf=v1254[1]
    sf=v1255[1]
    tf=v1256[1]
    if=v1257[1]
    df=v1258[1]
    of=v1259[1]
    iopl0=v1260[1]
    iopl1=v1261[1]
    nt=v1262[1]
    ?15=v1263[1]
    ip=134513613[32]
    memory:
        134518516[32]: 1[32] 1 byte
        v1239[32]: v1264[32] 4 bytes read-only
    ip = 134513613[32]
0x80483cd:ret    
    ax=v1234[32]
    cx=v1235[32]
    dx=v1236[32]
    bx=v1237[32]
    sp=(add[32] (add[32] v1239[32] 4[32]) 4[32])
    bp=v1264[32]
    si=v1240[32]
    di=v1241[32]
    es=v1242[16]
    cs=v1243[16]
    ss=v1244[16]
    ds=v1245[16]
    fs=v1246[16]
    gs=v1247[16]
    cf=v1248[1]
    ?1=v1249[1]
    pf=v1250[1]
    ?3=v1251[1]
    af=v1252[1]
    ?5=v1253[1]
    zf=v1254[1]
    sf=v1255[1]
    tf=v1256[1]
    if=v1257[1]
    df=v1258[1]
    of=v1259[1]
    iopl0=v1260[1]
    iopl1=v1261[1]
    nt=v1262[1]
    ?15=v1263[1]
    ip=v1265[32]
    memory:
        134518516[32]: 1[32] 1 byte
        v1239[32]: v1264[32] 4 bytes read-only
        (add[32] v1239[32] 4[32]): v1265[32] 4 bytes read-only
    ip = v1265[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax=v1298[32]
    cx=v1299[32]
    dx=v1300[32]
    bx=v1301[32]
    sp=(add[32] v1302[32] -4[32])
    bp=v1303[32]
    si=v1304[32]
    di=v1305[32]
    es=v1306[16]
    cs=v1307[16]
    ss=v1308[16]
    ds=v1309[16]
    fs=v1310[16]
    gs=v1311[16]
    cf=v1312[1]
    ?1=v1313[1]
    pf=v1314[1]
    ?3=v1315[1]
    af=v1316[1]
    ?5=v1317[1]
    zf=v1318[1]
    sf=v1319[1]
    tf=v1320[1]
    if=v1321[1]
    df=v1322[1]
    of=v1323[1]
    iopl0=v1324[1]
    iopl1=v1325[1]
    nt=v1326[1]
    ?15=v1327[1]
    ip=134513617[32]
    memory:
        (add[32] v1302[32] -4[32]): v1303[32] 4 bytes
    ip = 134513617[32]
0x80483d1:mov    ebp, esp
    ax=v1298[32]
    cx=v1299[32]
    dx=v1300[32]
    bx=v1301[32]
    sp=(add[32] v1302[32] -4[32])
    bp=(add[32] v1302[32] -4[32])
    si=v1304[32]
    di=v1305[32]
    es=v1306[16]
    cs=v1307[16]
    ss=v1308[16]
    ds=v1309[16]
    fs=v1310[16]
    gs=v1311[16]
    cf=v1312[1]
    ?1=v1313[1]
    pf=v1314[1]
    ?3=v1315[1]
    af=v1316[1]
    ?5=v1317[1]
    zf=v1318[1]
    sf=v1319[1]
    tf=v1320[1]
    if=v1321[1]
    df=v1322[1]
    of=v1323[1]
    iopl0=v1324[1]
    iopl1=v1325[1]
    nt=v1326[1]
    ?15=v1327[1]
    ip=134513619[32]
    memory:
        (add[32] v1302[32] -4[32]): v1303[32] 4 bytes
    ip = 134513619[32]
0x80483d3:sub    esp, 0x08
    ax=v1298[32]
    cx=v1299[32]
    dx=v1300[32]
    bx=v1301[32]
    sp=(add[32] (add[32] v1302[32] -4[32]) -8[32])
    bp=(add[32] v1302[32] -4[32])
    si=v1304[32]
    di=v1305[32]
    es=v1306[16]
    cs=v1307[16]
    ss=v1308[16]
    ds=v1309[16]
    fs=v1310[16]
    gs=v1311[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))))
    ?1=v1313[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))))))
    ?3=v1315[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))))
    ?5=v1317[1]
    zf=(zerop[1] (add[32] (add[32] v1302[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))
    tf=v1320[1]
    if=v1321[1]
    df=v1322[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))))
    iopl0=v1324[1]
    iopl1=v1325[1]
    nt=v1326[1]
    ?15=v1327[1]
    ip=134513622[32]
    memory:
        (add[32] v1302[32] -4[32]): v1303[32] 4 bytes
    ip = 134513622[32]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax=v1328[32]
    cx=v1299[32]
    dx=v1300[32]
    bx=v1301[32]
    sp=(add[32] (add[32] v1302[32] -4[32]) -8[32])
    bp=(add[32] v1302[32] -4[32])
    si=v1304[32]
    di=v1305[32]
    es=v1306[16]
    cs=v1307[16]
    ss=v1308[16]
    ds=v1309[16]
    fs=v1310[16]
    gs=v1311[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))))
    ?1=v1313[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1302[32] -4[32]) -8[32])))))))
    ?3=v1315[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))))
    ?5=v1317[1]
    zf=(zerop[1] (add[32] (add[32] v1302[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1302[32] -4[32]) -8[32]))
    tf=v1320[1]
    if=v1321[1]
    df=v1322[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1302[32] -4[32])) 4294967288[33]))))))
    iopl0=v1324[1]
    iopl1=v1325[1]
    nt=v1326[1]
    ?15=v1327[1]
    ip=134513627[32]
    memory:
        (add[32] v1302[32] -4[32]): v1303[32] 4 bytes
        134518264[32]: v1328[32] 4 bytes read-only
    ip = 134513627[32]
0x80483db:test   eax, eax
    ax=v1328[32]
    cx=v1299[32]
    dx=v1300[32]
    bx=v1301[32]
    sp=(add[32] (add[32] v1302[32] -4[32]) -8[32])
    bp=(add[32] v1302[32] -4[32])
    si=v1304[32]
    di=v1305[32]
    es=v1306[16]
    cs=v1307[16]
    ss=v1308[16]
    ds=v1309[16]
    fs=v1310[16]
    gs=v1311[16]
    cf=0[1]
    ?1=v1313[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))))))
    ?3=v1315[1]
    af=v1329[1]
    ?5=v1317[1]
    zf=(zerop[1] (bv-and[32] v1328[32] v1328[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] v1328[32] v1328[32]))
    tf=v1320[1]
    if=v1321[1]
    df=v1322[1]
    of=0[1]
    iopl0=v1324[1]
    iopl1=v1325[1]
    nt=v1326[1]
    ?15=v1327[1]
    ip=134513629[32]
    memory:
        (add[32] v1302[32] -4[32]): v1303[32] 4 bytes
        134518264[32]: v1328[32] 4 bytes read-only
    ip = 134513629[32]
0x80483dd:je     0x08048400
    ax=v1328[32]
    cx=v1299[32]
    dx=v1300[32]
    bx=v1301[32]
    sp=(add[32] (add[32] v1302[32] -4[32]) -8[32])
    bp=(add[32] v1302[32] -4[32])
    si=v1304[32]
    di=v1305[32]
    es=v1306[16]
    cs=v1307[16]
    ss=v1308[16]
    ds=v1309[16]
    fs=v1310[16]
    gs=v1311[16]
    cf=0[1]
    ?1=v1313[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] v1328[32] v1328[32])))))))
    ?3=v1315[1]
    af=v1329[1]
    ?5=v1317[1]
    zf=(zerop[1] (bv-and[32] v1328[32] v1328[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] v1328[32] v1328[32]))
    tf=v1320[1]
    if=v1321[1]
    df=v1322[1]
    of=0[1]
    iopl0=v1324[1]
    iopl1=v1325[1]
    nt=v1326[1]
    ?15=v1327[1]
    ip=(ite[32] (zerop[1] (bv-and[32] v1328[32] v1328[32])) 134513664[32] 134513631[32])
    memory:
        (add[32] v1302[32] -4[32]): v1303[32] 4 bytes
        134518264[32]: v1328[32] 4 bytes read-only
    ip = (ite[32] (zerop[1] (bv-and[32] v1328[32] v1328[32])) 134513664[32] 134513631[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax=0[32]
    cx=v1363[32]
    dx=v1364[32]
    bx=v1365[32]
    sp=v1366[32]
    bp=v1367[32]
    si=v1368[32]
    di=v1369[32]
    es=v1370[16]
    cs=v1371[16]
    ss=v1372[16]
    ds=v1373[16]
    fs=v1374[16]
    gs=v1375[16]
    cf=v1376[1]
    ?1=v1377[1]
    pf=v1378[1]
    ?3=v1379[1]
    af=v1380[1]
    ?5=v1381[1]
    zf=v1382[1]
    sf=v1383[1]
    tf=v1384[1]
    if=v1385[1]
    df=v1386[1]
    of=v1387[1]
    iopl0=v1388[1]
    iopl1=v1389[1]
    nt=v1390[1]
    ?15=v1391[1]
    ip=134513636[32]
    memory:
    ip = 134513636[32]
0x80483e4:test   eax, eax
    ax=0[32]
    cx=v1363[32]
    dx=v1364[32]
    bx=v1365[32]
    sp=v1366[32]
    bp=v1367[32]
    si=v1368[32]
    di=v1369[32]
    es=v1370[16]
    cs=v1371[16]
    ss=v1372[16]
    ds=v1373[16]
    fs=v1374[16]
    gs=v1375[16]
    cf=0[1]
    ?1=v1377[1]
    pf=1[1]
    ?3=v1379[1]
    af=v1392[1]
    ?5=v1381[1]
    zf=1[1]
    sf=0[1]
    tf=v1384[1]
    if=v1385[1]
    df=v1386[1]
    of=0[1]
    iopl0=v1388[1]
    iopl1=v1389[1]
    nt=v1390[1]
    ?15=v1391[1]
    ip=134513638[32]
    memory:
    ip = 134513638[32]
0x80483e6:je     0x08048400
    ax=0[32]
    cx=v1363[32]
    dx=v1364[32]
    bx=v1365[32]
    sp=v1366[32]
    bp=v1367[32]
    si=v1368[32]
    di=v1369[32]
    es=v1370[16]
    cs=v1371[16]
    ss=v1372[16]
    ds=v1373[16]
    fs=v1374[16]
    gs=v1375[16]
    cf=0[1]
    ?1=v1377[1]
    pf=1[1]
    ?3=v1379[1]
    af=v1392[1]
    ?5=v1381[1]
    zf=1[1]
    sf=0[1]
    tf=v1384[1]
    if=v1385[1]
    df=v1386[1]
    of=0[1]
    iopl0=v1388[1]
    iopl1=v1389[1]
    nt=v1390[1]
    ?15=v1391[1]
    ip=134513664[32]
    memory:
    ip = 134513664[32]
0x8048400:mov    esp, ebp
    ax=0[32]
    cx=v1363[32]
    dx=v1364[32]
    bx=v1365[32]
    sp=v1367[32]
    bp=v1367[32]
    si=v1368[32]
    di=v1369[32]
    es=v1370[16]
    cs=v1371[16]
    ss=v1372[16]
    ds=v1373[16]
    fs=v1374[16]
    gs=v1375[16]
    cf=0[1]
    ?1=v1377[1]
    pf=1[1]
    ?3=v1379[1]
    af=v1392[1]
    ?5=v1381[1]
    zf=1[1]
    sf=0[1]
    tf=v1384[1]
    if=v1385[1]
    df=v1386[1]
    of=0[1]
    iopl0=v1388[1]
    iopl1=v1389[1]
    nt=v1390[1]
    ?15=v1391[1]
    ip=134513666[32]
    memory:
    ip = 134513666[32]
0x8048402:pop    ebp
    ax=0[32]
    cx=v1363[32]
    dx=v1364[32]
    bx=v1365[32]
    sp=(add[32] v1367[32] 4[32])
    bp=v1393[32]
    si=v1368[32]
    di=v1369[32]
    es=v1370[16]
    cs=v1371[16]
    ss=v1372[16]
    ds=v1373[16]
    fs=v1374[16]
    gs=v1375[16]
    cf=0[1]
    ?1=v1377[1]
    pf=1[1]
    ?3=v1379[1]
    af=v1392[1]
    ?5=v1381[1]
    zf=1[1]
    sf=0[1]
    tf=v1384[1]
    if=v1385[1]
    df=v1386[1]
    of=0[1]
    iopl0=v1388[1]
    iopl1=v1389[1]
    nt=v1390[1]
    ?15=v1391[1]
    ip=134513667[32]
    memory:
        v1367[32]: v1393[32] 4 bytes read-only
    ip = 134513667[32]
0x8048403:ret    
    ax=0[32]
    cx=v1363[32]
    dx=v1364[32]
    bx=v1365[32]
    sp=(add[32] (add[32] v1367[32] 4[32]) 4[32])
    bp=v1393[32]
    si=v1368[32]
    di=v1369[32]
    es=v1370[16]
    cs=v1371[16]
    ss=v1372[16]
    ds=v1373[16]
    fs=v1374[16]
    gs=v1375[16]
    cf=0[1]
    ?1=v1377[1]
    pf=1[1]
    ?3=v1379[1]
    af=v1392[1]
    ?5=v1381[1]
    zf=1[1]
    sf=0[1]
    tf=v1384[1]
    if=v1385[1]
    df=v1386[1]
    of=0[1]
    iopl0=v1388[1]
    iopl1=v1389[1]
    nt=v1390[1]
    ?15=v1391[1]
    ip=v1394[32]
    memory:
        v1367[32]: v1393[32] 4 bytes read-only
        (add[32] v1367[32] 4[32]): v1394[32] 4 bytes read-only
    ip = v1394[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048404:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513669[32]
    memory:
    ip = 134513669[32]
0x8048405:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513670[32]
    memory:
    ip = 134513670[32]
0x8048406:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513671[32]
    memory:
    ip = 134513671[32]
0x8048407:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513672[32]
    memory:
    ip = 134513672[32]
0x8048408:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513673[32]
    memory:
    ip = 134513673[32]
0x8048409:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513674[32]
    memory:
    ip = 134513674[32]
0x804840a:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513675[32]
    memory:
    ip = 134513675[32]
0x804840b:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513676[32]
    memory:
    ip = 134513676[32]
0x804840c:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513677[32]
    memory:
    ip = 134513677[32]
0x804840d:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513678[32]
    memory:
    ip = 134513678[32]
0x804840e:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513679[32]
    memory:
    ip = 134513679[32]
0x804840f:nop    
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=v1431[32]
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513680[32]
    memory:
    ip = 134513680[32]
0x8048410:push   ebp
    ax=v1427[32]
    cx=v1428[32]
    dx=v1429[32]
    bx=v1430[32]
    sp=(add[32] v1431[32] -4[32])
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513681[32]
    memory:
        (add[32] v1431[32] -4[32]): v1432[32] 4 bytes
    ip = 134513681[32]
0x8048411:mov    edx, 0x08048480
    ax=v1427[32]
    cx=v1428[32]
    dx=134513792[32]
    bx=v1430[32]
    sp=(add[32] v1431[32] -4[32])
    bp=v1432[32]
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513686[32]
    memory:
        (add[32] v1431[32] -4[32]): v1432[32] 4 bytes
    ip = 134513686[32]
0x8048416:mov    ebp, esp
    ax=v1427[32]
    cx=v1428[32]
    dx=134513792[32]
    bx=v1430[32]
    sp=(add[32] v1431[32] -4[32])
    bp=(add[32] v1431[32] -4[32])
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=v1441[1]
    ?1=v1442[1]
    pf=v1443[1]
    ?3=v1444[1]
    af=v1445[1]
    ?5=v1446[1]
    zf=v1447[1]
    sf=v1448[1]
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=v1452[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513688[32]
    memory:
        (add[32] v1431[32] -4[32]): v1432[32] 4 bytes
    ip = 134513688[32]
0x8048418:sub    esp, 0x08
    ax=v1427[32]
    cx=v1428[32]
    dx=134513792[32]
    bx=v1430[32]
    sp=(add[32] (add[32] v1431[32] -4[32]) -8[32])
    bp=(add[32] v1431[32] -4[32])
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1431[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1431[32] -4[32])) 4294967288[33]))))))
    ?1=v1442[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1431[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1431[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1431[32] -4[32]) -8[32])))))))
    ?3=v1444[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1431[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1431[32] -4[32])) 4294967288[33]))))))
    ?5=v1446[1]
    zf=(zerop[1] (add[32] (add[32] v1431[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]))
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1431[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1431[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1431[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1431[32] -4[32])) 4294967288[33]))))))
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513691[32]
    memory:
        (add[32] v1431[32] -4[32]): v1432[32] 4 bytes
    ip = 134513691[32]
0x804841b:and    esp, 0xf0<-0x10>
    ax=v1427[32]
    cx=v1428[32]
    dx=134513792[32]
    bx=v1430[32]
    sp=(bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])
    bp=(add[32] v1431[32] -4[32])
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=0[1]
    ?1=v1442[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))))))
    ?3=v1444[1]
    af=v1457[1]
    ?5=v1446[1]
    zf=(zerop[1] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=0[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513694[32]
    memory:
        (add[32] v1431[32] -4[32]): v1432[32] 4 bytes
    ip = 134513694[32]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax=v1427[32]
    cx=v1428[32]
    dx=134513792[32]
    bx=v1430[32]
    sp=(bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])
    bp=(add[32] v1431[32] -4[32])
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=0[1]
    ?1=v1442[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))))))
    ?3=v1444[1]
    af=v1457[1]
    ?5=v1446[1]
    zf=(zerop[1] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=0[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513698[32]
    memory:
        (add[32] v1431[32] -4[32]): v1432[32] 4 bytes
        (add[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]) 4[32]): 134513792[32] 4 bytes
    ip = 134513698[32]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax=v1427[32]
    cx=v1428[32]
    dx=134513792[32]
    bx=v1430[32]
    sp=(bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])
    bp=(add[32] v1431[32] -4[32])
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=0[1]
    ?1=v1442[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))))))
    ?3=v1444[1]
    af=v1457[1]
    ?5=v1446[1]
    zf=(zerop[1] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=0[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513705[32]
    memory:
        (add[32] v1431[32] -4[32]): v1432[32] 4 bytes
        (add[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]) 4[32]): 134513792[32] 4 bytes
        (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]): 10[32] 4 bytes
    ip = 134513705[32]
0x8048429:call   0x080482f0
    ax=v1427[32]
    cx=v1428[32]
    dx=134513792[32]
    bx=v1430[32]
    sp=(add[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]) -4[32])
    bp=(add[32] v1431[32] -4[32])
    si=v1433[32]
    di=v1434[32]
    es=v1435[16]
    cs=v1436[16]
    ss=v1437[16]
    ds=v1438[16]
    fs=v1439[16]
    gs=v1440[16]
    cf=0[1]
    ?1=v1442[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32])))))))
    ?3=v1444[1]
    af=v1457[1]
    ?5=v1446[1]
    zf=(zerop[1] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))
    sf=(extract[1] 31[32] 32[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]))
    tf=v1449[1]
    if=v1450[1]
    df=v1451[1]
    of=0[1]
    iopl0=v1453[1]
    iopl1=v1454[1]
    nt=v1455[1]
    ?15=v1456[1]
    ip=134513392[32]
    memory:
        (add[32] v1431[32] -4[32]): v1432[32] 4 bytes
        (add[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]) 4[32]): 134513792[32] 4 bytes
        (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]): 10[32] 4 bytes
        (add[32] (bv-and[32] (add[32] (add[32] v1431[32] -4[32]) -8[32]) -16[32]) -4[32]): 134513710[32] 4 bytes
    ip = 134513392[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax=v1490[32]
    cx=v1491[32]
    dx=v1492[32]
    bx=v1493[32]
    sp=v1495[32]
    bp=v1495[32]
    si=v1496[32]
    di=v1497[32]
    es=v1498[16]
    cs=v1499[16]
    ss=v1500[16]
    ds=v1501[16]
    fs=v1502[16]
    gs=v1503[16]
    cf=v1504[1]
    ?1=v1505[1]
    pf=v1506[1]
    ?3=v1507[1]
    af=v1508[1]
    ?5=v1509[1]
    zf=v1510[1]
    sf=v1511[1]
    tf=v1512[1]
    if=v1513[1]
    df=v1514[1]
    of=v1515[1]
    iopl0=v1516[1]
    iopl1=v1517[1]
    nt=v1518[1]
    ?15=v1519[1]
    ip=134513712[32]
    memory:
    ip = 134513712[32]
0x8048430:xor    eax, eax
    ax=(bv-xor[32] v1490[32] v1490[32])
    cx=v1491[32]
    dx=v1492[32]
    bx=v1493[32]
    sp=v1495[32]
    bp=v1495[32]
    si=v1496[32]
    di=v1497[32]
    es=v1498[16]
    cs=v1499[16]
    ss=v1500[16]
    ds=v1501[16]
    fs=v1502[16]
    gs=v1503[16]
    cf=0[1]
    ?1=v1505[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))))))
    ?3=v1507[1]
    af=v1520[1]
    ?5=v1509[1]
    zf=(zerop[1] (bv-xor[32] v1490[32] v1490[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] v1490[32] v1490[32]))
    tf=v1512[1]
    if=v1513[1]
    df=v1514[1]
    of=0[1]
    iopl0=v1516[1]
    iopl1=v1517[1]
    nt=v1518[1]
    ?15=v1519[1]
    ip=134513714[32]
    memory:
    ip = 134513714[32]
0x8048432:pop    ebp
    ax=(bv-xor[32] v1490[32] v1490[32])
    cx=v1491[32]
    dx=v1492[32]
    bx=v1493[32]
    sp=(add[32] v1495[32] 4[32])
    bp=v1521[32]
    si=v1496[32]
    di=v1497[32]
    es=v1498[16]
    cs=v1499[16]
    ss=v1500[16]
    ds=v1501[16]
    fs=v1502[16]
    gs=v1503[16]
    cf=0[1]
    ?1=v1505[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))))))
    ?3=v1507[1]
    af=v1520[1]
    ?5=v1509[1]
    zf=(zerop[1] (bv-xor[32] v1490[32] v1490[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] v1490[32] v1490[32]))
    tf=v1512[1]
    if=v1513[1]
    df=v1514[1]
    of=0[1]
    iopl0=v1516[1]
    iopl1=v1517[1]
    nt=v1518[1]
    ?15=v1519[1]
    ip=134513715[32]
    memory:
        v1495[32]: v1521[32] 4 bytes read-only
    ip = 134513715[32]
0x8048433:ret    
    ax=(bv-xor[32] v1490[32] v1490[32])
    cx=v1491[32]
    dx=v1492[32]
    bx=v1493[32]
    sp=(add[32] (add[32] v1495[32] 4[32]) 4[32])
    bp=v1521[32]
    si=v1496[32]
    di=v1497[32]
    es=v1498[16]
    cs=v1499[16]
    ss=v1500[16]
    ds=v1501[16]
    fs=v1502[16]
    gs=v1503[16]
    cf=0[1]
    ?1=v1505[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (bv-xor[32] v1490[32] v1490[32])))))))
    ?3=v1507[1]
    af=v1520[1]
    ?5=v1509[1]
    zf=(zerop[1] (bv-xor[32] v1490[32] v1490[32]))
    sf=(extract[1] 31[32] 32[32] (bv-xor[32] v1490[32] v1490[32]))
    tf=v1512[1]
    if=v1513[1]
    df=v1514[1]
    of=0[1]
    iopl0=v1516[1]
    iopl1=v1517[1]
    nt=v1518[1]
    ?15=v1519[1]
    ip=v1522[32]
    memory:
        v1495[32]: v1521[32] 4 bytes read-only
        (add[32] v1495[32] 4[32]): v1522[32] 4 bytes read-only
    ip = v1522[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax=v1555[32]
    cx=v1556[32]
    dx=v1557[32]
    bx=v1558[32]
    sp=(add[32] v1559[32] -4[32])
    bp=v1560[32]
    si=v1561[32]
    di=v1562[32]
    es=v1563[16]
    cs=v1564[16]
    ss=v1565[16]
    ds=v1566[16]
    fs=v1567[16]
    gs=v1568[16]
    cf=v1569[1]
    ?1=v1570[1]
    pf=v1571[1]
    ?3=v1572[1]
    af=v1573[1]
    ?5=v1574[1]
    zf=v1575[1]
    sf=v1576[1]
    tf=v1577[1]
    if=v1578[1]
    df=v1579[1]
    of=v1580[1]
    iopl0=v1581[1]
    iopl1=v1582[1]
    nt=v1583[1]
    ?15=v1584[1]
    ip=134513729[32]
    memory:
        (add[32] v1559[32] -4[32]): v1560[32] 4 bytes
    ip = 134513729[32]
0x8048441:mov    ebp, esp
    ax=v1555[32]
    cx=v1556[32]
    dx=v1557[32]
    bx=v1558[32]
    sp=(add[32] v1559[32] -4[32])
    bp=(add[32] v1559[32] -4[32])
    si=v1561[32]
    di=v1562[32]
    es=v1563[16]
    cs=v1564[16]
    ss=v1565[16]
    ds=v1566[16]
    fs=v1567[16]
    gs=v1568[16]
    cf=v1569[1]
    ?1=v1570[1]
    pf=v1571[1]
    ?3=v1572[1]
    af=v1573[1]
    ?5=v1574[1]
    zf=v1575[1]
    sf=v1576[1]
    tf=v1577[1]
    if=v1578[1]
    df=v1579[1]
    of=v1580[1]
    iopl0=v1581[1]
    iopl1=v1582[1]
    nt=v1583[1]
    ?15=v1584[1]
    ip=134513731[32]
    memory:
        (add[32] v1559[32] -4[32]): v1560[32] 4 bytes
    ip = 134513731[32]
0x8048443:sub    esp, 0x08
    ax=v1555[32]
    cx=v1556[32]
    dx=v1557[32]
    bx=v1558[32]
    sp=(add[32] (add[32] v1559[32] -4[32]) -8[32])
    bp=(add[32] v1559[32] -4[32])
    si=v1561[32]
    di=v1562[32]
    es=v1563[16]
    cs=v1564[16]
    ss=v1565[16]
    ds=v1566[16]
    fs=v1567[16]
    gs=v1568[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    ?1=v1570[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))))))
    ?3=v1572[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    ?5=v1574[1]
    zf=(zerop[1] (add[32] (add[32] v1559[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))
    tf=v1577[1]
    if=v1578[1]
    df=v1579[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    iopl0=v1581[1]
    iopl1=v1582[1]
    nt=v1583[1]
    ?15=v1584[1]
    ip=134513734[32]
    memory:
        (add[32] v1559[32] -4[32]): v1560[32] 4 bytes
    ip = 134513734[32]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax=v1555[32]
    cx=v1556[32]
    dx=v1557[32]
    bx=v1558[32]
    sp=(add[32] (add[32] v1559[32] -4[32]) -8[32])
    bp=(add[32] v1559[32] -4[32])
    si=v1561[32]
    di=v1562[32]
    es=v1563[16]
    cs=v1564[16]
    ss=v1565[16]
    ds=v1566[16]
    fs=v1567[16]
    gs=v1568[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    ?1=v1570[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))))))
    ?3=v1572[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    ?5=v1574[1]
    zf=(zerop[1] (add[32] (add[32] v1559[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))
    tf=v1577[1]
    if=v1578[1]
    df=v1579[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    iopl0=v1581[1]
    iopl1=v1582[1]
    nt=v1583[1]
    ?15=v1584[1]
    ip=134513741[32]
    memory:
        (add[32] v1559[32] -4[32]): v1560[32] 4 bytes
        (add[32] (add[32] v1559[32] -4[32]) -8[32]): 134514132[32] 4 bytes
    ip = 134513741[32]
0x804844d:call   0x08048300
    ax=v1555[32]
    cx=v1556[32]
    dx=v1557[32]
    bx=v1558[32]
    sp=(add[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]) -4[32])
    bp=(add[32] v1559[32] -4[32])
    si=v1561[32]
    di=v1562[32]
    es=v1563[16]
    cs=v1564[16]
    ss=v1565[16]
    ds=v1566[16]
    fs=v1567[16]
    gs=v1568[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    ?1=v1570[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1559[32] -4[32]) -8[32])))))))
    ?3=v1572[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    ?5=v1574[1]
    zf=(zerop[1] (add[32] (add[32] v1559[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]))
    tf=v1577[1]
    if=v1578[1]
    df=v1579[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1559[32] -4[32])) 4294967288[33]))))))
    iopl0=v1581[1]
    iopl1=v1582[1]
    nt=v1583[1]
    ?15=v1584[1]
    ip=134513408[32]
    memory:
        (add[32] v1559[32] -4[32]): v1560[32] 4 bytes
        (add[32] (add[32] v1559[32] -4[32]) -8[32]): 134514132[32] 4 bytes
        (add[32] (add[32] (add[32] v1559[32] -4[32]) -8[32]) -4[32]): 134513746[32] 4 bytes
    ip = 134513408[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax=v1617[32]
    cx=v1618[32]
    dx=v1619[32]
    bx=v1620[32]
    sp=v1622[32]
    bp=v1622[32]
    si=v1623[32]
    di=v1624[32]
    es=v1625[16]
    cs=v1626[16]
    ss=v1627[16]
    ds=v1628[16]
    fs=v1629[16]
    gs=v1630[16]
    cf=v1631[1]
    ?1=v1632[1]
    pf=v1633[1]
    ?3=v1634[1]
    af=v1635[1]
    ?5=v1636[1]
    zf=v1637[1]
    sf=v1638[1]
    tf=v1639[1]
    if=v1640[1]
    df=v1641[1]
    of=v1642[1]
    iopl0=v1643[1]
    iopl1=v1644[1]
    nt=v1645[1]
    ?15=v1646[1]
    ip=134513748[32]
    memory:
    ip = 134513748[32]
0x8048454:pop    ebp
    ax=v1617[32]
    cx=v1618[32]
    dx=v1619[32]
    bx=v1620[32]
    sp=(add[32] v1622[32] 4[32])
    bp=v1647[32]
    si=v1623[32]
    di=v1624[32]
    es=v1625[16]
    cs=v1626[16]
    ss=v1627[16]
    ds=v1628[16]
    fs=v1629[16]
    gs=v1630[16]
    cf=v1631[1]
    ?1=v1632[1]
    pf=v1633[1]
    ?3=v1634[1]
    af=v1635[1]
    ?5=v1636[1]
    zf=v1637[1]
    sf=v1638[1]
    tf=v1639[1]
    if=v1640[1]
    df=v1641[1]
    of=v1642[1]
    iopl0=v1643[1]
    iopl1=v1644[1]
    nt=v1645[1]
    ?15=v1646[1]
    ip=134513749[32]
    memory:
        v1622[32]: v1647[32] 4 bytes read-only
    ip = 134513749[32]
0x8048455:ret    
    ax=v1617[32]
    cx=v1618[32]
    dx=v1619[32]
    bx=v1620[32]
    sp=(add[32] (add[32] v1622[32] 4[32]) 4[32])
    bp=v1647[32]
    si=v1623[32]
    di=v1624[32]
    es=v1625[16]
    cs=v1626[16]
    ss=v1627[16]
    ds=v1628[16]
    fs=v1629[16]
    gs=v1630[16]
    cf=v1631[1]
    ?1=v1632[1]
    pf=v1633[1]
    ?3=v1634[1]
    af=v1635[1]
    ?5=v1636[1]
    zf=v1637[1]
    sf=v1638[1]
    tf=v1639[1]
    if=v1640[1]
    df=v1641[1]
    of=v1642[1]
    iopl0=v1643[1]
    iopl1=v1644[1]
    nt=v1645[1]
    ?15=v1646[1]
    ip=v1648[32]
    memory:
        v1622[32]: v1647[32] 4 bytes read-only
        (add[32] v1622[32] 4[32]): v1648[32] 4 bytes read-only
    ip = v1648[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax=v1681[32]
    cx=v1682[32]
    dx=v1683[32]
    bx=v1684[32]
    sp=(add[32] v1685[32] -4[32])
    bp=v1686[32]
    si=v1687[32]
    di=v1688[32]
    es=v1689[16]
    cs=v1690[16]
    ss=v1691[16]
    ds=v1692[16]
    fs=v1693[16]
    gs=v1694[16]
    cf=v1695[1]
    ?1=v1696[1]
    pf=v1697[1]
    ?3=v1698[1]
    af=v1699[1]
    ?5=v1700[1]
    zf=v1701[1]
    sf=v1702[1]
    tf=v1703[1]
    if=v1704[1]
    df=v1705[1]
    of=v1706[1]
    iopl0=v1707[1]
    iopl1=v1708[1]
    nt=v1709[1]
    ?15=v1710[1]
    ip=134513761[32]
    memory:
        (add[32] v1685[32] -4[32]): v1686[32] 4 bytes
    ip = 134513761[32]
0x8048461:mov    ebp, esp
    ax=v1681[32]
    cx=v1682[32]
    dx=v1683[32]
    bx=v1684[32]
    sp=(add[32] v1685[32] -4[32])
    bp=(add[32] v1685[32] -4[32])
    si=v1687[32]
    di=v1688[32]
    es=v1689[16]
    cs=v1690[16]
    ss=v1691[16]
    ds=v1692[16]
    fs=v1693[16]
    gs=v1694[16]
    cf=v1695[1]
    ?1=v1696[1]
    pf=v1697[1]
    ?3=v1698[1]
    af=v1699[1]
    ?5=v1700[1]
    zf=v1701[1]
    sf=v1702[1]
    tf=v1703[1]
    if=v1704[1]
    df=v1705[1]
    of=v1706[1]
    iopl0=v1707[1]
    iopl1=v1708[1]
    nt=v1709[1]
    ?15=v1710[1]
    ip=134513763[32]
    memory:
        (add[32] v1685[32] -4[32]): v1686[32] 4 bytes
    ip = 134513763[32]
0x8048463:sub    esp, 0x08
    ax=v1681[32]
    cx=v1682[32]
    dx=v1683[32]
    bx=v1684[32]
    sp=(add[32] (add[32] v1685[32] -4[32]) -8[32])
    bp=(add[32] v1685[32] -4[32])
    si=v1687[32]
    di=v1688[32]
    es=v1689[16]
    cs=v1690[16]
    ss=v1691[16]
    ds=v1692[16]
    fs=v1693[16]
    gs=v1694[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    ?1=v1696[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))))))
    ?3=v1698[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    ?5=v1700[1]
    zf=(zerop[1] (add[32] (add[32] v1685[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))
    tf=v1703[1]
    if=v1704[1]
    df=v1705[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    iopl0=v1707[1]
    iopl1=v1708[1]
    nt=v1709[1]
    ?15=v1710[1]
    ip=134513766[32]
    memory:
        (add[32] v1685[32] -4[32]): v1686[32] 4 bytes
    ip = 134513766[32]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax=v1681[32]
    cx=v1682[32]
    dx=v1683[32]
    bx=v1684[32]
    sp=(add[32] (add[32] v1685[32] -4[32]) -8[32])
    bp=(add[32] v1685[32] -4[32])
    si=v1687[32]
    di=v1688[32]
    es=v1689[16]
    cs=v1690[16]
    ss=v1691[16]
    ds=v1692[16]
    fs=v1693[16]
    gs=v1694[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    ?1=v1696[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))))))
    ?3=v1698[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    ?5=v1700[1]
    zf=(zerop[1] (add[32] (add[32] v1685[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))
    tf=v1703[1]
    if=v1704[1]
    df=v1705[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    iopl0=v1707[1]
    iopl1=v1708[1]
    nt=v1709[1]
    ?15=v1710[1]
    ip=134513773[32]
    memory:
        (add[32] v1685[32] -4[32]): v1686[32] 4 bytes
        (add[32] (add[32] v1685[32] -4[32]) -8[32]): 134514132[32] 4 bytes
    ip = 134513773[32]
0x804846d:call   0x08048300
    ax=v1681[32]
    cx=v1682[32]
    dx=v1683[32]
    bx=v1684[32]
    sp=(add[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]) -4[32])
    bp=(add[32] v1685[32] -4[32])
    si=v1687[32]
    di=v1688[32]
    es=v1689[16]
    cs=v1690[16]
    ss=v1691[16]
    ds=v1692[16]
    fs=v1693[16]
    gs=v1694[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    ?1=v1696[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1685[32] -4[32]) -8[32])))))))
    ?3=v1698[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    ?5=v1700[1]
    zf=(zerop[1] (add[32] (add[32] v1685[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]))
    tf=v1703[1]
    if=v1704[1]
    df=v1705[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1685[32] -4[32])) 4294967288[33]))))))
    iopl0=v1707[1]
    iopl1=v1708[1]
    nt=v1709[1]
    ?15=v1710[1]
    ip=134513408[32]
    memory:
        (add[32] v1685[32] -4[32]): v1686[32] 4 bytes
        (add[32] (add[32] v1685[32] -4[32]) -8[32]): 134514132[32] 4 bytes
        (add[32] (add[32] (add[32] v1685[32] -4[32]) -8[32]) -4[32]): 134513778[32] 4 bytes
    ip = 134513408[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax=v1743[32]
    cx=v1744[32]
    dx=v1745[32]
    bx=v1746[32]
    sp=v1747[32]
    bp=v1748[32]
    si=v1749[32]
    di=v1750[32]
    es=v1751[16]
    cs=v1752[16]
    ss=v1753[16]
    ds=v1754[16]
    fs=v1755[16]
    gs=v1756[16]
    cf=v1757[1]
    ?1=v1758[1]
    pf=v1759[1]
    ?3=v1760[1]
    af=v1761[1]
    ?5=v1762[1]
    zf=v1763[1]
    sf=v1764[1]
    tf=v1765[1]
    if=v1766[1]
    df=v1767[1]
    of=v1768[1]
    iopl0=v1769[1]
    iopl1=v1770[1]
    nt=v1771[1]
    ?15=v1772[1]
    ip=134513785[32]
    memory:
        v1747[32]: 0[32] 4 bytes
    ip = 134513785[32]
0x8048479:call   0x08048320
    ax=v1743[32]
    cx=v1744[32]
    dx=v1745[32]
    bx=v1746[32]
    sp=(add[32] v1747[32] -4[32])
    bp=v1748[32]
    si=v1749[32]
    di=v1750[32]
    es=v1751[16]
    cs=v1752[16]
    ss=v1753[16]
    ds=v1754[16]
    fs=v1755[16]
    gs=v1756[16]
    cf=v1757[1]
    ?1=v1758[1]
    pf=v1759[1]
    ?3=v1760[1]
    af=v1761[1]
    ?5=v1762[1]
    zf=v1763[1]
    sf=v1764[1]
    tf=v1765[1]
    if=v1766[1]
    df=v1767[1]
    of=v1768[1]
    iopl0=v1769[1]
    iopl1=v1770[1]
    nt=v1771[1]
    ?15=v1772[1]
    ip=134513440[32]
    memory:
        v1747[32]: 0[32] 4 bytes
        (add[32] v1747[32] -4[32]): 134513790[32] 4 bytes
    ip = 134513440[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax=v1805[32]
    cx=v1806[32]
    dx=v1807[32]
    bx=v1808[32]
    sp=(add[32] v1809[32] -4[32])
    bp=v1810[32]
    si=v1811[32]
    di=v1812[32]
    es=v1813[16]
    cs=v1814[16]
    ss=v1815[16]
    ds=v1816[16]
    fs=v1817[16]
    gs=v1818[16]
    cf=v1819[1]
    ?1=v1820[1]
    pf=v1821[1]
    ?3=v1822[1]
    af=v1823[1]
    ?5=v1824[1]
    zf=v1825[1]
    sf=v1826[1]
    tf=v1827[1]
    if=v1828[1]
    df=v1829[1]
    of=v1830[1]
    iopl0=v1831[1]
    iopl1=v1832[1]
    nt=v1833[1]
    ?15=v1834[1]
    ip=134513793[32]
    memory:
        (add[32] v1809[32] -4[32]): v1810[32] 4 bytes
    ip = 134513793[32]
0x8048481:mov    ebp, esp
    ax=v1805[32]
    cx=v1806[32]
    dx=v1807[32]
    bx=v1808[32]
    sp=(add[32] v1809[32] -4[32])
    bp=(add[32] v1809[32] -4[32])
    si=v1811[32]
    di=v1812[32]
    es=v1813[16]
    cs=v1814[16]
    ss=v1815[16]
    ds=v1816[16]
    fs=v1817[16]
    gs=v1818[16]
    cf=v1819[1]
    ?1=v1820[1]
    pf=v1821[1]
    ?3=v1822[1]
    af=v1823[1]
    ?5=v1824[1]
    zf=v1825[1]
    sf=v1826[1]
    tf=v1827[1]
    if=v1828[1]
    df=v1829[1]
    of=v1830[1]
    iopl0=v1831[1]
    iopl1=v1832[1]
    nt=v1833[1]
    ?15=v1834[1]
    ip=134513795[32]
    memory:
        (add[32] v1809[32] -4[32]): v1810[32] 4 bytes
    ip = 134513795[32]
0x8048483:sub    esp, 0x08
    ax=v1805[32]
    cx=v1806[32]
    dx=v1807[32]
    bx=v1808[32]
    sp=(add[32] (add[32] v1809[32] -4[32]) -8[32])
    bp=(add[32] v1809[32] -4[32])
    si=v1811[32]
    di=v1812[32]
    es=v1813[16]
    cs=v1814[16]
    ss=v1815[16]
    ds=v1816[16]
    fs=v1817[16]
    gs=v1818[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))))
    ?1=v1820[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v1809[32] -4[32]) -8[32])))))))
    ?3=v1822[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))))
    ?5=v1824[1]
    zf=(zerop[1] (add[32] (add[32] v1809[32] -4[32]) -8[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]))
    tf=v1827[1]
    if=v1828[1]
    df=v1829[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))))
    iopl0=v1831[1]
    iopl1=v1832[1]
    nt=v1833[1]
    ?15=v1834[1]
    ip=134513798[32]
    memory:
        (add[32] v1809[32] -4[32]): v1810[32] 4 bytes
    ip = 134513798[32]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax=v1805[32]
    cx=v1806[32]
    dx=v1807[32]
    bx=v1808[32]
    sp=(add[32] (add[32] v1809[32] -4[32]) -8[32])
    bp=(add[32] v1809[32] -4[32])
    si=v1811[32]
    di=v1812[32]
    es=v1813[16]
    cs=v1814[16]
    ss=v1815[16]
    ds=v1816[16]
    fs=v1817[16]
    gs=v1818[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))))
    ?1=v1820[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))))))
    ?3=v1822[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33])))))
    ?5=v1824[1]
    zf=(zerop[1] (add[32] v1835[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v1835[32] 1[32]))
    tf=v1827[1]
    if=v1828[1]
    df=v1829[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33]))))))
    iopl0=v1831[1]
    iopl1=v1832[1]
    nt=v1833[1]
    ?15=v1834[1]
    ip=134513804[32]
    memory:
        (add[32] v1809[32] -4[32]): v1810[32] 4 bytes clobbered
        134518520[32]: (add[32] v1835[32] 1[32]) 4 bytes
    ip = 134513804[32]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax=v1805[32]
    cx=v1806[32]
    dx=v1807[32]
    bx=v1808[32]
    sp=(add[32] (add[32] v1809[32] -4[32]) -8[32])
    bp=(add[32] v1809[32] -4[32])
    si=v1811[32]
    di=v1812[32]
    es=v1813[16]
    cs=v1814[16]
    ss=v1815[16]
    ds=v1816[16]
    fs=v1817[16]
    gs=v1818[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))))
    ?1=v1820[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))))))
    ?3=v1822[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33])))))
    ?5=v1824[1]
    zf=(zerop[1] (add[32] v1835[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v1835[32] 1[32]))
    tf=v1827[1]
    if=v1828[1]
    df=v1829[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33]))))))
    iopl0=v1831[1]
    iopl1=v1832[1]
    nt=v1833[1]
    ?15=v1834[1]
    ip=134513811[32]
    memory:
        (add[32] v1809[32] -4[32]): v1810[32] 4 bytes clobbered
        134518520[32]: (add[32] v1835[32] 1[32]) 4 bytes clobbered
        (add[32] (add[32] v1809[32] -4[32]) -8[32]): 134514132[32] 4 bytes
    ip = 134513811[32]
0x8048493:call   0x08048300
    ax=v1805[32]
    cx=v1806[32]
    dx=v1807[32]
    bx=v1808[32]
    sp=(add[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]) -4[32])
    bp=(add[32] v1809[32] -4[32])
    si=v1811[32]
    di=v1812[32]
    es=v1813[16]
    cs=v1814[16]
    ss=v1815[16]
    ds=v1816[16]
    fs=v1817[16]
    gs=v1818[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) (bv-xor[33] 4294967287[33] (add[33] (uextend[33] 33[32] (add[32] v1809[32] -4[32])) 4294967288[33]))))))
    ?1=v1820[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v1835[32] 1[32])))))))
    ?3=v1822[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33])))))
    ?5=v1824[1]
    zf=(zerop[1] (add[32] v1835[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v1835[32] 1[32]))
    tf=v1827[1]
    if=v1828[1]
    df=v1829[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v1835[32]) (bv-xor[33] 1[33] (add[33] (uextend[33] 33[32] v1835[32]) 1[33]))))))
    iopl0=v1831[1]
    iopl1=v1832[1]
    nt=v1833[1]
    ?15=v1834[1]
    ip=134513408[32]
    memory:
        (add[32] v1809[32] -4[32]): v1810[32] 4 bytes clobbered
        134518520[32]: (add[32] v1835[32] 1[32]) 4 bytes clobbered
        (add[32] (add[32] v1809[32] -4[32]) -8[32]): 134514132[32] 4 bytes
        (add[32] (add[32] (add[32] v1809[32] -4[32]) -8[32]) -4[32]): 134513816[32] 4 bytes
    ip = 134513408[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax=v1868[32]
    cx=v1869[32]
    dx=v1870[32]
    bx=v1871[32]
    sp=v1872[32]
    bp=v1873[32]
    si=v1874[32]
    di=v1875[32]
    es=v1876[16]
    cs=v1877[16]
    ss=v1878[16]
    ds=v1879[16]
    fs=v1880[16]
    gs=v1881[16]
    cf=v1882[1]
    ?1=v1883[1]
    pf=v1884[1]
    ?3=v1885[1]
    af=v1886[1]
    ?5=v1887[1]
    zf=v1888[1]
    sf=v1889[1]
    tf=v1890[1]
    if=v1891[1]
    df=v1892[1]
    of=v1893[1]
    iopl0=v1894[1]
    iopl1=v1895[1]
    nt=v1896[1]
    ?15=v1897[1]
    ip=134513823[32]
    memory:
        v1872[32]: 0[32] 4 bytes
    ip = 134513823[32]
0x804849f:call   0x08048320
    ax=v1868[32]
    cx=v1869[32]
    dx=v1870[32]
    bx=v1871[32]
    sp=(add[32] v1872[32] -4[32])
    bp=v1873[32]
    si=v1874[32]
    di=v1875[32]
    es=v1876[16]
    cs=v1877[16]
    ss=v1878[16]
    ds=v1879[16]
    fs=v1880[16]
    gs=v1881[16]
    cf=v1882[1]
    ?1=v1883[1]
    pf=v1884[1]
    ?3=v1885[1]
    af=v1886[1]
    ?5=v1887[1]
    zf=v1888[1]
    sf=v1889[1]
    tf=v1890[1]
    if=v1891[1]
    df=v1892[1]
    of=v1893[1]
    iopl0=v1894[1]
    iopl1=v1895[1]
    nt=v1896[1]
    ?15=v1897[1]
    ip=134513440[32]
    memory:
        v1872[32]: 0[32] 4 bytes
        (add[32] v1872[32] -4[32]): 134513828[32] 4 bytes
    ip = 134513440[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484a4:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513829[32]
    memory:
    ip = 134513829[32]
0x80484a5:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513830[32]
    memory:
    ip = 134513830[32]
0x80484a6:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513831[32]
    memory:
    ip = 134513831[32]
0x80484a7:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513832[32]
    memory:
    ip = 134513832[32]
0x80484a8:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513833[32]
    memory:
    ip = 134513833[32]
0x80484a9:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513834[32]
    memory:
    ip = 134513834[32]
0x80484aa:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513835[32]
    memory:
    ip = 134513835[32]
0x80484ab:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513836[32]
    memory:
    ip = 134513836[32]
0x80484ac:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513837[32]
    memory:
    ip = 134513837[32]
0x80484ad:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513838[32]
    memory:
    ip = 134513838[32]
0x80484ae:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513839[32]
    memory:
    ip = 134513839[32]
0x80484af:nop    
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=v1934[32]
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513840[32]
    memory:
    ip = 134513840[32]
0x80484b0:push   ebp
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=(add[32] v1934[32] -4[32])
    bp=v1935[32]
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513841[32]
    memory:
        (add[32] v1934[32] -4[32]): v1935[32] 4 bytes
    ip = 134513841[32]
0x80484b1:mov    ebp, esp
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=(add[32] v1934[32] -4[32])
    bp=(add[32] v1934[32] -4[32])
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513843[32]
    memory:
        (add[32] v1934[32] -4[32]): v1935[32] 4 bytes
    ip = 134513843[32]
0x80484b3:push   edi
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=(add[32] (add[32] v1934[32] -4[32]) -4[32])
    bp=(add[32] v1934[32] -4[32])
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513844[32]
    memory:
        (add[32] v1934[32] -4[32]): v1935[32] 4 bytes
        (add[32] (add[32] v1934[32] -4[32]) -4[32]): v1937[32] 4 bytes
    ip = 134513844[32]
0x80484b4:push   esi
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=(add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v1934[32] -4[32])
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513845[32]
    memory:
        (add[32] v1934[32] -4[32]): v1935[32] 4 bytes
        (add[32] (add[32] v1934[32] -4[32]) -4[32]): v1937[32] 4 bytes
        (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]): v1936[32] 4 bytes
    ip = 134513845[32]
0x80484b5:push   ebx
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=(add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])
    bp=(add[32] v1934[32] -4[32])
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=v1944[1]
    ?1=v1945[1]
    pf=v1946[1]
    ?3=v1947[1]
    af=v1948[1]
    ?5=v1949[1]
    zf=v1950[1]
    sf=v1951[1]
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=v1955[1]
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513846[32]
    memory:
        (add[32] v1934[32] -4[32]): v1935[32] 4 bytes
        (add[32] (add[32] v1934[32] -4[32]) -4[32]): v1937[32] 4 bytes
        (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]): v1936[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]): v1933[32] 4 bytes
    ip = 134513846[32]
0x80484b6:sub    esp, 0x0c
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])
    bp=(add[32] v1934[32] -4[32])
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?1=v1945[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))
    ?3=v1947[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?5=v1949[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513849[32]
    memory:
        (add[32] v1934[32] -4[32]): v1935[32] 4 bytes
        (add[32] (add[32] v1934[32] -4[32]) -4[32]): v1937[32] 4 bytes
        (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]): v1936[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]): v1933[32] 4 bytes
    ip = 134513849[32]
0x80484b9:call   0x080484be
    ax=v1930[32]
    cx=v1931[32]
    dx=v1932[32]
    bx=v1933[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])
    bp=(add[32] v1934[32] -4[32])
    si=v1936[32]
    di=v1937[32]
    es=v1938[16]
    cs=v1939[16]
    ss=v1940[16]
    ds=v1941[16]
    fs=v1942[16]
    gs=v1943[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?1=v1945[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))
    ?3=v1947[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?5=v1949[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    tf=v1952[1]
    if=v1953[1]
    df=v1954[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    iopl0=v1956[1]
    iopl1=v1957[1]
    nt=v1958[1]
    ?15=v1959[1]
    ip=134513854[32]
    memory:
        (add[32] v1934[32] -4[32]): v1935[32] 4 bytes
        (add[32] (add[32] v1934[32] -4[32]) -4[32]): v1937[32] 4 bytes
        (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]): v1936[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]): v1933[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v1934[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]): 134513854[32] 4 bytes
    ip = 134513854[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax=v1992[32]
    cx=v1993[32]
    dx=v1994[32]
    bx=v2022[32]
    sp=(add[32] v1996[32] 4[32])
    bp=v1997[32]
    si=v1998[32]
    di=v1999[32]
    es=v2000[16]
    cs=v2001[16]
    ss=v2002[16]
    ds=v2003[16]
    fs=v2004[16]
    gs=v2005[16]
    cf=v2006[1]
    ?1=v2007[1]
    pf=v2008[1]
    ?3=v2009[1]
    af=v2010[1]
    ?5=v2011[1]
    zf=v2012[1]
    sf=v2013[1]
    tf=v2014[1]
    if=v2015[1]
    df=v2016[1]
    of=v2017[1]
    iopl0=v2018[1]
    iopl1=v2019[1]
    nt=v2020[1]
    ?15=v2021[1]
    ip=134513855[32]
    memory:
        v1996[32]: v2022[32] 4 bytes read-only
    ip = 134513855[32]
0x80484bf:add    ebx, 0x0000120a
    ax=v1992[32]
    cx=v1993[32]
    dx=v1994[32]
    bx=(add[32] v2022[32] 4618[32])
    sp=(add[32] v1996[32] 4[32])
    bp=v1997[32]
    si=v1998[32]
    di=v1999[32]
    es=v2000[16]
    cs=v2001[16]
    ss=v2002[16]
    ds=v2003[16]
    fs=v2004[16]
    gs=v2005[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2022[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2022[32]) 4618[33])))))
    ?1=v2007[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32])))))))
    ?3=v2009[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2022[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2022[32]) 4618[33])))))
    ?5=v2011[1]
    zf=(zerop[1] (add[32] v2022[32] 4618[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2022[32] 4618[32]))
    tf=v2014[1]
    if=v2015[1]
    df=v2016[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2022[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2022[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2022[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2022[32]) 4618[33]))))))
    iopl0=v2018[1]
    iopl1=v2019[1]
    nt=v2020[1]
    ?15=v2021[1]
    ip=134513861[32]
    memory:
        v1996[32]: v2022[32] 4 bytes read-only
    ip = 134513861[32]
0x80484c5:call   0x080482c8
    ax=v1992[32]
    cx=v1993[32]
    dx=v1994[32]
    bx=(add[32] v2022[32] 4618[32])
    sp=(add[32] (add[32] v1996[32] 4[32]) -4[32])
    bp=v1997[32]
    si=v1998[32]
    di=v1999[32]
    es=v2000[16]
    cs=v2001[16]
    ss=v2002[16]
    ds=v2003[16]
    fs=v2004[16]
    gs=v2005[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2022[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2022[32]) 4618[33])))))
    ?1=v2007[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2022[32] 4618[32])))))))
    ?3=v2009[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2022[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2022[32]) 4618[33])))))
    ?5=v2011[1]
    zf=(zerop[1] (add[32] v2022[32] 4618[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2022[32] 4618[32]))
    tf=v2014[1]
    if=v2015[1]
    df=v2016[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2022[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2022[32]) 4618[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2022[32]) (bv-xor[33] 4618[33] (add[33] (uextend[33] 33[32] v2022[32]) 4618[33]))))))
    iopl0=v2018[1]
    iopl1=v2019[1]
    nt=v2020[1]
    ?15=v2021[1]
    ip=134513352[32]
    memory:
        (add[32] (add[32] v1996[32] 4[32]) -4[32]): 134513866[32] 4 bytes
    ip = 134513352[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax=(add[32] v2058[32] -224[32])
    cx=v2056[32]
    dx=v2057[32]
    bx=v2058[32]
    sp=v2059[32]
    bp=v2060[32]
    si=v2061[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=v2069[1]
    ?1=v2070[1]
    pf=v2071[1]
    ?3=v2072[1]
    af=v2073[1]
    ?5=v2074[1]
    zf=v2075[1]
    sf=v2076[1]
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=v2080[1]
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513872[32]
    memory:
    ip = 134513872[32]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax=(add[32] v2058[32] -224[32])
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2058[32]
    sp=v2059[32]
    bp=v2060[32]
    si=v2061[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=v2069[1]
    ?1=v2070[1]
    pf=v2071[1]
    ?3=v2072[1]
    af=v2073[1]
    ?5=v2074[1]
    zf=v2075[1]
    sf=v2076[1]
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=v2080[1]
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513878[32]
    memory:
    ip = 134513878[32]
0x80484d6:sub    eax, edx
    ax=(add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2058[32]
    sp=v2059[32]
    bp=v2060[32]
    si=v2061[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2058[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2058[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v2058[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2058[32] -224[32]))) 1[33])))))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))))))
    ?3=v2072[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2058[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2058[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v2058[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2058[32] -224[32]))) 1[33])))))))
    ?5=v2074[1]
    zf=(zerop[1] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2058[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2058[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v2058[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2058[32] -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] v2058[32] -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] v2058[32] -224[32]))) (add[33] (uextend[33] 33[32] (add[32] v2058[32] -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] v2058[32] -224[32]))) 1[33])))))))
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513880[32]
    memory:
    ip = 134513880[32]
0x80484d8:sar    eax, 0x02
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2058[32]
    sp=v2059[32]
    bp=v2060[32]
    si=v2061[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))))))
    ?3=v2072[1]
    af=v2085[1]
    ?5=v2074[1]
    zf=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    sf=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=0[1]
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513883[32]
    memory:
    ip = 134513883[32]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2058[32]
    sp=v2059[32]
    bp=v2060[32]
    si=v2061[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))))))
    ?3=v2072[1]
    af=v2085[1]
    ?5=v2074[1]
    zf=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    sf=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=0[1]
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513886[32]
    memory:
        (add[32] v2060[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))) 4 bytes
    ip = 134513886[32]
0x80484de:jne    0x080484f0
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2058[32]
    sp=v2059[32]
    bp=v2060[32]
    si=v2061[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))))))))
    ?3=v2072[1]
    af=v2085[1]
    ?5=v2074[1]
    zf=(zerop[1] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    sf=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=0[1]
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513888[32]
    memory:
        (add[32] v2060[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))) 4 bytes
    ip = 134513888[32]
0x80484e0:add    esp, 0x0c
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2058[32]
    sp=(add[32] v2059[32] 12[32])
    bp=v2060[32]
    si=v2061[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))))))
    ?3=v2072[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?5=v2074[1]
    zf=(zerop[1] (add[32] v2059[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2059[32] 12[32]))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))))
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513891[32]
    memory:
        (add[32] v2060[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))) 4 bytes
    ip = 134513891[32]
0x80484e3:pop    ebx
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2086[32]
    sp=(add[32] (add[32] v2059[32] 12[32]) 4[32])
    bp=v2060[32]
    si=v2061[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))))))
    ?3=v2072[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?5=v2074[1]
    zf=(zerop[1] (add[32] v2059[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2059[32] 12[32]))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))))
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513892[32]
    memory:
        (add[32] v2060[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))) 4 bytes
        (add[32] v2059[32] 12[32]): v2086[32] 4 bytes read-only
    ip = 134513892[32]
0x80484e4:pop    esi
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2086[32]
    sp=(add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32])
    bp=v2060[32]
    si=v2087[32]
    di=v2062[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))))))
    ?3=v2072[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?5=v2074[1]
    zf=(zerop[1] (add[32] v2059[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2059[32] 12[32]))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))))
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513893[32]
    memory:
        (add[32] v2060[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))) 4 bytes
        (add[32] v2059[32] 12[32]): v2086[32] 4 bytes read-only
        (add[32] (add[32] v2059[32] 12[32]) 4[32]): v2087[32] 4 bytes read-only
    ip = 134513893[32]
0x80484e5:pop    edi
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2086[32]
    sp=(add[32] (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]) 4[32])
    bp=v2060[32]
    si=v2087[32]
    di=v2088[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))))))
    ?3=v2072[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?5=v2074[1]
    zf=(zerop[1] (add[32] v2059[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2059[32] 12[32]))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))))
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513894[32]
    memory:
        (add[32] v2060[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))) 4 bytes
        (add[32] v2059[32] 12[32]): v2086[32] 4 bytes read-only
        (add[32] (add[32] v2059[32] 12[32]) 4[32]): v2087[32] 4 bytes read-only
        (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]): v2088[32] 4 bytes read-only
    ip = 134513894[32]
0x80484e6:pop    ebp
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2086[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=v2089[32]
    si=v2087[32]
    di=v2088[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))))))
    ?3=v2072[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?5=v2074[1]
    zf=(zerop[1] (add[32] v2059[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2059[32] 12[32]))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))))
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=134513895[32]
    memory:
        (add[32] v2060[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))) 4 bytes
        (add[32] v2059[32] 12[32]): v2086[32] 4 bytes read-only
        (add[32] (add[32] v2059[32] 12[32]) 4[32]): v2087[32] 4 bytes read-only
        (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]): v2088[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]) 4[32]): v2089[32] 4 bytes read-only
    ip = 134513895[32]
0x80484e7:ret    
    ax=(asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32])))
    cx=v2056[32]
    dx=(add[32] v2058[32] -224[32])
    bx=v2086[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=v2089[32]
    si=v2087[32]
    di=v2088[32]
    es=v2063[16]
    cs=v2064[16]
    ss=v2065[16]
    ds=v2066[16]
    fs=v2067[16]
    gs=v2068[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?1=v2070[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2059[32] 12[32])))))))
    ?3=v2072[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33])))))
    ?5=v2074[1]
    zf=(zerop[1] (add[32] v2059[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2059[32] 12[32]))
    tf=v2077[1]
    if=v2078[1]
    df=v2079[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2059[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2059[32]) 12[33]))))))
    iopl0=v2081[1]
    iopl1=v2082[1]
    nt=v2083[1]
    ?15=v2084[1]
    ip=v2090[32]
    memory:
        (add[32] v2060[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] v2058[32] -224[32]) (add[32] (invert[32] (add[32] v2058[32] -224[32])) 1[32]))) 4 bytes
        (add[32] v2059[32] 12[32]): v2086[32] 4 bytes read-only
        (add[32] (add[32] v2059[32] 12[32]) 4[32]): v2087[32] 4 bytes read-only
        (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]): v2088[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]) 4[32]): v2089[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] (add[32] v2059[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]): v2090[32] 4 bytes read-only
    ip = v2090[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax=v2123[32]
    cx=v2124[32]
    dx=v2125[32]
    bx=v2126[32]
    sp=(add[32] v2127[32] -4[32])
    bp=v2128[32]
    si=v2129[32]
    di=v2130[32]
    es=v2131[16]
    cs=v2132[16]
    ss=v2133[16]
    ds=v2134[16]
    fs=v2135[16]
    gs=v2136[16]
    cf=v2137[1]
    ?1=v2138[1]
    pf=v2139[1]
    ?3=v2140[1]
    af=v2141[1]
    ?5=v2142[1]
    zf=v2143[1]
    sf=v2144[1]
    tf=v2145[1]
    if=v2146[1]
    df=v2147[1]
    of=v2148[1]
    iopl0=v2149[1]
    iopl1=v2150[1]
    nt=v2151[1]
    ?15=v2152[1]
    ip=134513953[32]
    memory:
        (add[32] v2127[32] -4[32]): v2128[32] 4 bytes
    ip = 134513953[32]
0x8048521:mov    ebp, esp
    ax=v2123[32]
    cx=v2124[32]
    dx=v2125[32]
    bx=v2126[32]
    sp=(add[32] v2127[32] -4[32])
    bp=(add[32] v2127[32] -4[32])
    si=v2129[32]
    di=v2130[32]
    es=v2131[16]
    cs=v2132[16]
    ss=v2133[16]
    ds=v2134[16]
    fs=v2135[16]
    gs=v2136[16]
    cf=v2137[1]
    ?1=v2138[1]
    pf=v2139[1]
    ?3=v2140[1]
    af=v2141[1]
    ?5=v2142[1]
    zf=v2143[1]
    sf=v2144[1]
    tf=v2145[1]
    if=v2146[1]
    df=v2147[1]
    of=v2148[1]
    iopl0=v2149[1]
    iopl1=v2150[1]
    nt=v2151[1]
    ?15=v2152[1]
    ip=134513955[32]
    memory:
        (add[32] v2127[32] -4[32]): v2128[32] 4 bytes
    ip = 134513955[32]
0x8048523:push   edi
    ax=v2123[32]
    cx=v2124[32]
    dx=v2125[32]
    bx=v2126[32]
    sp=(add[32] (add[32] v2127[32] -4[32]) -4[32])
    bp=(add[32] v2127[32] -4[32])
    si=v2129[32]
    di=v2130[32]
    es=v2131[16]
    cs=v2132[16]
    ss=v2133[16]
    ds=v2134[16]
    fs=v2135[16]
    gs=v2136[16]
    cf=v2137[1]
    ?1=v2138[1]
    pf=v2139[1]
    ?3=v2140[1]
    af=v2141[1]
    ?5=v2142[1]
    zf=v2143[1]
    sf=v2144[1]
    tf=v2145[1]
    if=v2146[1]
    df=v2147[1]
    of=v2148[1]
    iopl0=v2149[1]
    iopl1=v2150[1]
    nt=v2151[1]
    ?15=v2152[1]
    ip=134513956[32]
    memory:
        (add[32] v2127[32] -4[32]): v2128[32] 4 bytes
        (add[32] (add[32] v2127[32] -4[32]) -4[32]): v2130[32] 4 bytes
    ip = 134513956[32]
0x8048524:push   esi
    ax=v2123[32]
    cx=v2124[32]
    dx=v2125[32]
    bx=v2126[32]
    sp=(add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v2127[32] -4[32])
    si=v2129[32]
    di=v2130[32]
    es=v2131[16]
    cs=v2132[16]
    ss=v2133[16]
    ds=v2134[16]
    fs=v2135[16]
    gs=v2136[16]
    cf=v2137[1]
    ?1=v2138[1]
    pf=v2139[1]
    ?3=v2140[1]
    af=v2141[1]
    ?5=v2142[1]
    zf=v2143[1]
    sf=v2144[1]
    tf=v2145[1]
    if=v2146[1]
    df=v2147[1]
    of=v2148[1]
    iopl0=v2149[1]
    iopl1=v2150[1]
    nt=v2151[1]
    ?15=v2152[1]
    ip=134513957[32]
    memory:
        (add[32] v2127[32] -4[32]): v2128[32] 4 bytes
        (add[32] (add[32] v2127[32] -4[32]) -4[32]): v2130[32] 4 bytes
        (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]): v2129[32] 4 bytes
    ip = 134513957[32]
0x8048525:push   ebx
    ax=v2123[32]
    cx=v2124[32]
    dx=v2125[32]
    bx=v2126[32]
    sp=(add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])
    bp=(add[32] v2127[32] -4[32])
    si=v2129[32]
    di=v2130[32]
    es=v2131[16]
    cs=v2132[16]
    ss=v2133[16]
    ds=v2134[16]
    fs=v2135[16]
    gs=v2136[16]
    cf=v2137[1]
    ?1=v2138[1]
    pf=v2139[1]
    ?3=v2140[1]
    af=v2141[1]
    ?5=v2142[1]
    zf=v2143[1]
    sf=v2144[1]
    tf=v2145[1]
    if=v2146[1]
    df=v2147[1]
    of=v2148[1]
    iopl0=v2149[1]
    iopl1=v2150[1]
    nt=v2151[1]
    ?15=v2152[1]
    ip=134513958[32]
    memory:
        (add[32] v2127[32] -4[32]): v2128[32] 4 bytes
        (add[32] (add[32] v2127[32] -4[32]) -4[32]): v2130[32] 4 bytes
        (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]): v2129[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]): v2126[32] 4 bytes
    ip = 134513958[32]
0x8048526:sub    esp, 0x0c
    ax=v2123[32]
    cx=v2124[32]
    dx=v2125[32]
    bx=v2126[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])
    bp=(add[32] v2127[32] -4[32])
    si=v2129[32]
    di=v2130[32]
    es=v2131[16]
    cs=v2132[16]
    ss=v2133[16]
    ds=v2134[16]
    fs=v2135[16]
    gs=v2136[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?1=v2138[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))
    ?3=v2140[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?5=v2142[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    tf=v2145[1]
    if=v2146[1]
    df=v2147[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    iopl0=v2149[1]
    iopl1=v2150[1]
    nt=v2151[1]
    ?15=v2152[1]
    ip=134513961[32]
    memory:
        (add[32] v2127[32] -4[32]): v2128[32] 4 bytes
        (add[32] (add[32] v2127[32] -4[32]) -4[32]): v2130[32] 4 bytes
        (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]): v2129[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]): v2126[32] 4 bytes
    ip = 134513961[32]
0x8048529:call   0x0804852e
    ax=v2123[32]
    cx=v2124[32]
    dx=v2125[32]
    bx=v2126[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32])
    bp=(add[32] v2127[32] -4[32])
    si=v2129[32]
    di=v2130[32]
    es=v2131[16]
    cs=v2132[16]
    ss=v2133[16]
    ds=v2134[16]
    fs=v2135[16]
    gs=v2136[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?1=v2138[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32])))))))
    ?3=v2140[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    ?5=v2142[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]))
    tf=v2145[1]
    if=v2146[1]
    df=v2147[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) (bv-xor[33] 4294967283[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32])) 4294967284[33]))))))
    iopl0=v2149[1]
    iopl1=v2150[1]
    nt=v2151[1]
    ?15=v2152[1]
    ip=134513966[32]
    memory:
        (add[32] v2127[32] -4[32]): v2128[32] 4 bytes
        (add[32] (add[32] v2127[32] -4[32]) -4[32]): v2130[32] 4 bytes
        (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]): v2129[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]): v2126[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2127[32] -4[32]) -4[32]) -4[32]) -4[32]) -12[32]) -4[32]): 134513966[32] 4 bytes
    ip = 134513966[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax=v2185[32]
    cx=v2186[32]
    dx=v2187[32]
    bx=v2215[32]
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=v2199[1]
    ?1=v2200[1]
    pf=v2201[1]
    ?3=v2202[1]
    af=v2203[1]
    ?5=v2204[1]
    zf=v2205[1]
    sf=v2206[1]
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=v2210[1]
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513967[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only
    ip = 134513967[32]
0x804852f:add    ebx, 0x0000119a
    ax=v2185[32]
    cx=v2186[32]
    dx=v2187[32]
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33])))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))))))
    ?3=v2202[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33])))))
    ?5=v2204[1]
    zf=(zerop[1] (add[32] v2215[32] 4506[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2215[32] 4506[32]))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33]))))))
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513973[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only
    ip = 134513973[32]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    cx=v2186[32]
    dx=v2187[32]
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33])))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))))))
    ?3=v2202[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33])))))
    ?5=v2204[1]
    zf=(zerop[1] (add[32] v2215[32] 4506[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2215[32] 4506[32]))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33]))))))
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513979[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only
    ip = 134513979[32]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    cx=v2186[32]
    dx=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33])))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2215[32] 4506[32])))))))
    ?3=v2202[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33])))))
    ?5=v2204[1]
    zf=(zerop[1] (add[32] v2215[32] 4506[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2215[32] 4506[32]))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2215[32]) (bv-xor[33] 4506[33] (add[33] (uextend[33] 33[32] v2215[32]) 4506[33]))))))
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513985[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only
    ip = 134513985[32]
0x8048541:sub    eax, edx
    ax=(add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))
    cx=v2186[32]
    dx=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]))) 1[33])))))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))))))
    ?3=v2202[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]))) 1[33])))))))
    ?5=v2204[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]))) 1[33])))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) (bv-xor[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]))) (add[33] (uextend[33] 33[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) (add[33] (uextend[33] 33[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]))) 1[33])))))))
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513987[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only
    ip = 134513987[32]
0x8048543:sar    eax, 0x02
    ax=(asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))
    cx=v2186[32]
    dx=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))))))))
    ?3=v2202[1]
    af=v2216[1]
    ?5=v2204[1]
    zf=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))
    sf=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=0[1]
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513990[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only
    ip = 134513990[32]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax=(asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))
    cx=v2186[32]
    dx=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))))))))
    ?3=v2202[1]
    af=v2216[1]
    ?5=v2204[1]
    zf=(zerop[1] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))
    sf=(extract[1] 31[32] 32[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=0[1]
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513993[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only clobbered
        (add[32] v2190[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) 4 bytes
    ip = 134513993[32]
0x8048549:dec    eax
    ax=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])
    cx=v2186[32]
    dx=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(extract[1] 0[32] 1[32] (shr0[32] 1[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])))))))
    ?3=v2202[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))))
    ?5=v2204[1]
    zf=(zerop[1] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) (bv-xor[33] 4294967295[33] (add[33] (uextend[33] 33[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32])))) 4294967295[33]))))))
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513994[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only clobbered
        (add[32] v2190[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) 4 bytes
    ip = 134513994[32]
0x804854a:cmp    eax, 0xff<-0x01>
    ax=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])
    cx=v2186[32]
    dx=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))
    ?3=v2202[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?5=v2204[1]
    zf=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134513997[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only clobbered
        (add[32] v2190[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) 4 bytes
    ip = 134513997[32]
0x804854d:je     0x0804856b
    ax=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])
    cx=v2186[32]
    dx=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] v2189[32] 4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))
    ?3=v2202[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?5=v2204[1]
    zf=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134514027[32]
    memory:
        v2189[32]: v2215[32] 4 bytes read-only clobbered
        (add[32] v2190[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) 4 bytes
    ip = 134514027[32]
0x804856b:call   0x080485b0
    ax=(add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])
    cx=v2186[32]
    dx=(add[32] (add[32] v2215[32] 4506[32]) -224[32])
    bx=(add[32] v2215[32] 4506[32])
    sp=(add[32] (add[32] v2189[32] 4[32]) -4[32])
    bp=v2190[32]
    si=v2191[32]
    di=v2192[32]
    es=v2193[16]
    cs=v2194[16]
    ss=v2195[16]
    ds=v2196[16]
    fs=v2197[16]
    gs=v2198[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?1=v2200[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32])))))))
    ?3=v2202[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    ?5=v2204[1]
    zf=(zerop[1] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32]) 1[32]))
    tf=v2207[1]
    if=v2208[1]
    df=v2209[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] (add[32] (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) -1[32])) 1[33]))))))
    iopl0=v2211[1]
    iopl1=v2212[1]
    nt=v2213[1]
    ?15=v2214[1]
    ip=134514096[32]
    memory:
        (add[32] (add[32] v2189[32] 4[32]) -4[32]): 134514032[32] 4 bytes
        (add[32] v2190[32] -16[32]): (asr[32] 2[5] (add[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32]) (add[32] (invert[32] (add[32] (add[32] v2215[32] 4506[32]) -224[32])) 1[32]))) 4 bytes clobbered
    ip = 134514096[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax=v2249[32]
    cx=v2250[32]
    dx=v2251[32]
    bx=v2252[32]
    sp=(add[32] v2253[32] 12[32])
    bp=v2254[32]
    si=v2255[32]
    di=v2256[32]
    es=v2257[16]
    cs=v2258[16]
    ss=v2259[16]
    ds=v2260[16]
    fs=v2261[16]
    gs=v2262[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?1=v2264[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))))))
    ?3=v2266[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?5=v2268[1]
    zf=(zerop[1] (add[32] v2253[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2253[32] 12[32]))
    tf=v2271[1]
    if=v2272[1]
    df=v2273[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))))
    iopl0=v2275[1]
    iopl1=v2276[1]
    nt=v2277[1]
    ?15=v2278[1]
    ip=134514035[32]
    memory:
    ip = 134514035[32]
0x8048573:pop    ebx
    ax=v2249[32]
    cx=v2250[32]
    dx=v2251[32]
    bx=v2279[32]
    sp=(add[32] (add[32] v2253[32] 12[32]) 4[32])
    bp=v2254[32]
    si=v2255[32]
    di=v2256[32]
    es=v2257[16]
    cs=v2258[16]
    ss=v2259[16]
    ds=v2260[16]
    fs=v2261[16]
    gs=v2262[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?1=v2264[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))))))
    ?3=v2266[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?5=v2268[1]
    zf=(zerop[1] (add[32] v2253[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2253[32] 12[32]))
    tf=v2271[1]
    if=v2272[1]
    df=v2273[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))))
    iopl0=v2275[1]
    iopl1=v2276[1]
    nt=v2277[1]
    ?15=v2278[1]
    ip=134514036[32]
    memory:
        (add[32] v2253[32] 12[32]): v2279[32] 4 bytes read-only
    ip = 134514036[32]
0x8048574:pop    esi
    ax=v2249[32]
    cx=v2250[32]
    dx=v2251[32]
    bx=v2279[32]
    sp=(add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32])
    bp=v2254[32]
    si=v2280[32]
    di=v2256[32]
    es=v2257[16]
    cs=v2258[16]
    ss=v2259[16]
    ds=v2260[16]
    fs=v2261[16]
    gs=v2262[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?1=v2264[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))))))
    ?3=v2266[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?5=v2268[1]
    zf=(zerop[1] (add[32] v2253[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2253[32] 12[32]))
    tf=v2271[1]
    if=v2272[1]
    df=v2273[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))))
    iopl0=v2275[1]
    iopl1=v2276[1]
    nt=v2277[1]
    ?15=v2278[1]
    ip=134514037[32]
    memory:
        (add[32] v2253[32] 12[32]): v2279[32] 4 bytes read-only
        (add[32] (add[32] v2253[32] 12[32]) 4[32]): v2280[32] 4 bytes read-only
    ip = 134514037[32]
0x8048575:pop    edi
    ax=v2249[32]
    cx=v2250[32]
    dx=v2251[32]
    bx=v2279[32]
    sp=(add[32] (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]) 4[32])
    bp=v2254[32]
    si=v2280[32]
    di=v2281[32]
    es=v2257[16]
    cs=v2258[16]
    ss=v2259[16]
    ds=v2260[16]
    fs=v2261[16]
    gs=v2262[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?1=v2264[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))))))
    ?3=v2266[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?5=v2268[1]
    zf=(zerop[1] (add[32] v2253[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2253[32] 12[32]))
    tf=v2271[1]
    if=v2272[1]
    df=v2273[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))))
    iopl0=v2275[1]
    iopl1=v2276[1]
    nt=v2277[1]
    ?15=v2278[1]
    ip=134514038[32]
    memory:
        (add[32] v2253[32] 12[32]): v2279[32] 4 bytes read-only
        (add[32] (add[32] v2253[32] 12[32]) 4[32]): v2280[32] 4 bytes read-only
        (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]): v2281[32] 4 bytes read-only
    ip = 134514038[32]
0x8048576:pop    ebp
    ax=v2249[32]
    cx=v2250[32]
    dx=v2251[32]
    bx=v2279[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=v2282[32]
    si=v2280[32]
    di=v2281[32]
    es=v2257[16]
    cs=v2258[16]
    ss=v2259[16]
    ds=v2260[16]
    fs=v2261[16]
    gs=v2262[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?1=v2264[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))))))
    ?3=v2266[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?5=v2268[1]
    zf=(zerop[1] (add[32] v2253[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2253[32] 12[32]))
    tf=v2271[1]
    if=v2272[1]
    df=v2273[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))))
    iopl0=v2275[1]
    iopl1=v2276[1]
    nt=v2277[1]
    ?15=v2278[1]
    ip=134514039[32]
    memory:
        (add[32] v2253[32] 12[32]): v2279[32] 4 bytes read-only
        (add[32] (add[32] v2253[32] 12[32]) 4[32]): v2280[32] 4 bytes read-only
        (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]): v2281[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]) 4[32]): v2282[32] 4 bytes read-only
    ip = 134514039[32]
0x8048577:ret    
    ax=v2249[32]
    cx=v2250[32]
    dx=v2251[32]
    bx=v2279[32]
    sp=(add[32] (add[32] (add[32] (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]) 4[32])
    bp=v2282[32]
    si=v2280[32]
    di=v2281[32]
    es=v2257[16]
    cs=v2258[16]
    ss=v2259[16]
    ds=v2260[16]
    fs=v2261[16]
    gs=v2262[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?1=v2264[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2253[32] 12[32])))))))
    ?3=v2266[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33])))))
    ?5=v2268[1]
    zf=(zerop[1] (add[32] v2253[32] 12[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2253[32] 12[32]))
    tf=v2271[1]
    if=v2272[1]
    df=v2273[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2253[32]) (bv-xor[33] 12[33] (add[33] (uextend[33] 33[32] v2253[32]) 12[33]))))))
    iopl0=v2275[1]
    iopl1=v2276[1]
    nt=v2277[1]
    ?15=v2278[1]
    ip=v2283[32]
    memory:
        (add[32] v2253[32] 12[32]): v2279[32] 4 bytes read-only
        (add[32] (add[32] v2253[32] 12[32]) 4[32]): v2280[32] 4 bytes read-only
        (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]): v2281[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]) 4[32]): v2282[32] 4 bytes read-only
        (add[32] (add[32] (add[32] (add[32] (add[32] v2253[32] 12[32]) 4[32]) 4[32]) 4[32]) 4[32]): v2283[32] 4 bytes read-only
    ip = v2283[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048578:nop    
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=v2320[32]
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514041[32]
    memory:
    ip = 134514041[32]
0x8048579:nop    
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=v2320[32]
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514042[32]
    memory:
    ip = 134514042[32]
0x804857a:nop    
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=v2320[32]
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514043[32]
    memory:
    ip = 134514043[32]
0x804857b:nop    
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=v2320[32]
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514044[32]
    memory:
    ip = 134514044[32]
0x804857c:nop    
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=v2320[32]
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514045[32]
    memory:
    ip = 134514045[32]
0x804857d:nop    
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=v2320[32]
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514046[32]
    memory:
    ip = 134514046[32]
0x804857e:nop    
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=v2320[32]
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514047[32]
    memory:
    ip = 134514047[32]
0x804857f:nop    
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=v2320[32]
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514048[32]
    memory:
    ip = 134514048[32]
0x8048580:push   ebp
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=(add[32] v2320[32] -4[32])
    bp=v2321[32]
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514049[32]
    memory:
        (add[32] v2320[32] -4[32]): v2321[32] 4 bytes
    ip = 134514049[32]
0x8048581:mov    ebp, esp
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=(add[32] v2320[32] -4[32])
    bp=(add[32] v2320[32] -4[32])
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514051[32]
    memory:
        (add[32] v2320[32] -4[32]): v2321[32] 4 bytes
    ip = 134514051[32]
0x8048583:push   ebx
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=(add[32] (add[32] v2320[32] -4[32]) -4[32])
    bp=(add[32] v2320[32] -4[32])
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=v2330[1]
    ?1=v2331[1]
    pf=v2332[1]
    ?3=v2333[1]
    af=v2334[1]
    ?5=v2335[1]
    zf=v2336[1]
    sf=v2337[1]
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=v2341[1]
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514052[32]
    memory:
        (add[32] v2320[32] -4[32]): v2321[32] 4 bytes
        (add[32] (add[32] v2320[32] -4[32]) -4[32]): v2319[32] 4 bytes
    ip = 134514052[32]
0x8048584:sub    esp, 0x04
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=v2319[32]
    sp=(add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v2320[32] -4[32])
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?1=v2331[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))))))
    ?3=v2333[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?5=v2335[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514055[32]
    memory:
        (add[32] v2320[32] -4[32]): v2321[32] 4 bytes
        (add[32] (add[32] v2320[32] -4[32]) -4[32]): v2319[32] 4 bytes
    ip = 134514055[32]
0x8048587:mov    ebx, 0x080495e8
    ax=v2316[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=134518248[32]
    sp=(add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v2320[32] -4[32])
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?1=v2331[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))))))
    ?3=v2333[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?5=v2335[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514060[32]
    memory:
        (add[32] v2320[32] -4[32]): v2321[32] 4 bytes
        (add[32] (add[32] v2320[32] -4[32]) -4[32]): v2319[32] 4 bytes
    ip = 134514060[32]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax=v2346[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=134518248[32]
    sp=(add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v2320[32] -4[32])
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?1=v2331[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])))))))
    ?3=v2333[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    ?5=v2335[1]
    zf=(zerop[1] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32]))
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] (add[32] (add[32] v2320[32] -4[32]) -4[32])) 4294967292[33]))))))
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514065[32]
    memory:
        (add[32] v2320[32] -4[32]): v2321[32] 4 bytes
        (add[32] (add[32] v2320[32] -4[32]) -4[32]): v2319[32] 4 bytes
        134518248[32]: v2346[32] 4 bytes read-only
    ip = 134514065[32]
0x8048591:cmp    eax, 0xff<-0x01>
    ax=v2346[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=134518248[32]
    sp=(add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v2320[32] -4[32])
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2346[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2346[32]) 1[33]))))))
    ?1=v2331[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32])))))))
    ?3=v2333[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2346[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2346[32]) 1[33]))))))
    ?5=v2335[1]
    zf=(zerop[1] (add[32] v2346[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2346[32] 1[32]))
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2346[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2346[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2346[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2346[32]) 1[33]))))))
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=134514068[32]
    memory:
        (add[32] v2320[32] -4[32]): v2321[32] 4 bytes
        (add[32] (add[32] v2320[32] -4[32]) -4[32]): v2319[32] 4 bytes
        134518248[32]: v2346[32] 4 bytes read-only
    ip = 134514068[32]
0x8048594:je     0x080485ac
    ax=v2346[32]
    cx=v2317[32]
    dx=v2318[32]
    bx=134518248[32]
    sp=(add[32] (add[32] (add[32] v2320[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v2320[32] -4[32])
    si=v2322[32]
    di=v2323[32]
    es=v2324[16]
    cs=v2325[16]
    ss=v2326[16]
    ds=v2327[16]
    fs=v2328[16]
    gs=v2329[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2346[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2346[32]) 1[33]))))))
    ?1=v2331[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2346[32] 1[32])))))))
    ?3=v2333[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2346[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2346[32]) 1[33]))))))
    ?5=v2335[1]
    zf=(zerop[1] (add[32] v2346[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2346[32] 1[32]))
    tf=v2338[1]
    if=v2339[1]
    df=v2340[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2346[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2346[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2346[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2346[32]) 1[33]))))))
    iopl0=v2342[1]
    iopl1=v2343[1]
    nt=v2344[1]
    ?15=v2345[1]
    ip=(ite[32] (zerop[1] (add[32] v2346[32] 1[32])) 134514092[32] 134514070[32])
    memory:
        (add[32] v2320[32] -4[32]): v2321[32] 4 bytes
        (add[32] (add[32] v2320[32] -4[32]) -4[32]): v2319[32] 4 bytes
        134518248[32]: v2346[32] 4 bytes read-only
    ip = (ite[32] (zerop[1] (add[32] v2346[32] 1[32])) 134514092[32] 134514070[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax=v2379[32]
    cx=v2380[32]
    dx=v2381[32]
    bx=v2382[32]
    sp=v2383[32]
    bp=v2384[32]
    si=v2385[32]
    di=v2386[32]
    es=v2387[16]
    cs=v2388[16]
    ss=v2389[16]
    ds=v2390[16]
    fs=v2391[16]
    gs=v2392[16]
    cf=v2393[1]
    ?1=v2394[1]
    pf=v2395[1]
    ?3=v2396[1]
    af=v2397[1]
    ?5=v2398[1]
    zf=v2399[1]
    sf=v2400[1]
    tf=v2401[1]
    if=v2402[1]
    df=v2403[1]
    of=v2404[1]
    iopl0=v2405[1]
    iopl1=v2406[1]
    nt=v2407[1]
    ?15=v2408[1]
    ip=134514073[32]
    memory:
    ip = 134514073[32]
0x8048599:lea    edi, [edi + 0x00000000]
    ax=v2379[32]
    cx=v2380[32]
    dx=v2381[32]
    bx=v2382[32]
    sp=v2383[32]
    bp=v2384[32]
    si=v2385[32]
    di=v2386[32]
    es=v2387[16]
    cs=v2388[16]
    ss=v2389[16]
    ds=v2390[16]
    fs=v2391[16]
    gs=v2392[16]
    cf=v2393[1]
    ?1=v2394[1]
    pf=v2395[1]
    ?3=v2396[1]
    af=v2397[1]
    ?5=v2398[1]
    zf=v2399[1]
    sf=v2400[1]
    tf=v2401[1]
    if=v2402[1]
    df=v2403[1]
    of=v2404[1]
    iopl0=v2405[1]
    iopl1=v2406[1]
    nt=v2407[1]
    ?15=v2408[1]
    ip=134514080[32]
    memory:
    ip = 134514080[32]
0x80485a0:sub    ebx, 0x04
    ax=v2379[32]
    cx=v2380[32]
    dx=v2381[32]
    bx=(add[32] v2382[32] -4[32])
    sp=v2383[32]
    bp=v2384[32]
    si=v2385[32]
    di=v2386[32]
    es=v2387[16]
    cs=v2388[16]
    ss=v2389[16]
    ds=v2390[16]
    fs=v2391[16]
    gs=v2392[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2382[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2382[32]) 4294967292[33]))))))
    ?1=v2394[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32])))))))
    ?3=v2396[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2382[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2382[32]) 4294967292[33]))))))
    ?5=v2398[1]
    zf=(zerop[1] (add[32] v2382[32] -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2382[32] -4[32]))
    tf=v2401[1]
    if=v2402[1]
    df=v2403[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2382[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2382[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2382[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2382[32]) 4294967292[33]))))))
    iopl0=v2405[1]
    iopl1=v2406[1]
    nt=v2407[1]
    ?15=v2408[1]
    ip=134514083[32]
    memory:
    ip = 134514083[32]
0x80485a3:call   eax
    ax=v2379[32]
    cx=v2380[32]
    dx=v2381[32]
    bx=(add[32] v2382[32] -4[32])
    sp=(add[32] v2383[32] -4[32])
    bp=v2384[32]
    si=v2385[32]
    di=v2386[32]
    es=v2387[16]
    cs=v2388[16]
    ss=v2389[16]
    ds=v2390[16]
    fs=v2391[16]
    gs=v2392[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2382[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2382[32]) 4294967292[33]))))))
    ?1=v2394[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2382[32] -4[32])))))))
    ?3=v2396[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2382[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2382[32]) 4294967292[33]))))))
    ?5=v2398[1]
    zf=(zerop[1] (add[32] v2382[32] -4[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2382[32] -4[32]))
    tf=v2401[1]
    if=v2402[1]
    df=v2403[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2382[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2382[32]) 4294967292[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2382[32]) (bv-xor[33] 4294967291[33] (add[33] (uextend[33] 33[32] v2382[32]) 4294967292[33]))))))
    iopl0=v2405[1]
    iopl1=v2406[1]
    nt=v2407[1]
    ?15=v2408[1]
    ip=v2379[32]
    memory:
        (add[32] v2383[32] -4[32]): 134514085[32] 4 bytes
    ip = v2379[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax=v2471[32]
    cx=v2442[32]
    dx=v2443[32]
    bx=v2444[32]
    sp=v2445[32]
    bp=v2446[32]
    si=v2447[32]
    di=v2448[32]
    es=v2449[16]
    cs=v2450[16]
    ss=v2451[16]
    ds=v2452[16]
    fs=v2453[16]
    gs=v2454[16]
    cf=v2455[1]
    ?1=v2456[1]
    pf=v2457[1]
    ?3=v2458[1]
    af=v2459[1]
    ?5=v2460[1]
    zf=v2461[1]
    sf=v2462[1]
    tf=v2463[1]
    if=v2464[1]
    df=v2465[1]
    of=v2466[1]
    iopl0=v2467[1]
    iopl1=v2468[1]
    nt=v2469[1]
    ?15=v2470[1]
    ip=134514087[32]
    memory:
        v2444[32]: v2471[32] 4 bytes read-only
    ip = 134514087[32]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax=v2471[32]
    cx=v2442[32]
    dx=v2443[32]
    bx=v2444[32]
    sp=v2445[32]
    bp=v2446[32]
    si=v2447[32]
    di=v2448[32]
    es=v2449[16]
    cs=v2450[16]
    ss=v2451[16]
    ds=v2452[16]
    fs=v2453[16]
    gs=v2454[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2471[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2471[32]) 1[33]))))))
    ?1=v2456[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32])))))))
    ?3=v2458[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2471[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2471[32]) 1[33]))))))
    ?5=v2460[1]
    zf=(zerop[1] (add[32] v2471[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2471[32] 1[32]))
    tf=v2463[1]
    if=v2464[1]
    df=v2465[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2471[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2471[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2471[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2471[32]) 1[33]))))))
    iopl0=v2467[1]
    iopl1=v2468[1]
    nt=v2469[1]
    ?15=v2470[1]
    ip=134514090[32]
    memory:
        v2444[32]: v2471[32] 4 bytes read-only
    ip = 134514090[32]
0x80485aa:jne    0x080485a0
    ax=v2471[32]
    cx=v2442[32]
    dx=v2443[32]
    bx=v2444[32]
    sp=v2445[32]
    bp=v2446[32]
    si=v2447[32]
    di=v2448[32]
    es=v2449[16]
    cs=v2450[16]
    ss=v2451[16]
    ds=v2452[16]
    fs=v2453[16]
    gs=v2454[16]
    cf=(invert[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2471[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2471[32]) 1[33]))))))
    ?1=v2456[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2471[32] 1[32])))))))
    ?3=v2458[1]
    af=(invert[1] (extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2471[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2471[32]) 1[33]))))))
    ?5=v2460[1]
    zf=(zerop[1] (add[32] v2471[32] 1[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2471[32] 1[32]))
    tf=v2463[1]
    if=v2464[1]
    df=v2465[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2471[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2471[32]) 1[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2471[32]) (bv-xor[33] 0[33] (add[33] (uextend[33] 33[32] v2471[32]) 1[33]))))))
    iopl0=v2467[1]
    iopl1=v2468[1]
    nt=v2469[1]
    ?15=v2470[1]
    ip=(ite[32] (invert[1] (zerop[1] (add[32] v2471[32] 1[32]))) 134514080[32] 134514092[32])
    memory:
        v2444[32]: v2471[32] 4 bytes read-only
    ip = (ite[32] (invert[1] (zerop[1] (add[32] v2471[32] 1[32]))) 134514080[32] 134514092[32])
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax=v2534[32]
    cx=v2505[32]
    dx=v2506[32]
    bx=v2507[32]
    sp=(add[32] v2508[32] 4[32])
    bp=v2509[32]
    si=v2510[32]
    di=v2511[32]
    es=v2512[16]
    cs=v2513[16]
    ss=v2514[16]
    ds=v2515[16]
    fs=v2516[16]
    gs=v2517[16]
    cf=v2518[1]
    ?1=v2519[1]
    pf=v2520[1]
    ?3=v2521[1]
    af=v2522[1]
    ?5=v2523[1]
    zf=v2524[1]
    sf=v2525[1]
    tf=v2526[1]
    if=v2527[1]
    df=v2528[1]
    of=v2529[1]
    iopl0=v2530[1]
    iopl1=v2531[1]
    nt=v2532[1]
    ?15=v2533[1]
    ip=134514093[32]
    memory:
        v2508[32]: v2534[32] 4 bytes read-only
    ip = 134514093[32]
0x80485ad:pop    ebx
    ax=v2534[32]
    cx=v2505[32]
    dx=v2506[32]
    bx=v2535[32]
    sp=(add[32] (add[32] v2508[32] 4[32]) 4[32])
    bp=v2509[32]
    si=v2510[32]
    di=v2511[32]
    es=v2512[16]
    cs=v2513[16]
    ss=v2514[16]
    ds=v2515[16]
    fs=v2516[16]
    gs=v2517[16]
    cf=v2518[1]
    ?1=v2519[1]
    pf=v2520[1]
    ?3=v2521[1]
    af=v2522[1]
    ?5=v2523[1]
    zf=v2524[1]
    sf=v2525[1]
    tf=v2526[1]
    if=v2527[1]
    df=v2528[1]
    of=v2529[1]
    iopl0=v2530[1]
    iopl1=v2531[1]
    nt=v2532[1]
    ?15=v2533[1]
    ip=134514094[32]
    memory:
        v2508[32]: v2534[32] 4 bytes read-only
        (add[32] v2508[32] 4[32]): v2535[32] 4 bytes read-only
    ip = 134514094[32]
0x80485ae:pop    ebp
    ax=v2534[32]
    cx=v2505[32]
    dx=v2506[32]
    bx=v2535[32]
    sp=(add[32] (add[32] (add[32] v2508[32] 4[32]) 4[32]) 4[32])
    bp=v2536[32]
    si=v2510[32]
    di=v2511[32]
    es=v2512[16]
    cs=v2513[16]
    ss=v2514[16]
    ds=v2515[16]
    fs=v2516[16]
    gs=v2517[16]
    cf=v2518[1]
    ?1=v2519[1]
    pf=v2520[1]
    ?3=v2521[1]
    af=v2522[1]
    ?5=v2523[1]
    zf=v2524[1]
    sf=v2525[1]
    tf=v2526[1]
    if=v2527[1]
    df=v2528[1]
    of=v2529[1]
    iopl0=v2530[1]
    iopl1=v2531[1]
    nt=v2532[1]
    ?15=v2533[1]
    ip=134514095[32]
    memory:
        v2508[32]: v2534[32] 4 bytes read-only
        (add[32] v2508[32] 4[32]): v2535[32] 4 bytes read-only
        (add[32] (add[32] v2508[32] 4[32]) 4[32]): v2536[32] 4 bytes read-only
    ip = 134514095[32]
0x80485af:ret    
    ax=v2534[32]
    cx=v2505[32]
    dx=v2506[32]
    bx=v2535[32]
    sp=(add[32] (add[32] (add[32] (add[32] v2508[32] 4[32]) 4[32]) 4[32]) 4[32])
    bp=v2536[32]
    si=v2510[32]
    di=v2511[32]
    es=v2512[16]
    cs=v2513[16]
    ss=v2514[16]
    ds=v2515[16]
    fs=v2516[16]
    gs=v2517[16]
    cf=v2518[1]
    ?1=v2519[1]
    pf=v2520[1]
    ?3=v2521[1]
    af=v2522[1]
    ?5=v2523[1]
    zf=v2524[1]
    sf=v2525[1]
    tf=v2526[1]
    if=v2527[1]
    df=v2528[1]
    of=v2529[1]
    iopl0=v2530[1]
    iopl1=v2531[1]
    nt=v2532[1]
    ?15=v2533[1]
    ip=v2537[32]
    memory:
        v2508[32]: v2534[32] 4 bytes read-only
        (add[32] v2508[32] 4[32]): v2535[32] 4 bytes read-only
        (add[32] (add[32] v2508[32] 4[32]) 4[32]): v2536[32] 4 bytes read-only
        (add[32] (add[32] (add[32] v2508[32] 4[32]) 4[32]) 4[32]): v2537[32] 4 bytes read-only
    ip = v2537[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax=v2570[32]
    cx=v2571[32]
    dx=v2572[32]
    bx=v2573[32]
    sp=(add[32] v2574[32] -4[32])
    bp=v2575[32]
    si=v2576[32]
    di=v2577[32]
    es=v2578[16]
    cs=v2579[16]
    ss=v2580[16]
    ds=v2581[16]
    fs=v2582[16]
    gs=v2583[16]
    cf=v2584[1]
    ?1=v2585[1]
    pf=v2586[1]
    ?3=v2587[1]
    af=v2588[1]
    ?5=v2589[1]
    zf=v2590[1]
    sf=v2591[1]
    tf=v2592[1]
    if=v2593[1]
    df=v2594[1]
    of=v2595[1]
    iopl0=v2596[1]
    iopl1=v2597[1]
    nt=v2598[1]
    ?15=v2599[1]
    ip=134514097[32]
    memory:
        (add[32] v2574[32] -4[32]): v2575[32] 4 bytes
    ip = 134514097[32]
0x80485b1:mov    ebp, esp
    ax=v2570[32]
    cx=v2571[32]
    dx=v2572[32]
    bx=v2573[32]
    sp=(add[32] v2574[32] -4[32])
    bp=(add[32] v2574[32] -4[32])
    si=v2576[32]
    di=v2577[32]
    es=v2578[16]
    cs=v2579[16]
    ss=v2580[16]
    ds=v2581[16]
    fs=v2582[16]
    gs=v2583[16]
    cf=v2584[1]
    ?1=v2585[1]
    pf=v2586[1]
    ?3=v2587[1]
    af=v2588[1]
    ?5=v2589[1]
    zf=v2590[1]
    sf=v2591[1]
    tf=v2592[1]
    if=v2593[1]
    df=v2594[1]
    of=v2595[1]
    iopl0=v2596[1]
    iopl1=v2597[1]
    nt=v2598[1]
    ?15=v2599[1]
    ip=134514099[32]
    memory:
        (add[32] v2574[32] -4[32]): v2575[32] 4 bytes
    ip = 134514099[32]
0x80485b3:push   ebx
    ax=v2570[32]
    cx=v2571[32]
    dx=v2572[32]
    bx=v2573[32]
    sp=(add[32] (add[32] v2574[32] -4[32]) -4[32])
    bp=(add[32] v2574[32] -4[32])
    si=v2576[32]
    di=v2577[32]
    es=v2578[16]
    cs=v2579[16]
    ss=v2580[16]
    ds=v2581[16]
    fs=v2582[16]
    gs=v2583[16]
    cf=v2584[1]
    ?1=v2585[1]
    pf=v2586[1]
    ?3=v2587[1]
    af=v2588[1]
    ?5=v2589[1]
    zf=v2590[1]
    sf=v2591[1]
    tf=v2592[1]
    if=v2593[1]
    df=v2594[1]
    of=v2595[1]
    iopl0=v2596[1]
    iopl1=v2597[1]
    nt=v2598[1]
    ?15=v2599[1]
    ip=134514100[32]
    memory:
        (add[32] v2574[32] -4[32]): v2575[32] 4 bytes
        (add[32] (add[32] v2574[32] -4[32]) -4[32]): v2573[32] 4 bytes
    ip = 134514100[32]
0x80485b4:push   eax
    ax=v2570[32]
    cx=v2571[32]
    dx=v2572[32]
    bx=v2573[32]
    sp=(add[32] (add[32] (add[32] v2574[32] -4[32]) -4[32]) -4[32])
    bp=(add[32] v2574[32] -4[32])
    si=v2576[32]
    di=v2577[32]
    es=v2578[16]
    cs=v2579[16]
    ss=v2580[16]
    ds=v2581[16]
    fs=v2582[16]
    gs=v2583[16]
    cf=v2584[1]
    ?1=v2585[1]
    pf=v2586[1]
    ?3=v2587[1]
    af=v2588[1]
    ?5=v2589[1]
    zf=v2590[1]
    sf=v2591[1]
    tf=v2592[1]
    if=v2593[1]
    df=v2594[1]
    of=v2595[1]
    iopl0=v2596[1]
    iopl1=v2597[1]
    nt=v2598[1]
    ?15=v2599[1]
    ip=134514101[32]
    memory:
        (add[32] v2574[32] -4[32]): v2575[32] 4 bytes
        (add[32] (add[32] v2574[32] -4[32]) -4[32]): v2573[32] 4 bytes
        (add[32] (add[32] (add[32] v2574[32] -4[32]) -4[32]) -4[32]): v2570[32] 4 bytes
    ip = 134514101[32]
0x80485b5:call   0x080485ba
    ax=v2570[32]
    cx=v2571[32]
    dx=v2572[32]
    bx=v2573[32]
    sp=(add[32] (add[32] (add[32] (add[32] v2574[32] -4[32]) -4[32]) -4[32]) -4[32])
    bp=(add[32] v2574[32] -4[32])
    si=v2576[32]
    di=v2577[32]
    es=v2578[16]
    cs=v2579[16]
    ss=v2580[16]
    ds=v2581[16]
    fs=v2582[16]
    gs=v2583[16]
    cf=v2584[1]
    ?1=v2585[1]
    pf=v2586[1]
    ?3=v2587[1]
    af=v2588[1]
    ?5=v2589[1]
    zf=v2590[1]
    sf=v2591[1]
    tf=v2592[1]
    if=v2593[1]
    df=v2594[1]
    of=v2595[1]
    iopl0=v2596[1]
    iopl1=v2597[1]
    nt=v2598[1]
    ?15=v2599[1]
    ip=134514106[32]
    memory:
        (add[32] v2574[32] -4[32]): v2575[32] 4 bytes
        (add[32] (add[32] v2574[32] -4[32]) -4[32]): v2573[32] 4 bytes
        (add[32] (add[32] (add[32] v2574[32] -4[32]) -4[32]) -4[32]): v2570[32] 4 bytes
        (add[32] (add[32] (add[32] (add[32] v2574[32] -4[32]) -4[32]) -4[32]) -4[32]): 134514106[32] 4 bytes
    ip = 134514106[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax=v2632[32]
    cx=v2633[32]
    dx=v2634[32]
    bx=v2662[32]
    sp=(add[32] v2636[32] 4[32])
    bp=v2637[32]
    si=v2638[32]
    di=v2639[32]
    es=v2640[16]
    cs=v2641[16]
    ss=v2642[16]
    ds=v2643[16]
    fs=v2644[16]
    gs=v2645[16]
    cf=v2646[1]
    ?1=v2647[1]
    pf=v2648[1]
    ?3=v2649[1]
    af=v2650[1]
    ?5=v2651[1]
    zf=v2652[1]
    sf=v2653[1]
    tf=v2654[1]
    if=v2655[1]
    df=v2656[1]
    of=v2657[1]
    iopl0=v2658[1]
    iopl1=v2659[1]
    nt=v2660[1]
    ?15=v2661[1]
    ip=134514107[32]
    memory:
        v2636[32]: v2662[32] 4 bytes read-only
    ip = 134514107[32]
0x80485bb:add    ebx, 0x0000110e
    ax=v2632[32]
    cx=v2633[32]
    dx=v2634[32]
    bx=(add[32] v2662[32] 4366[32])
    sp=(add[32] v2636[32] 4[32])
    bp=v2637[32]
    si=v2638[32]
    di=v2639[32]
    es=v2640[16]
    cs=v2641[16]
    ss=v2642[16]
    ds=v2643[16]
    fs=v2644[16]
    gs=v2645[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2662[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2662[32]) 4366[33])))))
    ?1=v2647[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32])))))))
    ?3=v2649[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2662[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2662[32]) 4366[33])))))
    ?5=v2651[1]
    zf=(zerop[1] (add[32] v2662[32] 4366[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2662[32] 4366[32]))
    tf=v2654[1]
    if=v2655[1]
    df=v2656[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2662[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2662[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2662[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2662[32]) 4366[33]))))))
    iopl0=v2658[1]
    iopl1=v2659[1]
    nt=v2660[1]
    ?15=v2661[1]
    ip=134514113[32]
    memory:
        v2636[32]: v2662[32] 4 bytes read-only
    ip = 134514113[32]
0x80485c1:call   0x08048390
    ax=v2632[32]
    cx=v2633[32]
    dx=v2634[32]
    bx=(add[32] v2662[32] 4366[32])
    sp=(add[32] (add[32] v2636[32] 4[32]) -4[32])
    bp=v2637[32]
    si=v2638[32]
    di=v2639[32]
    es=v2640[16]
    cs=v2641[16]
    ss=v2642[16]
    ds=v2643[16]
    fs=v2644[16]
    gs=v2645[16]
    cf=(extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2662[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2662[32]) 4366[33])))))
    ?1=v2647[1]
    pf=(invert[1] (bv-xor[1] (bv-xor[1] (bv-xor[1] (extract[1] 0[32] 1[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))) (extract[1] 1[32] 2[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32])))) (bv-xor[1] (extract[1] 2[32] 3[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))) (extract[1] 3[32] 4[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))))) (bv-xor[1] (bv-xor[1] (extract[1] 4[32] 5[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))) (extract[1] 5[32] 6[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32])))) (bv-xor[1] (extract[1] 6[32] 7[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32]))) (extract[1] 7[32] 8[32] (extract[8] 0[32] 8[32] (add[32] v2662[32] 4366[32])))))))
    ?3=v2649[1]
    af=(extract[1] 3[32] 4[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2662[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2662[32]) 4366[33])))))
    ?5=v2651[1]
    zf=(zerop[1] (add[32] v2662[32] 4366[32]))
    sf=(extract[1] 31[32] 32[32] (add[32] v2662[32] 4366[32]))
    tf=v2654[1]
    if=v2655[1]
    df=v2656[1]
    of=(bv-xor[1] (extract[1] 31[32] 32[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2662[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2662[32]) 4366[33]))))) (extract[1] 30[32] 31[32] (extract[32] 1[32] 33[32] (bv-xor[33] (uextend[33] 33[32] v2662[32]) (bv-xor[33] 4366[33] (add[33] (uextend[33] 33[32] v2662[32]) 4366[33]))))))
    iopl0=v2658[1]
    iopl1=v2659[1]
    nt=v2660[1]
    ?15=v2661[1]
    ip=134513552[32]
    memory:
        (add[32] (add[32] v2636[32] 4[32]) -4[32]): 134514118[32] 4 bytes
    ip = 134513552[32]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax=v2725[32]
    cx=v2696[32]
    dx=v2697[32]
    bx=v2698[32]
    sp=(add[32] v2699[32] 4[32])
    bp=v2700[32]
    si=v2701[32]
    di=v2702[32]
    es=v2703[16]
    cs=v2704[16]
    ss=v2705[16]
    ds=v2706[16]
    fs=v2707[16]
    gs=v2708[16]
    cf=v2709[1]
    ?1=v2710[1]
    pf=v2711[1]
    ?3=v2712[1]
    af=v2713[1]
    ?5=v2714[1]
    zf=v2715[1]
    sf=v2716[1]
    tf=v2717[1]
    if=v2718[1]
    df=v2719[1]
    of=v2720[1]
    iopl0=v2721[1]
    iopl1=v2722[1]
    nt=v2723[1]
    ?15=v2724[1]
    ip=134514119[32]
    memory:
        v2699[32]: v2725[32] 4 bytes read-only
    ip = 134514119[32]
0x80485c7:pop    ebx
    ax=v2725[32]
    cx=v2696[32]
    dx=v2697[32]
    bx=v2726[32]
    sp=(add[32] (add[32] v2699[32] 4[32]) 4[32])
    bp=v2700[32]
    si=v2701[32]
    di=v2702[32]
    es=v2703[16]
    cs=v2704[16]
    ss=v2705[16]
    ds=v2706[16]
    fs=v2707[16]
    gs=v2708[16]
    cf=v2709[1]
    ?1=v2710[1]
    pf=v2711[1]
    ?3=v2712[1]
    af=v2713[1]
    ?5=v2714[1]
    zf=v2715[1]
    sf=v2716[1]
    tf=v2717[1]
    if=v2718[1]
    df=v2719[1]
    of=v2720[1]
    iopl0=v2721[1]
    iopl1=v2722[1]
    nt=v2723[1]
    ?15=v2724[1]
    ip=134514120[32]
    memory:
        v2699[32]: v2725[32] 4 bytes read-only
        (add[32] v2699[32] 4[32]): v2726[32] 4 bytes read-only
    ip = 134514120[32]
0x80485c8:leave  
    ax=v2725[32]
    cx=v2696[32]
    dx=v2697[32]
    bx=v2726[32]
    sp=(add[32] v2700[32] 4[32])
    bp=v2727[32]
    si=v2701[32]
    di=v2702[32]
    es=v2703[16]
    cs=v2704[16]
    ss=v2705[16]
    ds=v2706[16]
    fs=v2707[16]
    gs=v2708[16]
    cf=v2709[1]
    ?1=v2710[1]
    pf=v2711[1]
    ?3=v2712[1]
    af=v2713[1]
    ?5=v2714[1]
    zf=v2715[1]
    sf=v2716[1]
    tf=v2717[1]
    if=v2718[1]
    df=v2719[1]
    of=v2720[1]
    iopl0=v2721[1]
    iopl1=v2722[1]
    nt=v2723[1]
    ?15=v2724[1]
    ip=134514121[32]
    memory:
        v2699[32]: v2725[32] 4 bytes read-only
        (add[32] v2699[32] 4[32]): v2726[32] 4 bytes read-only
        v2700[32]: v2727[32] 4 bytes read-only
    ip = 134514121[32]
0x80485c9:ret    
    ax=v2725[32]
    cx=v2696[32]
    dx=v2697[32]
    bx=v2726[32]
    sp=(add[32] (add[32] v2700[32] 4[32]) 4[32])
    bp=v2727[32]
    si=v2701[32]
    di=v2702[32]
    es=v2703[16]
    cs=v2704[16]
    ss=v2705[16]
    ds=v2706[16]
    fs=v2707[16]
    gs=v2708[16]
    cf=v2709[1]
    ?1=v2710[1]
    pf=v2711[1]
    ?3=v2712[1]
    af=v2713[1]
    ?5=v2714[1]
    zf=v2715[1]
    sf=v2716[1]
    tf=v2717[1]
    if=v2718[1]
    df=v2719[1]
    of=v2720[1]
    iopl0=v2721[1]
    iopl1=v2722[1]
    nt=v2723[1]
    ?15=v2724[1]
    ip=v2728[32]
    memory:
        v2699[32]: v2725[32] 4 bytes read-only
        (add[32] v2699[32] 4[32]): v2726[32] 4 bytes read-only
        v2700[32]: v2727[32] 4 bytes read-only
        (add[32] v2700[32] 4[32]): v2728[32] 4 bytes read-only
    ip = v2728[32]
analyzed headers: 1
