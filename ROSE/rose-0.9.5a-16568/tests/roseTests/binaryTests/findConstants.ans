=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v326
    cx = v327
    dx = v328
    bx = v329
    sp = v330-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v331
    si = v332
    di = v333
    es = v334
    cs = v335
    ss = v336
    ds = v337
    fs = v338
    gs = v339
    cf = v340
    ?1 = v341
    pf = v342
    ?3 = v343
    af = v344
    ?5 = v345
    zf = v346
    sf = v347
    tf = v348
    if = v349
    df = v350
    of = v351
    iopl0 = v352
    iopl1 = v353
    nt = v354
    ?15 = v355
    memory = {
        size=4; addr=v330-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v453
    cx = v454
    dx = v455
    bx = v456
    sp = v457-0x4 [from 0x80482d8:call   0x08048580]
    bp = v458
    si = v459
    di = v460
    es = v461
    cs = v462
    ss = v463
    ds = v464
    fs = v465
    gs = v466
    cf = v467
    ?1 = v468
    pf = v469
    ?3 = v470
    af = v471
    ?5 = v472
    zf = v473
    sf = v474
    tf = v475
    if = v476
    df = v477
    of = v478
    iopl0 = v479
    iopl1 = v480
    nt = v481
    ?15 = v482
    memory = {
        size=4; addr=v457-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v580
    cx = v581
    dx = v582
    bx = v583
    sp = v585+0x4 [from 0x80482dd:leave  ]
    bp = v614 [from 0x80482dd:leave  ]
    si = v586
    di = v587
    es = v588
    cs = v589
    ss = v590
    ds = v591
    fs = v592
    gs = v593
    cf = v594
    ?1 = v595
    pf = v596
    ?3 = v597
    af = v598
    ?5 = v599
    zf = v600
    sf = v601
    tf = v602
    if = v603
    df = v604
    of = v605
    iopl0 = v606
    iopl1 = v607
    nt = v608
    ?15 = v609
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v580
    cx = v581
    dx = v582
    bx = v583
    sp = v585+0x8 [from 0x80482de:ret    ]
    bp = v614 [from 0x80482dd:leave  ]
    si = v586
    di = v587
    es = v588
    cs = v589
    ss = v590
    ds = v591
    fs = v592
    gs = v593
    cf = v594
    ?1 = v595
    pf = v596
    ?3 = v597
    af = v598
    ?5 = v599
    zf = v600
    sf = v601
    tf = v602
    if = v603
    df = v604
    of = v605
    iopl0 = v606
    iopl1 = v607
    nt = v608
    ?15 = v609
    memory = {}
    ip = v652 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v714
    cx = v715
    dx = v716
    bx = v717
    sp = v718
    bp = v719
    si = v720
    di = v721
    es = v722
    cs = v723
    ss = v724
    ds = v725
    fs = v726
    gs = v727
    cf = v728
    ?1 = v729
    pf = v730
    ?3 = v731
    af = v732
    ?5 = v733
    zf = v734
    sf = v735
    tf = v736
    if = v737
    df = v738
    of = v739
    iopl0 = v740
    iopl1 = v741
    nt = v742
    ?15 = v743
    memory = {}
    ip = v747 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v809
    cx = v810
    dx = v811
    bx = v812
    sp = v813
    bp = v814
    si = v815
    di = v816
    es = v817
    cs = v818
    ss = v819
    ds = v820
    fs = v821
    gs = v822
    cf = v823
    ?1 = v824
    pf = v825
    ?3 = v826
    af = v827
    ?5 = v828
    zf = v829
    sf = v830
    tf = v831
    if = v832
    df = v833
    of = v834
    iopl0 = v835
    iopl1 = v836
    nt = v837
    ?15 = v838
    memory = {}
    ip = v842 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v904
    cx = v905
    dx = v906
    bx = v907
    sp = v908
    bp = v909
    si = v910
    di = v911
    es = v912
    cs = v913
    ss = v914
    ds = v915
    fs = v916
    gs = v917
    cf = v918
    ?1 = v919
    pf = v920
    ?3 = v921
    af = v922
    ?5 = v923
    zf = v924
    sf = v925
    tf = v926
    if = v927
    df = v928
    of = v929
    iopl0 = v930
    iopl1 = v931
    nt = v932
    ?15 = v933
    memory = {}
    ip = v937 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v999
    cx = v1000
    dx = v1001
    bx = v1002
    sp = v1003
    bp = v1004
    si = v1005
    di = v1006
    es = v1007
    cs = v1008
    ss = v1009
    ds = v1010
    fs = v1011
    gs = v1012
    cf = v1013
    ?1 = v1014
    pf = v1015
    ?3 = v1016
    af = v1017
    ?5 = v1018
    zf = v1019
    sf = v1020
    tf = v1021
    if = v1022
    df = v1023
    of = v1024
    iopl0 = v1025
    iopl1 = v1026
    nt = v1027
    ?15 = v1028
    memory = {}
    ip = v1032 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v1094
    cx = v1095
    dx = v1096
    bx = v1097
    sp = v1098
    bp = v1099
    si = v1100
    di = v1101
    es = v1102
    cs = v1103
    ss = v1104
    ds = v1105
    fs = v1106
    gs = v1107
    cf = v1108
    ?1 = v1109
    pf = v1110
    ?3 = v1111
    af = v1112
    ?5 = v1113
    zf = v1114
    sf = v1115
    tf = v1116
    if = v1117
    df = v1118
    of = v1119
    iopl0 = v1120
    iopl1 = v1121
    nt = v1122
    ?15 = v1123
    memory = {}
    ip = v1127 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v1189
    cx = v1190
    dx = v1191
    bx = v1192
    sp = v1193
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1195
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v1189
    cx = v1190
    dx = v1191
    bx = v1192
    sp = v1193+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1193+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v1204
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v1189
    cx = v1193+0x4 [from 0x8048342:pop    esi]
    dx = v1191
    bx = v1192
    sp = v1344-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v1278 [from 0x8048342:pop    esi]
    di = v1196
    es = v1197
    cs = v1198
    ss = v1199
    ds = v1200
    fs = v1201
    gs = v1202
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v1204
    pf = -v1360-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v1206
    af = <top>
    ?5 = v1208
    zf = v1363 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v1362 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v1211
    if = v1212
    df = v1213
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v1215
    iopl1 = v1216
    nt = v1217
    ?15 = v1218
    memory = {
        size=4; addr=v1344-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v1344-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v1344-0x1c [from 0x8048356:push   esi]; value=v1278 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x18 [from 0x8048355:push   ecx]; value=v1193+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v1344-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v1344-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v1344-0xc [from 0x804834a:push   edx]; value=v1191
        size=4; addr=v1344-0x8 [from 0x8048349:push   esp]; value=v1344-0x4 [from 0x8048348:push   eax]
        size=4; addr=v1344-0x4 [from 0x8048348:push   eax]; value=v1189
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v1786
    cx = v1787
    dx = v1788
    bx = v1789
    sp = v1790
    bp = v1791
    si = v1792
    di = v1793
    es = v1794
    cs = v1795
    ss = v1796
    ds = v1797
    fs = v1798
    gs = v1799
    cf = v1800
    ?1 = v1801
    pf = v1802
    ?3 = v1803
    af = v1804
    ?5 = v1805
    zf = v1806
    sf = v1807
    tf = v1808
    if = v1809
    df = v1810
    of = v1811
    iopl0 = v1812
    iopl1 = v1813
    nt = v1814
    ?15 = v1815
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048362:nop    
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883
    bp = v1884
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {}
    ip = 0x8048363 [from 0x8048362:nop    ]
0x8048363:nop    
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883
    bp = v1884
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {}
    ip = 0x8048364 [from 0x8048363:nop    ]
0x8048364:push   ebp
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x4 [from 0x8048364:push   ebp]
    bp = v1884
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x4 [from 0x8048364:push   ebp]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x8 [from 0x8048367:push   ebx]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0xc [from 0x8048368:push   ecx]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0xc [from 0x8048368:push   ecx]; value=v1880
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v1879
    cx = v1880
    dx = v1881
    bx = v1882
    sp = v1883-0x10 [from 0x8048369:call   0x0804836e]
    bp = v1883-0x4 [from 0x8048364:push   ebp]
    si = v1885
    di = v1886
    es = v1887
    cs = v1888
    ss = v1889
    ds = v1890
    fs = v1891
    gs = v1892
    cf = v1893
    ?1 = v1894
    pf = v1895
    ?3 = v1896
    af = v1897
    ?5 = v1898
    zf = v1899
    sf = v1900
    tf = v1901
    if = v1902
    df = v1903
    of = v1904
    iopl0 = v1905
    iopl1 = v1906
    nt = v1907
    ?15 = v1908
    memory = {
        size=4; addr=v1883-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v1883-0xc [from 0x8048368:push   ecx]; value=v1880
        size=4; addr=v1883-0x8 [from 0x8048367:push   ebx]; value=v1882
        size=4; addr=v1883-0x4 [from 0x8048364:push   ebp]; value=v1884
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v2210
    cx = v2211
    dx = v2212
    bx = v2244 [from 0x804836e:pop    ebx]
    sp = v2214+0x4 [from 0x804836e:pop    ebx]
    bp = v2215
    si = v2216
    di = v2217
    es = v2218
    cs = v2219
    ss = v2220
    ds = v2221
    fs = v2222
    gs = v2223
    cf = v2224
    ?1 = v2225
    pf = v2226
    ?3 = v2227
    af = v2228
    ?5 = v2229
    zf = v2230
    sf = v2231
    tf = v2232
    if = v2233
    df = v2234
    of = v2235
    iopl0 = v2236
    iopl1 = v2237
    nt = v2238
    ?15 = v2239
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v2210
    cx = v2211
    dx = v2212
    bx = v2244+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2214+0x4 [from 0x804836e:pop    ebx]
    bp = v2215
    si = v2216
    di = v2217
    es = v2218
    cs = v2219
    ss = v2220
    ds = v2221
    fs = v2222
    gs = v2223
    cf = v2306 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2225
    pf = -v2301-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2227
    af = v2305 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2229
    zf = v2304 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2303 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2232
    if = v2233
    df = v2234
    of = v2309 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2236
    iopl1 = v2237
    nt = v2238
    ?15 = v2239
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v2210
    cx = v2211
    dx = v2345 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2244+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2214+0x4 [from 0x804836e:pop    ebx]
    bp = v2215
    si = v2216
    di = v2217
    es = v2218
    cs = v2219
    ss = v2220
    ds = v2221
    fs = v2222
    gs = v2223
    cf = v2306 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v2225
    pf = -v2301-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v2227
    af = v2305 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v2229
    zf = v2304 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v2303 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v2232
    if = v2233
    df = v2234
    of = v2309 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v2236
    iopl1 = v2237
    nt = v2238
    ?15 = v2239
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v2210
    cx = v2211
    dx = v2345 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2244+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2214+0x4 [from 0x804836e:pop    ebx]
    bp = v2215
    si = v2216
    di = v2217
    es = v2218
    cs = v2219
    ss = v2220
    ds = v2221
    fs = v2222
    gs = v2223
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2225
    pf = -v2394-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2227
    af = <top>
    ?5 = v2229
    zf = v2397 [from 0x804837b:test   edx, edx]
    sf = v2396 [from 0x804837b:test   edx, edx]
    tf = v2232
    if = v2233
    df = v2234
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2236
    iopl1 = v2237
    nt = v2238
    ?15 = v2239
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v2210
    cx = v2211
    dx = v2345 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v2244+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v2214+0x4 [from 0x804836e:pop    ebx]
    bp = v2215
    si = v2216
    di = v2217
    es = v2218
    cs = v2219
    ss = v2220
    ds = v2221
    fs = v2222
    gs = v2223
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v2225
    pf = -v2394-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v2227
    af = <top>
    ?5 = v2229
    zf = v2397 [from 0x804837b:test   edx, edx]
    sf = v2396 [from 0x804837b:test   edx, edx]
    tf = v2232
    if = v2233
    df = v2234
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v2236
    iopl1 = v2237
    nt = v2238
    ?15 = v2239
    memory = {}
    ip = v2434 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v2556
    cx = v2557
    dx = v2558
    bx = v2559
    sp = v2560-0x4 [from 0x804837f:call   0x08048330]
    bp = v2561
    si = v2562
    di = v2563
    es = v2564
    cs = v2565
    ss = v2566
    ds = v2567
    fs = v2568
    gs = v2569
    cf = v2570
    ?1 = v2571
    pf = v2572
    ?3 = v2573
    af = v2574
    ?5 = v2575
    zf = v2576
    sf = v2577
    tf = v2578
    if = v2579
    df = v2580
    of = v2581
    iopl0 = v2582
    iopl1 = v2583
    nt = v2584
    ?15 = v2585
    memory = {
        size=4; addr=v2560-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v2717 [from 0x8048384:pop    eax]
    cx = v2684
    dx = v2685
    bx = v2686
    sp = v2687+0x4 [from 0x8048384:pop    eax]
    bp = v2688
    si = v2689
    di = v2690
    es = v2691
    cs = v2692
    ss = v2693
    ds = v2694
    fs = v2695
    gs = v2696
    cf = v2697
    ?1 = v2698
    pf = v2699
    ?3 = v2700
    af = v2701
    ?5 = v2702
    zf = v2703
    sf = v2704
    tf = v2705
    if = v2706
    df = v2707
    of = v2708
    iopl0 = v2709
    iopl1 = v2710
    nt = v2711
    ?15 = v2712
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v2717 [from 0x8048384:pop    eax]
    cx = v2684
    dx = v2685
    bx = v2753 [from 0x8048385:pop    ebx]
    sp = v2687+0x8 [from 0x8048385:pop    ebx]
    bp = v2688
    si = v2689
    di = v2690
    es = v2691
    cs = v2692
    ss = v2693
    ds = v2694
    fs = v2695
    gs = v2696
    cf = v2697
    ?1 = v2698
    pf = v2699
    ?3 = v2700
    af = v2701
    ?5 = v2702
    zf = v2703
    sf = v2704
    tf = v2705
    if = v2706
    df = v2707
    of = v2708
    iopl0 = v2709
    iopl1 = v2710
    nt = v2711
    ?15 = v2712
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v2717 [from 0x8048384:pop    eax]
    cx = v2684
    dx = v2685
    bx = v2753 [from 0x8048385:pop    ebx]
    sp = v2688+0x4 [from 0x8048386:leave  ]
    bp = v2789 [from 0x8048386:leave  ]
    si = v2689
    di = v2690
    es = v2691
    cs = v2692
    ss = v2693
    ds = v2694
    fs = v2695
    gs = v2696
    cf = v2697
    ?1 = v2698
    pf = v2699
    ?3 = v2700
    af = v2701
    ?5 = v2702
    zf = v2703
    sf = v2704
    tf = v2705
    if = v2706
    df = v2707
    of = v2708
    iopl0 = v2709
    iopl1 = v2710
    nt = v2711
    ?15 = v2712
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v2717 [from 0x8048384:pop    eax]
    cx = v2684
    dx = v2685
    bx = v2753 [from 0x8048385:pop    ebx]
    sp = v2688+0x8 [from 0x8048387:ret    ]
    bp = v2789 [from 0x8048386:leave  ]
    si = v2689
    di = v2690
    es = v2691
    cs = v2692
    ss = v2693
    ds = v2694
    fs = v2695
    gs = v2696
    cf = v2697
    ?1 = v2698
    pf = v2699
    ?3 = v2700
    af = v2701
    ?5 = v2702
    zf = v2703
    sf = v2704
    tf = v2705
    if = v2706
    df = v2707
    of = v2708
    iopl0 = v2709
    iopl1 = v2710
    nt = v2711
    ?15 = v2712
    memory = {}
    ip = v2827 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048388:nop    
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {}
    ip = 0x8048389 [from 0x8048388:nop    ]
0x8048389:nop    
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {}
    ip = 0x804838a [from 0x8048389:nop    ]
0x804838a:nop    
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {}
    ip = 0x804838b [from 0x804838a:nop    ]
0x804838b:nop    
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {}
    ip = 0x804838c [from 0x804838b:nop    ]
0x804838c:nop    
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {}
    ip = 0x804838d [from 0x804838c:nop    ]
0x804838d:nop    
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {}
    ip = 0x804838e [from 0x804838d:nop    ]
0x804838e:nop    
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {}
    ip = 0x804838f [from 0x804838e:nop    ]
0x804838f:nop    
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {}
    ip = 0x8048390 [from 0x804838f:nop    ]
0x8048390:push   ebp
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893-0x4 [from 0x8048390:push   ebp]
    bp = v2894
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {
        size=4; addr=v2893-0x4 [from 0x8048390:push   ebp]; value=v2894
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893-0x4 [from 0x8048390:push   ebp]
    bp = v2893-0x4 [from 0x8048390:push   ebp]
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = v2903
    ?1 = v2904
    pf = v2905
    ?3 = v2906
    af = v2907
    ?5 = v2908
    zf = v2909
    sf = v2910
    tf = v2911
    if = v2912
    df = v2913
    of = v2914
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {
        size=4; addr=v2893-0x4 [from 0x8048390:push   ebp]; value=v2894
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2893-0x4 [from 0x8048390:push   ebp]
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = -v3276-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v2904
    pf = -v3270-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v2906
    af = -v3274-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v2908
    zf = v3273 [from 0x8048393:sub    esp, 0x08]
    sf = v3272 [from 0x8048393:sub    esp, 0x08]
    tf = v2911
    if = v2912
    df = v2913
    of = v3280 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {
        size=4; addr=v2893-0x4 [from 0x8048390:push   ebp]; value=v2894
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2893-0x4 [from 0x8048390:push   ebp]
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = -v3348-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v2904
    pf = -v3342-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v2906
    af = -v3346-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v2908
    zf = v3345 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3344 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v2911
    if = v2912
    df = v2913
    of = v3352 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {
        size=4; addr=v2893-0x4 [from 0x8048390:push   ebp]; value=v2894
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v2889
    cx = v2890
    dx = v2891
    bx = v2892
    sp = v2893-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v2893-0x4 [from 0x8048390:push   ebp]
    si = v2895
    di = v2896
    es = v2897
    cs = v2898
    ss = v2899
    ds = v2900
    fs = v2901
    gs = v2902
    cf = -v3348-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v2904
    pf = -v3342-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v2906
    af = -v3346-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v2908
    zf = v3345 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v3344 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v2911
    if = v2912
    df = v2913
    of = v3352 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v2915
    iopl1 = v2916
    nt = v2917
    ?15 = v2918
    memory = {
        size=4; addr=v2893-0x4 [from 0x8048390:push   ebp]; value=v2894
    }
    ip = v3387 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v3542 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3510
    dx = v3511
    bx = v3512
    sp = v3513
    bp = v3514
    si = v3515
    di = v3516
    es = v3517
    cs = v3518
    ss = v3519
    ds = v3520
    fs = v3521
    gs = v3522
    cf = v3523
    ?1 = v3524
    pf = v3525
    ?3 = v3526
    af = v3527
    ?5 = v3528
    zf = v3529
    sf = v3530
    tf = v3531
    if = v3532
    df = v3533
    of = v3534
    iopl0 = v3535
    iopl1 = v3536
    nt = v3537
    ?15 = v3538
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v3542 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3510
    dx = v3576 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3512
    sp = v3513
    bp = v3514
    si = v3515
    di = v3516
    es = v3517
    cs = v3518
    ss = v3519
    ds = v3520
    fs = v3521
    gs = v3522
    cf = v3523
    ?1 = v3524
    pf = v3525
    ?3 = v3526
    af = v3527
    ?5 = v3528
    zf = v3529
    sf = v3530
    tf = v3531
    if = v3532
    df = v3533
    of = v3534
    iopl0 = v3535
    iopl1 = v3536
    nt = v3537
    ?15 = v3538
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v3542 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3510
    dx = v3576 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3512
    sp = v3513
    bp = v3514
    si = v3515
    di = v3516
    es = v3517
    cs = v3518
    ss = v3519
    ds = v3520
    fs = v3521
    gs = v3522
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3524
    pf = -v3625-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3526
    af = <top>
    ?5 = v3528
    zf = v3628 [from 0x80483a6:test   edx, edx]
    sf = v3627 [from 0x80483a6:test   edx, edx]
    tf = v3531
    if = v3532
    df = v3533
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3535
    iopl1 = v3536
    nt = v3537
    ?15 = v3538
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v3542 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v3510
    dx = v3576 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v3512
    sp = v3513
    bp = v3514
    si = v3515
    di = v3516
    es = v3517
    cs = v3518
    ss = v3519
    ds = v3520
    fs = v3521
    gs = v3522
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v3524
    pf = -v3625-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v3526
    af = <top>
    ?5 = v3528
    zf = v3628 [from 0x80483a6:test   edx, edx]
    sf = v3627 [from 0x80483a6:test   edx, edx]
    tf = v3531
    if = v3532
    df = v3533
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v3535
    iopl1 = v3536
    nt = v3537
    ?15 = v3538
    memory = {}
    ip = v3665 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v3787
    cx = v3788
    dx = v3789
    bx = v3790
    sp = v3791
    bp = v3792
    si = v3793 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3794
    es = v3795
    cs = v3796
    ss = v3797
    ds = v3798
    fs = v3799
    gs = v3800
    cf = v3801
    ?1 = v3802
    pf = v3803
    ?3 = v3804
    af = v3805
    ?5 = v3806
    zf = v3807
    sf = v3808
    tf = v3809
    if = v3810
    df = v3811
    of = v3812
    iopl0 = v3813
    iopl1 = v3814
    nt = v3815
    ?15 = v3816
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v3787+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3788
    dx = v3789
    bx = v3790
    sp = v3791
    bp = v3792
    si = v3793 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3794
    es = v3795
    cs = v3796
    ss = v3797
    ds = v3798
    fs = v3799
    gs = v3800
    cf = v3881 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3802
    pf = -v3876-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3804
    af = v3880 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3806
    zf = v3879 [from 0x80483b0:add    eax, 0x04]
    sf = v3878 [from 0x80483b0:add    eax, 0x04]
    tf = v3809
    if = v3810
    df = v3811
    of = v3884 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3813
    iopl1 = v3814
    nt = v3815
    ?15 = v3816
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v3787+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3788
    dx = v3789
    bx = v3790
    sp = v3791
    bp = v3792
    si = v3793 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3794
    es = v3795
    cs = v3796
    ss = v3797
    ds = v3798
    fs = v3799
    gs = v3800
    cf = v3881 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3802
    pf = -v3876-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3804
    af = v3880 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3806
    zf = v3879 [from 0x80483b0:add    eax, 0x04]
    sf = v3878 [from 0x80483b0:add    eax, 0x04]
    tf = v3809
    if = v3810
    df = v3811
    of = v3884 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3813
    iopl1 = v3814
    nt = v3815
    ?15 = v3816
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v3787+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v3787+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v3788
    dx = v3789
    bx = v3790
    sp = v3791-0x4 [from 0x80483b8:call   edx]
    bp = v3792
    si = v3793 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v3794
    es = v3795
    cs = v3796
    ss = v3797
    ds = v3798
    fs = v3799
    gs = v3800
    cf = v3881 [from 0x80483b0:add    eax, 0x04]
    ?1 = v3802
    pf = -v3876-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v3804
    af = v3880 [from 0x80483b0:add    eax, 0x04]
    ?5 = v3806
    zf = v3879 [from 0x80483b0:add    eax, 0x04]
    sf = v3878 [from 0x80483b0:add    eax, 0x04]
    tf = v3809
    if = v3810
    df = v3811
    of = v3884 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v3813
    iopl1 = v3814
    nt = v3815
    ?15 = v3816
    memory = {
        size=4; addr=v3791-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v3789
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v4050 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4018
    dx = v4019
    bx = v4020
    sp = v4021
    bp = v4022
    si = v4023
    di = v4024
    es = v4025
    cs = v4026
    ss = v4027
    ds = v4028
    fs = v4029
    gs = v4030
    cf = v4031
    ?1 = v4032
    pf = v4033
    ?3 = v4034
    af = v4035
    ?5 = v4036
    zf = v4037
    sf = v4038
    tf = v4039
    if = v4040
    df = v4041
    of = v4042
    iopl0 = v4043
    iopl1 = v4044
    nt = v4045
    ?15 = v4046
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v4050 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4018
    dx = v4084 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4020
    sp = v4021
    bp = v4022
    si = v4023
    di = v4024
    es = v4025
    cs = v4026
    ss = v4027
    ds = v4028
    fs = v4029
    gs = v4030
    cf = v4031
    ?1 = v4032
    pf = v4033
    ?3 = v4034
    af = v4035
    ?5 = v4036
    zf = v4037
    sf = v4038
    tf = v4039
    if = v4040
    df = v4041
    of = v4042
    iopl0 = v4043
    iopl1 = v4044
    nt = v4045
    ?15 = v4046
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v4050 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4018
    dx = v4084 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4020
    sp = v4021
    bp = v4022
    si = v4023
    di = v4024
    es = v4025
    cs = v4026
    ss = v4027
    ds = v4028
    fs = v4029
    gs = v4030
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4032
    pf = -v4133-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4034
    af = <top>
    ?5 = v4036
    zf = v4136 [from 0x80483c1:test   edx, edx]
    sf = v4135 [from 0x80483c1:test   edx, edx]
    tf = v4039
    if = v4040
    df = v4041
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4043
    iopl1 = v4044
    nt = v4045
    ?15 = v4046
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v4050 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4018
    dx = v4084 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v4020
    sp = v4021
    bp = v4022
    si = v4023
    di = v4024
    es = v4025
    cs = v4026
    ss = v4027
    ds = v4028
    fs = v4029
    gs = v4030
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v4032
    pf = -v4133-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v4034
    af = <top>
    ?5 = v4036
    zf = v4136 [from 0x80483c1:test   edx, edx]
    sf = v4135 [from 0x80483c1:test   edx, edx]
    tf = v4039
    if = v4040
    df = v4041
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v4043
    iopl1 = v4044
    nt = v4045
    ?15 = v4046
    memory = {}
    ip = v4174 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v4296
    cx = v4297
    dx = v4298
    bx = v4299
    sp = v4300
    bp = v4301
    si = v4302
    di = v4303
    es = v4304
    cs = v4305
    ss = v4306
    ds = v4307
    fs = v4308
    gs = v4309
    cf = v4310
    ?1 = v4311
    pf = v4312
    ?3 = v4313
    af = v4314
    ?5 = v4315
    zf = v4316
    sf = v4317
    tf = v4318
    if = v4319
    df = v4320
    of = v4321
    iopl0 = v4322
    iopl1 = v4323
    nt = v4324
    ?15 = v4325
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v4296
    cx = v4297
    dx = v4298
    bx = v4299
    sp = v4301+0x4 [from 0x80483cc:leave  ]
    bp = v4366 [from 0x80483cc:leave  ]
    si = v4302
    di = v4303
    es = v4304
    cs = v4305
    ss = v4306
    ds = v4307
    fs = v4308
    gs = v4309
    cf = v4310
    ?1 = v4311
    pf = v4312
    ?3 = v4313
    af = v4314
    ?5 = v4315
    zf = v4316
    sf = v4317
    tf = v4318
    if = v4319
    df = v4320
    of = v4321
    iopl0 = v4322
    iopl1 = v4323
    nt = v4324
    ?15 = v4325
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v4296
    cx = v4297
    dx = v4298
    bx = v4299
    sp = v4301+0x8 [from 0x80483cd:ret    ]
    bp = v4366 [from 0x80483cc:leave  ]
    si = v4302
    di = v4303
    es = v4304
    cs = v4305
    ss = v4306
    ds = v4307
    fs = v4308
    gs = v4309
    cf = v4310
    ?1 = v4311
    pf = v4312
    ?3 = v4313
    af = v4314
    ?5 = v4315
    zf = v4316
    sf = v4317
    tf = v4318
    if = v4319
    df = v4320
    of = v4321
    iopl0 = v4322
    iopl1 = v4323
    nt = v4324
    ?15 = v4325
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v4404 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483d0:push   ebp
    ax = v4466
    cx = v4467
    dx = v4468
    bx = v4469
    sp = v4470-0x4 [from 0x80483d0:push   ebp]
    bp = v4471
    si = v4472
    di = v4473
    es = v4474
    cs = v4475
    ss = v4476
    ds = v4477
    fs = v4478
    gs = v4479
    cf = v4480
    ?1 = v4481
    pf = v4482
    ?3 = v4483
    af = v4484
    ?5 = v4485
    zf = v4486
    sf = v4487
    tf = v4488
    if = v4489
    df = v4490
    of = v4491
    iopl0 = v4492
    iopl1 = v4493
    nt = v4494
    ?15 = v4495
    memory = {
        size=4; addr=v4470-0x4 [from 0x80483d0:push   ebp]; value=v4471
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v4466
    cx = v4467
    dx = v4468
    bx = v4469
    sp = v4470-0x4 [from 0x80483d0:push   ebp]
    bp = v4470-0x4 [from 0x80483d0:push   ebp]
    si = v4472
    di = v4473
    es = v4474
    cs = v4475
    ss = v4476
    ds = v4477
    fs = v4478
    gs = v4479
    cf = v4480
    ?1 = v4481
    pf = v4482
    ?3 = v4483
    af = v4484
    ?5 = v4485
    zf = v4486
    sf = v4487
    tf = v4488
    if = v4489
    df = v4490
    of = v4491
    iopl0 = v4492
    iopl1 = v4493
    nt = v4494
    ?15 = v4495
    memory = {
        size=4; addr=v4470-0x4 [from 0x80483d0:push   ebp]; value=v4471
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v4466
    cx = v4467
    dx = v4468
    bx = v4469
    sp = v4470-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4470-0x4 [from 0x80483d0:push   ebp]
    si = v4472
    di = v4473
    es = v4474
    cs = v4475
    ss = v4476
    ds = v4477
    fs = v4478
    gs = v4479
    cf = -v4597-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4481
    pf = -v4591-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4483
    af = -v4595-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4485
    zf = v4594 [from 0x80483d3:sub    esp, 0x08]
    sf = v4593 [from 0x80483d3:sub    esp, 0x08]
    tf = v4488
    if = v4489
    df = v4490
    of = v4601 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4492
    iopl1 = v4493
    nt = v4494
    ?15 = v4495
    memory = {
        size=4; addr=v4470-0x4 [from 0x80483d0:push   ebp]; value=v4471
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v4636 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4467
    dx = v4468
    bx = v4469
    sp = v4470-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4470-0x4 [from 0x80483d0:push   ebp]
    si = v4472
    di = v4473
    es = v4474
    cs = v4475
    ss = v4476
    ds = v4477
    fs = v4478
    gs = v4479
    cf = -v4597-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v4481
    pf = -v4591-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v4483
    af = -v4595-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v4485
    zf = v4594 [from 0x80483d3:sub    esp, 0x08]
    sf = v4593 [from 0x80483d3:sub    esp, 0x08]
    tf = v4488
    if = v4489
    df = v4490
    of = v4601 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v4492
    iopl1 = v4493
    nt = v4494
    ?15 = v4495
    memory = {
        size=4; addr=v4470-0x4 [from 0x80483d0:push   ebp]; value=v4471
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v4636 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4467
    dx = v4468
    bx = v4469
    sp = v4470-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4470-0x4 [from 0x80483d0:push   ebp]
    si = v4472
    di = v4473
    es = v4474
    cs = v4475
    ss = v4476
    ds = v4477
    fs = v4478
    gs = v4479
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4481
    pf = -v4685-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4483
    af = <top>
    ?5 = v4485
    zf = v4688 [from 0x80483db:test   eax, eax]
    sf = v4687 [from 0x80483db:test   eax, eax]
    tf = v4488
    if = v4489
    df = v4490
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4492
    iopl1 = v4493
    nt = v4494
    ?15 = v4495
    memory = {
        size=4; addr=v4470-0x4 [from 0x80483d0:push   ebp]; value=v4471
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v4636 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v4467
    dx = v4468
    bx = v4469
    sp = v4470-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v4470-0x4 [from 0x80483d0:push   ebp]
    si = v4472
    di = v4473
    es = v4474
    cs = v4475
    ss = v4476
    ds = v4477
    fs = v4478
    gs = v4479
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v4481
    pf = -v4685-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v4483
    af = <top>
    ?5 = v4485
    zf = v4688 [from 0x80483db:test   eax, eax]
    sf = v4687 [from 0x80483db:test   eax, eax]
    tf = v4488
    if = v4489
    df = v4490
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v4492
    iopl1 = v4493
    nt = v4494
    ?15 = v4495
    memory = {
        size=4; addr=v4470-0x4 [from 0x80483d0:push   ebp]; value=v4471
    }
    ip = v4725 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4848
    dx = v4849
    bx = v4850
    sp = v4851
    bp = v4852
    si = v4853
    di = v4854
    es = v4855
    cs = v4856
    ss = v4857
    ds = v4858
    fs = v4859
    gs = v4860
    cf = v4861
    ?1 = v4862
    pf = v4863
    ?3 = v4864
    af = v4865
    ?5 = v4866
    zf = v4867
    sf = v4868
    tf = v4869
    if = v4870
    df = v4871
    of = v4872
    iopl0 = v4873
    iopl1 = v4874
    nt = v4875
    ?15 = v4876
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4848
    dx = v4849
    bx = v4850
    sp = v4851
    bp = v4852
    si = v4853
    di = v4854
    es = v4855
    cs = v4856
    ss = v4857
    ds = v4858
    fs = v4859
    gs = v4860
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4862
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4864
    af = <top>
    ?5 = v4866
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4869
    if = v4870
    df = v4871
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4873
    iopl1 = v4874
    nt = v4875
    ?15 = v4876
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4848
    dx = v4849
    bx = v4850
    sp = v4851
    bp = v4852
    si = v4853
    di = v4854
    es = v4855
    cs = v4856
    ss = v4857
    ds = v4858
    fs = v4859
    gs = v4860
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4862
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4864
    af = <top>
    ?5 = v4866
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4869
    if = v4870
    df = v4871
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4873
    iopl1 = v4874
    nt = v4875
    ?15 = v4876
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4848
    dx = v4849
    bx = v4850
    sp = v4852
    bp = v4852
    si = v4853
    di = v4854
    es = v4855
    cs = v4856
    ss = v4857
    ds = v4858
    fs = v4859
    gs = v4860
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4862
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4864
    af = <top>
    ?5 = v4866
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4869
    if = v4870
    df = v4871
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4873
    iopl1 = v4874
    nt = v4875
    ?15 = v4876
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4848
    dx = v4849
    bx = v4850
    sp = v4852+0x4 [from 0x8048402:pop    ebp]
    bp = v5035 [from 0x8048402:pop    ebp]
    si = v4853
    di = v4854
    es = v4855
    cs = v4856
    ss = v4857
    ds = v4858
    fs = v4859
    gs = v4860
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4862
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4864
    af = <top>
    ?5 = v4866
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4869
    if = v4870
    df = v4871
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4873
    iopl1 = v4874
    nt = v4875
    ?15 = v4876
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v4848
    dx = v4849
    bx = v4850
    sp = v4852+0x8 [from 0x8048403:ret    ]
    bp = v5035 [from 0x8048402:pop    ebp]
    si = v4853
    di = v4854
    es = v4855
    cs = v4856
    ss = v4857
    ds = v4858
    fs = v4859
    gs = v4860
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v4862
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v4864
    af = <top>
    ?5 = v4866
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v4869
    if = v4870
    df = v4871
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v4873
    iopl1 = v4874
    nt = v4875
    ?15 = v4876
    memory = {}
    ip = v5073 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048404:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x8048405 [from 0x8048404:nop    ]
0x8048405:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x8048406 [from 0x8048405:nop    ]
0x8048406:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x8048407 [from 0x8048406:nop    ]
0x8048407:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x8048408 [from 0x8048407:nop    ]
0x8048408:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x8048409 [from 0x8048408:nop    ]
0x8048409:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x804840a [from 0x8048409:nop    ]
0x804840a:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x804840b [from 0x804840a:nop    ]
0x804840b:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x804840c [from 0x804840b:nop    ]
0x804840c:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x804840d [from 0x804840c:nop    ]
0x804840d:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x804840e [from 0x804840d:nop    ]
0x804840e:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x804840f [from 0x804840e:nop    ]
0x804840f:nop    
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {}
    ip = 0x8048410 [from 0x804840f:nop    ]
0x8048410:push   ebp
    ax = v5135
    cx = v5136
    dx = v5137
    bx = v5138
    sp = v5139-0x4 [from 0x8048410:push   ebp]
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5139-0x4 [from 0x8048410:push   ebp]
    bp = v5140
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5139-0x4 [from 0x8048410:push   ebp]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = v5149
    ?1 = v5150
    pf = v5151
    ?3 = v5152
    af = v5153
    ?5 = v5154
    zf = v5155
    sf = v5156
    tf = v5157
    if = v5158
    df = v5159
    of = v5160
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5139-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = -v5683-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v5150
    pf = -v5677-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v5152
    af = -v5681-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v5154
    zf = v5680 [from 0x8048418:sub    esp, 0x08]
    sf = v5679 [from 0x8048418:sub    esp, 0x08]
    tf = v5157
    if = v5158
    df = v5159
    of = v5687 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5721 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5150
    pf = -v5737-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5152
    af = <top>
    ?5 = v5154
    zf = v5740 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5739 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5157
    if = v5158
    df = v5159
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5139-0x4 [from 0x8048410:push   ebp]; value=v5140
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5721 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5150
    pf = -v5737-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5152
    af = <top>
    ?5 = v5154
    zf = v5740 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5739 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5157
    if = v5158
    df = v5159
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5721+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5721 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5150
    pf = -v5737-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5152
    af = <top>
    ?5 = v5154
    zf = v5740 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5739 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5157
    if = v5158
    df = v5159
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5721 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5721+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v5135
    cx = v5136
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v5138
    sp = v5721-0x4 [from 0x8048429:call   0x080482f0]
    bp = v5139-0x4 [from 0x8048410:push   ebp]
    si = v5141
    di = v5142
    es = v5143
    cs = v5144
    ss = v5145
    ds = v5146
    fs = v5147
    gs = v5148
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v5150
    pf = -v5737-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v5152
    af = <top>
    ?5 = v5154
    zf = v5740 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v5739 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v5157
    if = v5158
    df = v5159
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v5161
    iopl1 = v5162
    nt = v5163
    ?15 = v5164
    memory = {
        size=4; addr=v5721 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v5721+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v5721-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v5943
    cx = v5944
    dx = v5945
    bx = v5946
    sp = v5948
    bp = v5948
    si = v5949
    di = v5950
    es = v5951
    cs = v5952
    ss = v5953
    ds = v5954
    fs = v5955
    gs = v5956
    cf = v5957
    ?1 = v5958
    pf = v5959
    ?3 = v5960
    af = v5961
    ?5 = v5962
    zf = v5963
    sf = v5964
    tf = v5965
    if = v5966
    df = v5967
    of = v5968
    iopl0 = v5969
    iopl1 = v5970
    nt = v5971
    ?15 = v5972
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5944
    dx = v5945
    bx = v5946
    sp = v5948
    bp = v5948
    si = v5949
    di = v5950
    es = v5951
    cs = v5952
    ss = v5953
    ds = v5954
    fs = v5955
    gs = v5956
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5958
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5960
    af = <top>
    ?5 = v5962
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5965
    if = v5966
    df = v5967
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5969
    iopl1 = v5970
    nt = v5971
    ?15 = v5972
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5944
    dx = v5945
    bx = v5946
    sp = v5948+0x4 [from 0x8048432:pop    ebp]
    bp = v6064 [from 0x8048432:pop    ebp]
    si = v5949
    di = v5950
    es = v5951
    cs = v5952
    ss = v5953
    ds = v5954
    fs = v5955
    gs = v5956
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5958
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5960
    af = <top>
    ?5 = v5962
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5965
    if = v5966
    df = v5967
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5969
    iopl1 = v5970
    nt = v5971
    ?15 = v5972
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v5944
    dx = v5945
    bx = v5946
    sp = v5948+0x8 [from 0x8048433:ret    ]
    bp = v6064 [from 0x8048432:pop    ebp]
    si = v5949
    di = v5950
    es = v5951
    cs = v5952
    ss = v5953
    ds = v5954
    fs = v5955
    gs = v5956
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v5958
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v5960
    af = <top>
    ?5 = v5962
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v5965
    if = v5966
    df = v5967
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v5969
    iopl1 = v5970
    nt = v5971
    ?15 = v5972
    memory = {}
    ip = v6102 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048440:push   ebp
    ax = v6164
    cx = v6165
    dx = v6166
    bx = v6167
    sp = v6168-0x4 [from 0x8048440:push   ebp]
    bp = v6169
    si = v6170
    di = v6171
    es = v6172
    cs = v6173
    ss = v6174
    ds = v6175
    fs = v6176
    gs = v6177
    cf = v6178
    ?1 = v6179
    pf = v6180
    ?3 = v6181
    af = v6182
    ?5 = v6183
    zf = v6184
    sf = v6185
    tf = v6186
    if = v6187
    df = v6188
    of = v6189
    iopl0 = v6190
    iopl1 = v6191
    nt = v6192
    ?15 = v6193
    memory = {
        size=4; addr=v6168-0x4 [from 0x8048440:push   ebp]; value=v6169
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v6164
    cx = v6165
    dx = v6166
    bx = v6167
    sp = v6168-0x4 [from 0x8048440:push   ebp]
    bp = v6168-0x4 [from 0x8048440:push   ebp]
    si = v6170
    di = v6171
    es = v6172
    cs = v6173
    ss = v6174
    ds = v6175
    fs = v6176
    gs = v6177
    cf = v6178
    ?1 = v6179
    pf = v6180
    ?3 = v6181
    af = v6182
    ?5 = v6183
    zf = v6184
    sf = v6185
    tf = v6186
    if = v6187
    df = v6188
    of = v6189
    iopl0 = v6190
    iopl1 = v6191
    nt = v6192
    ?15 = v6193
    memory = {
        size=4; addr=v6168-0x4 [from 0x8048440:push   ebp]; value=v6169
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v6164
    cx = v6165
    dx = v6166
    bx = v6167
    sp = v6168-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v6168-0x4 [from 0x8048440:push   ebp]
    si = v6170
    di = v6171
    es = v6172
    cs = v6173
    ss = v6174
    ds = v6175
    fs = v6176
    gs = v6177
    cf = -v6295-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6179
    pf = -v6289-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6181
    af = -v6293-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6183
    zf = v6292 [from 0x8048443:sub    esp, 0x08]
    sf = v6291 [from 0x8048443:sub    esp, 0x08]
    tf = v6186
    if = v6187
    df = v6188
    of = v6299 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6190
    iopl1 = v6191
    nt = v6192
    ?15 = v6193
    memory = {
        size=4; addr=v6168-0x4 [from 0x8048440:push   ebp]; value=v6169
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6164
    cx = v6165
    dx = v6166
    bx = v6167
    sp = v6168-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v6168-0x4 [from 0x8048440:push   ebp]
    si = v6170
    di = v6171
    es = v6172
    cs = v6173
    ss = v6174
    ds = v6175
    fs = v6176
    gs = v6177
    cf = -v6295-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6179
    pf = -v6289-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6181
    af = -v6293-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6183
    zf = v6292 [from 0x8048443:sub    esp, 0x08]
    sf = v6291 [from 0x8048443:sub    esp, 0x08]
    tf = v6186
    if = v6187
    df = v6188
    of = v6299 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6190
    iopl1 = v6191
    nt = v6192
    ?15 = v6193
    memory = {
        size=4; addr=v6168-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6168-0x4 [from 0x8048440:push   ebp]; value=v6169
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v6164
    cx = v6165
    dx = v6166
    bx = v6167
    sp = v6168-0x10 [from 0x804844d:call   0x08048300]
    bp = v6168-0x4 [from 0x8048440:push   ebp]
    si = v6170
    di = v6171
    es = v6172
    cs = v6173
    ss = v6174
    ds = v6175
    fs = v6176
    gs = v6177
    cf = -v6295-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v6179
    pf = -v6289-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v6181
    af = -v6293-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v6183
    zf = v6292 [from 0x8048443:sub    esp, 0x08]
    sf = v6291 [from 0x8048443:sub    esp, 0x08]
    tf = v6186
    if = v6187
    df = v6188
    of = v6299 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v6190
    iopl1 = v6191
    nt = v6192
    ?15 = v6193
    memory = {
        size=4; addr=v6168-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v6168-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6168-0x4 [from 0x8048440:push   ebp]; value=v6169
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v6463
    cx = v6464
    dx = v6465
    bx = v6466
    sp = v6468
    bp = v6468
    si = v6469
    di = v6470
    es = v6471
    cs = v6472
    ss = v6473
    ds = v6474
    fs = v6475
    gs = v6476
    cf = v6477
    ?1 = v6478
    pf = v6479
    ?3 = v6480
    af = v6481
    ?5 = v6482
    zf = v6483
    sf = v6484
    tf = v6485
    if = v6486
    df = v6487
    of = v6488
    iopl0 = v6489
    iopl1 = v6490
    nt = v6491
    ?15 = v6492
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v6463
    cx = v6464
    dx = v6465
    bx = v6466
    sp = v6468+0x4 [from 0x8048454:pop    ebp]
    bp = v6529 [from 0x8048454:pop    ebp]
    si = v6469
    di = v6470
    es = v6471
    cs = v6472
    ss = v6473
    ds = v6474
    fs = v6475
    gs = v6476
    cf = v6477
    ?1 = v6478
    pf = v6479
    ?3 = v6480
    af = v6481
    ?5 = v6482
    zf = v6483
    sf = v6484
    tf = v6485
    if = v6486
    df = v6487
    of = v6488
    iopl0 = v6489
    iopl1 = v6490
    nt = v6491
    ?15 = v6492
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v6463
    cx = v6464
    dx = v6465
    bx = v6466
    sp = v6468+0x8 [from 0x8048455:ret    ]
    bp = v6529 [from 0x8048454:pop    ebp]
    si = v6469
    di = v6470
    es = v6471
    cs = v6472
    ss = v6473
    ds = v6474
    fs = v6475
    gs = v6476
    cf = v6477
    ?1 = v6478
    pf = v6479
    ?3 = v6480
    af = v6481
    ?5 = v6482
    zf = v6483
    sf = v6484
    tf = v6485
    if = v6486
    df = v6487
    of = v6488
    iopl0 = v6489
    iopl1 = v6490
    nt = v6491
    ?15 = v6492
    memory = {}
    ip = v6567 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048460:push   ebp
    ax = v6629
    cx = v6630
    dx = v6631
    bx = v6632
    sp = v6633-0x4 [from 0x8048460:push   ebp]
    bp = v6634
    si = v6635
    di = v6636
    es = v6637
    cs = v6638
    ss = v6639
    ds = v6640
    fs = v6641
    gs = v6642
    cf = v6643
    ?1 = v6644
    pf = v6645
    ?3 = v6646
    af = v6647
    ?5 = v6648
    zf = v6649
    sf = v6650
    tf = v6651
    if = v6652
    df = v6653
    of = v6654
    iopl0 = v6655
    iopl1 = v6656
    nt = v6657
    ?15 = v6658
    memory = {
        size=4; addr=v6633-0x4 [from 0x8048460:push   ebp]; value=v6634
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v6629
    cx = v6630
    dx = v6631
    bx = v6632
    sp = v6633-0x4 [from 0x8048460:push   ebp]
    bp = v6633-0x4 [from 0x8048460:push   ebp]
    si = v6635
    di = v6636
    es = v6637
    cs = v6638
    ss = v6639
    ds = v6640
    fs = v6641
    gs = v6642
    cf = v6643
    ?1 = v6644
    pf = v6645
    ?3 = v6646
    af = v6647
    ?5 = v6648
    zf = v6649
    sf = v6650
    tf = v6651
    if = v6652
    df = v6653
    of = v6654
    iopl0 = v6655
    iopl1 = v6656
    nt = v6657
    ?15 = v6658
    memory = {
        size=4; addr=v6633-0x4 [from 0x8048460:push   ebp]; value=v6634
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v6629
    cx = v6630
    dx = v6631
    bx = v6632
    sp = v6633-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v6633-0x4 [from 0x8048460:push   ebp]
    si = v6635
    di = v6636
    es = v6637
    cs = v6638
    ss = v6639
    ds = v6640
    fs = v6641
    gs = v6642
    cf = -v6760-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6644
    pf = -v6754-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6646
    af = -v6758-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6648
    zf = v6757 [from 0x8048463:sub    esp, 0x08]
    sf = v6756 [from 0x8048463:sub    esp, 0x08]
    tf = v6651
    if = v6652
    df = v6653
    of = v6764 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6655
    iopl1 = v6656
    nt = v6657
    ?15 = v6658
    memory = {
        size=4; addr=v6633-0x4 [from 0x8048460:push   ebp]; value=v6634
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v6629
    cx = v6630
    dx = v6631
    bx = v6632
    sp = v6633-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v6633-0x4 [from 0x8048460:push   ebp]
    si = v6635
    di = v6636
    es = v6637
    cs = v6638
    ss = v6639
    ds = v6640
    fs = v6641
    gs = v6642
    cf = -v6760-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6644
    pf = -v6754-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6646
    af = -v6758-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6648
    zf = v6757 [from 0x8048463:sub    esp, 0x08]
    sf = v6756 [from 0x8048463:sub    esp, 0x08]
    tf = v6651
    if = v6652
    df = v6653
    of = v6764 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6655
    iopl1 = v6656
    nt = v6657
    ?15 = v6658
    memory = {
        size=4; addr=v6633-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6633-0x4 [from 0x8048460:push   ebp]; value=v6634
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v6629
    cx = v6630
    dx = v6631
    bx = v6632
    sp = v6633-0x10 [from 0x804846d:call   0x08048300]
    bp = v6633-0x4 [from 0x8048460:push   ebp]
    si = v6635
    di = v6636
    es = v6637
    cs = v6638
    ss = v6639
    ds = v6640
    fs = v6641
    gs = v6642
    cf = -v6760-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v6644
    pf = -v6754-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v6646
    af = -v6758-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v6648
    zf = v6757 [from 0x8048463:sub    esp, 0x08]
    sf = v6756 [from 0x8048463:sub    esp, 0x08]
    tf = v6651
    if = v6652
    df = v6653
    of = v6764 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v6655
    iopl1 = v6656
    nt = v6657
    ?15 = v6658
    memory = {
        size=4; addr=v6633-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v6633-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v6633-0x4 [from 0x8048460:push   ebp]; value=v6634
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v6928
    cx = v6929
    dx = v6930
    bx = v6931
    sp = v6932
    bp = v6933
    si = v6934
    di = v6935
    es = v6936
    cs = v6937
    ss = v6938
    ds = v6939
    fs = v6940
    gs = v6941
    cf = v6942
    ?1 = v6943
    pf = v6944
    ?3 = v6945
    af = v6946
    ?5 = v6947
    zf = v6948
    sf = v6949
    tf = v6950
    if = v6951
    df = v6952
    of = v6953
    iopl0 = v6954
    iopl1 = v6955
    nt = v6956
    ?15 = v6957
    memory = {
        size=4; addr=v6932; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v6928
    cx = v6929
    dx = v6930
    bx = v6931
    sp = v6932-0x4 [from 0x8048479:call   0x08048320]
    bp = v6933
    si = v6934
    di = v6935
    es = v6936
    cs = v6937
    ss = v6938
    ds = v6939
    fs = v6940
    gs = v6941
    cf = v6942
    ?1 = v6943
    pf = v6944
    ?3 = v6945
    af = v6946
    ?5 = v6947
    zf = v6948
    sf = v6949
    tf = v6950
    if = v6951
    df = v6952
    of = v6953
    iopl0 = v6954
    iopl1 = v6955
    nt = v6956
    ?15 = v6957
    memory = {
        size=4; addr=v6932; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v6932-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048480:push   ebp
    ax = v7090
    cx = v7091
    dx = v7092
    bx = v7093
    sp = v7094-0x4 [from 0x8048480:push   ebp]
    bp = v7095
    si = v7096
    di = v7097
    es = v7098
    cs = v7099
    ss = v7100
    ds = v7101
    fs = v7102
    gs = v7103
    cf = v7104
    ?1 = v7105
    pf = v7106
    ?3 = v7107
    af = v7108
    ?5 = v7109
    zf = v7110
    sf = v7111
    tf = v7112
    if = v7113
    df = v7114
    of = v7115
    iopl0 = v7116
    iopl1 = v7117
    nt = v7118
    ?15 = v7119
    memory = {
        size=4; addr=v7094-0x4 [from 0x8048480:push   ebp]; value=v7095
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v7090
    cx = v7091
    dx = v7092
    bx = v7093
    sp = v7094-0x4 [from 0x8048480:push   ebp]
    bp = v7094-0x4 [from 0x8048480:push   ebp]
    si = v7096
    di = v7097
    es = v7098
    cs = v7099
    ss = v7100
    ds = v7101
    fs = v7102
    gs = v7103
    cf = v7104
    ?1 = v7105
    pf = v7106
    ?3 = v7107
    af = v7108
    ?5 = v7109
    zf = v7110
    sf = v7111
    tf = v7112
    if = v7113
    df = v7114
    of = v7115
    iopl0 = v7116
    iopl1 = v7117
    nt = v7118
    ?15 = v7119
    memory = {
        size=4; addr=v7094-0x4 [from 0x8048480:push   ebp]; value=v7095
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v7090
    cx = v7091
    dx = v7092
    bx = v7093
    sp = v7094-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7094-0x4 [from 0x8048480:push   ebp]
    si = v7096
    di = v7097
    es = v7098
    cs = v7099
    ss = v7100
    ds = v7101
    fs = v7102
    gs = v7103
    cf = -v7221-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7105
    pf = -v7215-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v7107
    af = -v7219-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v7109
    zf = v7218 [from 0x8048483:sub    esp, 0x08]
    sf = v7217 [from 0x8048483:sub    esp, 0x08]
    tf = v7112
    if = v7113
    df = v7114
    of = v7225 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v7116
    iopl1 = v7117
    nt = v7118
    ?15 = v7119
    memory = {
        size=4; addr=v7094-0x4 [from 0x8048480:push   ebp]; value=v7095
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v7090
    cx = v7091
    dx = v7092
    bx = v7093
    sp = v7094-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7094-0x4 [from 0x8048480:push   ebp]
    si = v7096
    di = v7097
    es = v7098
    cs = v7099
    ss = v7100
    ds = v7101
    fs = v7102
    gs = v7103
    cf = -v7221-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7105
    pf = -v7285-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7107
    af = v7289 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7109
    zf = v7288 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7287 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7112
    if = v7113
    df = v7114
    of = v7292 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7116
    iopl1 = v7117
    nt = v7118
    ?15 = v7119
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v7260+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7090
    cx = v7091
    dx = v7092
    bx = v7093
    sp = v7094-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v7094-0x4 [from 0x8048480:push   ebp]
    si = v7096
    di = v7097
    es = v7098
    cs = v7099
    ss = v7100
    ds = v7101
    fs = v7102
    gs = v7103
    cf = -v7221-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7105
    pf = -v7285-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7107
    af = v7289 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7109
    zf = v7288 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7287 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7112
    if = v7113
    df = v7114
    of = v7292 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7116
    iopl1 = v7117
    nt = v7118
    ?15 = v7119
    memory = {
        size=4; addr=v7094-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v7090
    cx = v7091
    dx = v7092
    bx = v7093
    sp = v7094-0x10 [from 0x8048493:call   0x08048300]
    bp = v7094-0x4 [from 0x8048480:push   ebp]
    si = v7096
    di = v7097
    es = v7098
    cs = v7099
    ss = v7100
    ds = v7101
    fs = v7102
    gs = v7103
    cf = -v7221-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v7105
    pf = -v7285-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v7107
    af = v7289 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v7109
    zf = v7288 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v7287 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v7112
    if = v7113
    df = v7114
    of = v7292 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v7116
    iopl1 = v7117
    nt = v7118
    ?15 = v7119
    memory = {
        size=4; addr=v7094-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v7094-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v7459
    cx = v7460
    dx = v7461
    bx = v7462
    sp = v7463
    bp = v7464
    si = v7465
    di = v7466
    es = v7467
    cs = v7468
    ss = v7469
    ds = v7470
    fs = v7471
    gs = v7472
    cf = v7473
    ?1 = v7474
    pf = v7475
    ?3 = v7476
    af = v7477
    ?5 = v7478
    zf = v7479
    sf = v7480
    tf = v7481
    if = v7482
    df = v7483
    of = v7484
    iopl0 = v7485
    iopl1 = v7486
    nt = v7487
    ?15 = v7488
    memory = {
        size=4; addr=v7463; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v7459
    cx = v7460
    dx = v7461
    bx = v7462
    sp = v7463-0x4 [from 0x804849f:call   0x08048320]
    bp = v7464
    si = v7465
    di = v7466
    es = v7467
    cs = v7468
    ss = v7469
    ds = v7470
    fs = v7471
    gs = v7472
    cf = v7473
    ?1 = v7474
    pf = v7475
    ?3 = v7476
    af = v7477
    ?5 = v7478
    zf = v7479
    sf = v7480
    tf = v7481
    if = v7482
    df = v7483
    of = v7484
    iopl0 = v7485
    iopl1 = v7486
    nt = v7487
    ?15 = v7488
    memory = {
        size=4; addr=v7463; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v7463-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484a4:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484a5 [from 0x80484a4:nop    ]
0x80484a5:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484a6 [from 0x80484a5:nop    ]
0x80484a6:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484a7 [from 0x80484a6:nop    ]
0x80484a7:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484a8 [from 0x80484a7:nop    ]
0x80484a8:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484a9 [from 0x80484a8:nop    ]
0x80484a9:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484aa [from 0x80484a9:nop    ]
0x80484aa:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484ab [from 0x80484aa:nop    ]
0x80484ab:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484ac [from 0x80484ab:nop    ]
0x80484ac:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484ad [from 0x80484ac:nop    ]
0x80484ad:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484ae [from 0x80484ad:nop    ]
0x80484ae:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484af [from 0x80484ae:nop    ]
0x80484af:nop    
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {}
    ip = 0x80484b0 [from 0x80484af:nop    ]
0x80484b0:push   ebp
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625-0x4 [from 0x80484b0:push   ebp]
    bp = v7626
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {
        size=4; addr=v7625-0x4 [from 0x80484b0:push   ebp]; value=v7626
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625-0x4 [from 0x80484b0:push   ebp]
    bp = v7625-0x4 [from 0x80484b0:push   ebp]
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {
        size=4; addr=v7625-0x4 [from 0x80484b0:push   ebp]; value=v7626
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625-0x8 [from 0x80484b3:push   edi]
    bp = v7625-0x4 [from 0x80484b0:push   ebp]
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {
        size=4; addr=v7625-0x8 [from 0x80484b3:push   edi]; value=v7628
        size=4; addr=v7625-0x4 [from 0x80484b0:push   ebp]; value=v7626
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625-0xc [from 0x80484b4:push   esi]
    bp = v7625-0x4 [from 0x80484b0:push   ebp]
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {
        size=4; addr=v7625-0xc [from 0x80484b4:push   esi]; value=v7627
        size=4; addr=v7625-0x8 [from 0x80484b3:push   edi]; value=v7628
        size=4; addr=v7625-0x4 [from 0x80484b0:push   ebp]; value=v7626
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625-0x10 [from 0x80484b5:push   ebx]
    bp = v7625-0x4 [from 0x80484b0:push   ebp]
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = v7635
    ?1 = v7636
    pf = v7637
    ?3 = v7638
    af = v7639
    ?5 = v7640
    zf = v7641
    sf = v7642
    tf = v7643
    if = v7644
    df = v7645
    of = v7646
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {
        size=4; addr=v7625-0x10 [from 0x80484b5:push   ebx]; value=v7624
        size=4; addr=v7625-0xc [from 0x80484b4:push   esi]; value=v7627
        size=4; addr=v7625-0x8 [from 0x80484b3:push   edi]; value=v7628
        size=4; addr=v7625-0x4 [from 0x80484b0:push   ebp]; value=v7626
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v7625-0x4 [from 0x80484b0:push   ebp]
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = -v8244-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v7636
    pf = -v8238-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v7638
    af = -v8242-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v7640
    zf = v8241 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8240 [from 0x80484b6:sub    esp, 0x0c]
    tf = v7643
    if = v7644
    df = v7645
    of = v8248 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {
        size=4; addr=v7625-0x10 [from 0x80484b5:push   ebx]; value=v7624
        size=4; addr=v7625-0xc [from 0x80484b4:push   esi]; value=v7627
        size=4; addr=v7625-0x8 [from 0x80484b3:push   edi]; value=v7628
        size=4; addr=v7625-0x4 [from 0x80484b0:push   ebp]; value=v7626
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v7621
    cx = v7622
    dx = v7623
    bx = v7624
    sp = v7625-0x20 [from 0x80484b9:call   0x080484be]
    bp = v7625-0x4 [from 0x80484b0:push   ebp]
    si = v7627
    di = v7628
    es = v7629
    cs = v7630
    ss = v7631
    ds = v7632
    fs = v7633
    gs = v7634
    cf = -v8244-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v7636
    pf = -v8238-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v7638
    af = -v8242-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v7640
    zf = v8241 [from 0x80484b6:sub    esp, 0x0c]
    sf = v8240 [from 0x80484b6:sub    esp, 0x0c]
    tf = v7643
    if = v7644
    df = v7645
    of = v8248 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v7647
    iopl1 = v7648
    nt = v7649
    ?15 = v7650
    memory = {
        size=4; addr=v7625-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v7625-0x10 [from 0x80484b5:push   ebx]; value=v7624
        size=4; addr=v7625-0xc [from 0x80484b4:push   esi]; value=v7627
        size=4; addr=v7625-0x8 [from 0x80484b3:push   edi]; value=v7628
        size=4; addr=v7625-0x4 [from 0x80484b0:push   ebp]; value=v7626
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v8377
    cx = v8378
    dx = v8379
    bx = v8411 [from 0x80484be:pop    ebx]
    sp = v8381+0x4 [from 0x80484be:pop    ebx]
    bp = v8382
    si = v8383
    di = v8384
    es = v8385
    cs = v8386
    ss = v8387
    ds = v8388
    fs = v8389
    gs = v8390
    cf = v8391
    ?1 = v8392
    pf = v8393
    ?3 = v8394
    af = v8395
    ?5 = v8396
    zf = v8397
    sf = v8398
    tf = v8399
    if = v8400
    df = v8401
    of = v8402
    iopl0 = v8403
    iopl1 = v8404
    nt = v8405
    ?15 = v8406
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v8377
    cx = v8378
    dx = v8379
    bx = v8411+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8381+0x4 [from 0x80484be:pop    ebx]
    bp = v8382
    si = v8383
    di = v8384
    es = v8385
    cs = v8386
    ss = v8387
    ds = v8388
    fs = v8389
    gs = v8390
    cf = v8473 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8392
    pf = -v8468-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8394
    af = v8472 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8396
    zf = v8471 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8470 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8399
    if = v8400
    df = v8401
    of = v8476 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8403
    iopl1 = v8404
    nt = v8405
    ?15 = v8406
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v8377
    cx = v8378
    dx = v8379
    bx = v8411+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v8381 [from 0x80484c5:call   0x080482c8]
    bp = v8382
    si = v8383
    di = v8384
    es = v8385
    cs = v8386
    ss = v8387
    ds = v8388
    fs = v8389
    gs = v8390
    cf = v8473 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v8392
    pf = -v8468-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v8394
    af = v8472 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v8396
    zf = v8471 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v8470 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v8399
    if = v8400
    df = v8401
    of = v8476 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v8403
    iopl1 = v8404
    nt = v8405
    ?15 = v8406
    memory = {
        size=4; addr=v8381 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8608-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8606
    dx = v8607
    bx = v8608
    sp = v8609
    bp = v8610
    si = v8611
    di = v8612
    es = v8613
    cs = v8614
    ss = v8615
    ds = v8616
    fs = v8617
    gs = v8618
    cf = v8619
    ?1 = v8620
    pf = v8621
    ?3 = v8622
    af = v8623
    ?5 = v8624
    zf = v8625
    sf = v8626
    tf = v8627
    if = v8628
    df = v8629
    of = v8630
    iopl0 = v8631
    iopl1 = v8632
    nt = v8633
    ?15 = v8634
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v8608-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v8606
    dx = v8608-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8608
    sp = v8609
    bp = v8610
    si = v8611
    di = v8612
    es = v8613
    cs = v8614
    ss = v8615
    ds = v8616
    fs = v8617
    gs = v8618
    cf = v8619
    ?1 = v8620
    pf = v8621
    ?3 = v8622
    af = v8623
    ?5 = v8624
    zf = v8625
    sf = v8626
    tf = v8627
    if = v8628
    df = v8629
    of = v8630
    iopl0 = v8631
    iopl1 = v8632
    nt = v8633
    ?15 = v8634
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v17216 [from 0x80484d6:sub    eax, edx]
    cx = v8606
    dx = v8608-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8608
    sp = v8609
    bp = v8610
    si = v8611
    di = v8612
    es = v8613
    cs = v8614
    ss = v8615
    ds = v8616
    fs = v8617
    gs = v8618
    cf = -v8735-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v8620
    pf = -v8729-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v8622
    af = -v8733-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v8624
    zf = v8732 [from 0x80484d6:sub    eax, edx]
    sf = v8731 [from 0x80484d6:sub    eax, edx]
    tf = v8627
    if = v8628
    df = v8629
    of = v8739 [from 0x80484d6:sub    eax, edx]
    iopl0 = v8631
    iopl1 = v8632
    nt = v8633
    ?15 = v8634
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v8778 [from 0x80484d8:sar    eax, 0x02]
    cx = v8606
    dx = v8608-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8608
    sp = v8609
    bp = v8610
    si = v8611
    di = v8612
    es = v8613
    cs = v8614
    ss = v8615
    ds = v8616
    fs = v8617
    gs = v8618
    cf = v8781 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8620
    pf = -v8801-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8622
    af = <top>
    ?5 = v8624
    zf = v8806 [from 0x80484d8:sar    eax, 0x02]
    sf = v8804 [from 0x80484d8:sar    eax, 0x02]
    tf = v8627
    if = v8628
    df = v8629
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8631
    iopl1 = v8632
    nt = v8633
    ?15 = v8634
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v8778 [from 0x80484d8:sar    eax, 0x02]
    cx = v8606
    dx = v8608-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8608
    sp = v8609
    bp = v8610
    si = v8611
    di = v8612
    es = v8613
    cs = v8614
    ss = v8615
    ds = v8616
    fs = v8617
    gs = v8618
    cf = v8781 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8620
    pf = -v8801-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8622
    af = <top>
    ?5 = v8624
    zf = v8806 [from 0x80484d8:sar    eax, 0x02]
    sf = v8804 [from 0x80484d8:sar    eax, 0x02]
    tf = v8627
    if = v8628
    df = v8629
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8631
    iopl1 = v8632
    nt = v8633
    ?15 = v8634
    memory = {
        size=4; addr=v8610-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8778 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v8778 [from 0x80484d8:sar    eax, 0x02]
    cx = v8606
    dx = v8608-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v8608
    sp = v8609
    bp = v8610
    si = v8611
    di = v8612
    es = v8613
    cs = v8614
    ss = v8615
    ds = v8616
    fs = v8617
    gs = v8618
    cf = v8781 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v8620
    pf = -v8801-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v8622
    af = <top>
    ?5 = v8624
    zf = v8806 [from 0x80484d8:sar    eax, 0x02]
    sf = v8804 [from 0x80484d8:sar    eax, 0x02]
    tf = v8627
    if = v8628
    df = v8629
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v8631
    iopl1 = v8632
    nt = v8633
    ?15 = v8634
    memory = {
        size=4; addr=v8610-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v8778 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v8878 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v9000
    cx = v9001
    dx = v9002
    bx = v9003
    sp = v9004+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v9005
    si = v9006
    di = v9007
    es = v9008
    cs = v9009
    ss = v9010
    ds = v9011
    fs = v9012
    gs = v9013
    cf = v9060 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9015
    pf = -v9055-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9017
    af = v9059 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9019
    zf = v9058 [from 0x80484e0:add    esp, 0x0c]
    sf = v9057 [from 0x80484e0:add    esp, 0x0c]
    tf = v9022
    if = v9023
    df = v9024
    of = v9063 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9026
    iopl1 = v9027
    nt = v9028
    ?15 = v9029
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v9000
    cx = v9001
    dx = v9002
    bx = v9099 [from 0x80484e3:pop    ebx]
    sp = v9004+0x10 [from 0x80484e3:pop    ebx]
    bp = v9005
    si = v9006
    di = v9007
    es = v9008
    cs = v9009
    ss = v9010
    ds = v9011
    fs = v9012
    gs = v9013
    cf = v9060 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9015
    pf = -v9055-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9017
    af = v9059 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9019
    zf = v9058 [from 0x80484e0:add    esp, 0x0c]
    sf = v9057 [from 0x80484e0:add    esp, 0x0c]
    tf = v9022
    if = v9023
    df = v9024
    of = v9063 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9026
    iopl1 = v9027
    nt = v9028
    ?15 = v9029
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v9000
    cx = v9001
    dx = v9002
    bx = v9099 [from 0x80484e3:pop    ebx]
    sp = v9004+0x14 [from 0x80484e4:pop    esi]
    bp = v9005
    si = v9135 [from 0x80484e4:pop    esi]
    di = v9007
    es = v9008
    cs = v9009
    ss = v9010
    ds = v9011
    fs = v9012
    gs = v9013
    cf = v9060 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9015
    pf = -v9055-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9017
    af = v9059 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9019
    zf = v9058 [from 0x80484e0:add    esp, 0x0c]
    sf = v9057 [from 0x80484e0:add    esp, 0x0c]
    tf = v9022
    if = v9023
    df = v9024
    of = v9063 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9026
    iopl1 = v9027
    nt = v9028
    ?15 = v9029
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v9000
    cx = v9001
    dx = v9002
    bx = v9099 [from 0x80484e3:pop    ebx]
    sp = v9004+0x18 [from 0x80484e5:pop    edi]
    bp = v9005
    si = v9135 [from 0x80484e4:pop    esi]
    di = v9171 [from 0x80484e5:pop    edi]
    es = v9008
    cs = v9009
    ss = v9010
    ds = v9011
    fs = v9012
    gs = v9013
    cf = v9060 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9015
    pf = -v9055-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9017
    af = v9059 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9019
    zf = v9058 [from 0x80484e0:add    esp, 0x0c]
    sf = v9057 [from 0x80484e0:add    esp, 0x0c]
    tf = v9022
    if = v9023
    df = v9024
    of = v9063 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9026
    iopl1 = v9027
    nt = v9028
    ?15 = v9029
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v9000
    cx = v9001
    dx = v9002
    bx = v9099 [from 0x80484e3:pop    ebx]
    sp = v9004+0x1c [from 0x80484e6:pop    ebp]
    bp = v9207 [from 0x80484e6:pop    ebp]
    si = v9135 [from 0x80484e4:pop    esi]
    di = v9171 [from 0x80484e5:pop    edi]
    es = v9008
    cs = v9009
    ss = v9010
    ds = v9011
    fs = v9012
    gs = v9013
    cf = v9060 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9015
    pf = -v9055-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9017
    af = v9059 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9019
    zf = v9058 [from 0x80484e0:add    esp, 0x0c]
    sf = v9057 [from 0x80484e0:add    esp, 0x0c]
    tf = v9022
    if = v9023
    df = v9024
    of = v9063 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9026
    iopl1 = v9027
    nt = v9028
    ?15 = v9029
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v9000
    cx = v9001
    dx = v9002
    bx = v9099 [from 0x80484e3:pop    ebx]
    sp = v9004+0x20 [from 0x80484e7:ret    ]
    bp = v9207 [from 0x80484e6:pop    ebp]
    si = v9135 [from 0x80484e4:pop    esi]
    di = v9171 [from 0x80484e5:pop    edi]
    es = v9008
    cs = v9009
    ss = v9010
    ds = v9011
    fs = v9012
    gs = v9013
    cf = v9060 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v9015
    pf = -v9055-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v9017
    af = v9059 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v9019
    zf = v9058 [from 0x80484e0:add    esp, 0x0c]
    sf = v9057 [from 0x80484e0:add    esp, 0x0c]
    tf = v9022
    if = v9023
    df = v9024
    of = v9063 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v9026
    iopl1 = v9027
    nt = v9028
    ?15 = v9029
    memory = {}
    ip = v9245 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048520:push   ebp
    ax = v9307
    cx = v9308
    dx = v9309
    bx = v9310
    sp = v9311-0x4 [from 0x8048520:push   ebp]
    bp = v9312
    si = v9313
    di = v9314
    es = v9315
    cs = v9316
    ss = v9317
    ds = v9318
    fs = v9319
    gs = v9320
    cf = v9321
    ?1 = v9322
    pf = v9323
    ?3 = v9324
    af = v9325
    ?5 = v9326
    zf = v9327
    sf = v9328
    tf = v9329
    if = v9330
    df = v9331
    of = v9332
    iopl0 = v9333
    iopl1 = v9334
    nt = v9335
    ?15 = v9336
    memory = {
        size=4; addr=v9311-0x4 [from 0x8048520:push   ebp]; value=v9312
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v9307
    cx = v9308
    dx = v9309
    bx = v9310
    sp = v9311-0x4 [from 0x8048520:push   ebp]
    bp = v9311-0x4 [from 0x8048520:push   ebp]
    si = v9313
    di = v9314
    es = v9315
    cs = v9316
    ss = v9317
    ds = v9318
    fs = v9319
    gs = v9320
    cf = v9321
    ?1 = v9322
    pf = v9323
    ?3 = v9324
    af = v9325
    ?5 = v9326
    zf = v9327
    sf = v9328
    tf = v9329
    if = v9330
    df = v9331
    of = v9332
    iopl0 = v9333
    iopl1 = v9334
    nt = v9335
    ?15 = v9336
    memory = {
        size=4; addr=v9311-0x4 [from 0x8048520:push   ebp]; value=v9312
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v9307
    cx = v9308
    dx = v9309
    bx = v9310
    sp = v9311-0x8 [from 0x8048523:push   edi]
    bp = v9311-0x4 [from 0x8048520:push   ebp]
    si = v9313
    di = v9314
    es = v9315
    cs = v9316
    ss = v9317
    ds = v9318
    fs = v9319
    gs = v9320
    cf = v9321
    ?1 = v9322
    pf = v9323
    ?3 = v9324
    af = v9325
    ?5 = v9326
    zf = v9327
    sf = v9328
    tf = v9329
    if = v9330
    df = v9331
    of = v9332
    iopl0 = v9333
    iopl1 = v9334
    nt = v9335
    ?15 = v9336
    memory = {
        size=4; addr=v9311-0x8 [from 0x8048523:push   edi]; value=v9314
        size=4; addr=v9311-0x4 [from 0x8048520:push   ebp]; value=v9312
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v9307
    cx = v9308
    dx = v9309
    bx = v9310
    sp = v9311-0xc [from 0x8048524:push   esi]
    bp = v9311-0x4 [from 0x8048520:push   ebp]
    si = v9313
    di = v9314
    es = v9315
    cs = v9316
    ss = v9317
    ds = v9318
    fs = v9319
    gs = v9320
    cf = v9321
    ?1 = v9322
    pf = v9323
    ?3 = v9324
    af = v9325
    ?5 = v9326
    zf = v9327
    sf = v9328
    tf = v9329
    if = v9330
    df = v9331
    of = v9332
    iopl0 = v9333
    iopl1 = v9334
    nt = v9335
    ?15 = v9336
    memory = {
        size=4; addr=v9311-0xc [from 0x8048524:push   esi]; value=v9313
        size=4; addr=v9311-0x8 [from 0x8048523:push   edi]; value=v9314
        size=4; addr=v9311-0x4 [from 0x8048520:push   ebp]; value=v9312
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v9307
    cx = v9308
    dx = v9309
    bx = v9310
    sp = v9311-0x10 [from 0x8048525:push   ebx]
    bp = v9311-0x4 [from 0x8048520:push   ebp]
    si = v9313
    di = v9314
    es = v9315
    cs = v9316
    ss = v9317
    ds = v9318
    fs = v9319
    gs = v9320
    cf = v9321
    ?1 = v9322
    pf = v9323
    ?3 = v9324
    af = v9325
    ?5 = v9326
    zf = v9327
    sf = v9328
    tf = v9329
    if = v9330
    df = v9331
    of = v9332
    iopl0 = v9333
    iopl1 = v9334
    nt = v9335
    ?15 = v9336
    memory = {
        size=4; addr=v9311-0x10 [from 0x8048525:push   ebx]; value=v9310
        size=4; addr=v9311-0xc [from 0x8048524:push   esi]; value=v9313
        size=4; addr=v9311-0x8 [from 0x8048523:push   edi]; value=v9314
        size=4; addr=v9311-0x4 [from 0x8048520:push   ebp]; value=v9312
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v9307
    cx = v9308
    dx = v9309
    bx = v9310
    sp = v9311-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v9311-0x4 [from 0x8048520:push   ebp]
    si = v9313
    di = v9314
    es = v9315
    cs = v9316
    ss = v9317
    ds = v9318
    fs = v9319
    gs = v9320
    cf = -v9546-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9322
    pf = -v9540-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9324
    af = -v9544-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9326
    zf = v9543 [from 0x8048526:sub    esp, 0x0c]
    sf = v9542 [from 0x8048526:sub    esp, 0x0c]
    tf = v9329
    if = v9330
    df = v9331
    of = v9550 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9333
    iopl1 = v9334
    nt = v9335
    ?15 = v9336
    memory = {
        size=4; addr=v9311-0x10 [from 0x8048525:push   ebx]; value=v9310
        size=4; addr=v9311-0xc [from 0x8048524:push   esi]; value=v9313
        size=4; addr=v9311-0x8 [from 0x8048523:push   edi]; value=v9314
        size=4; addr=v9311-0x4 [from 0x8048520:push   ebp]; value=v9312
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v9307
    cx = v9308
    dx = v9309
    bx = v9310
    sp = v9311-0x20 [from 0x8048529:call   0x0804852e]
    bp = v9311-0x4 [from 0x8048520:push   ebp]
    si = v9313
    di = v9314
    es = v9315
    cs = v9316
    ss = v9317
    ds = v9318
    fs = v9319
    gs = v9320
    cf = -v9546-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v9322
    pf = -v9540-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v9324
    af = -v9544-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v9326
    zf = v9543 [from 0x8048526:sub    esp, 0x0c]
    sf = v9542 [from 0x8048526:sub    esp, 0x0c]
    tf = v9329
    if = v9330
    df = v9331
    of = v9550 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v9333
    iopl1 = v9334
    nt = v9335
    ?15 = v9336
    memory = {
        size=4; addr=v9311-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v9311-0x10 [from 0x8048525:push   ebx]; value=v9310
        size=4; addr=v9311-0xc [from 0x8048524:push   esi]; value=v9313
        size=4; addr=v9311-0x8 [from 0x8048523:push   edi]; value=v9314
        size=4; addr=v9311-0x4 [from 0x8048520:push   ebp]; value=v9312
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v9679
    cx = v9680
    dx = v9681
    bx = v9713 [from 0x804852e:pop    ebx]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = v9693
    ?1 = v9694
    pf = v9695
    ?3 = v9696
    af = v9697
    ?5 = v9698
    zf = v9699
    sf = v9700
    tf = v9701
    if = v9702
    df = v9703
    of = v9704
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v9679
    cx = v9680
    dx = v9681
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = v9775 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9694
    pf = -v9770-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9696
    af = v9774 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9698
    zf = v9773 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9772 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9701
    if = v9702
    df = v9703
    of = v9778 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9713+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9680
    dx = v9681
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = v9775 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9694
    pf = -v9770-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9696
    af = v9774 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9698
    zf = v9773 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9772 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9701
    if = v9702
    df = v9703
    of = v9778 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v9713+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v9680
    dx = v9713+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = v9775 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v9694
    pf = -v9770-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v9696
    af = v9774 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v9698
    zf = v9773 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v9772 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v9701
    if = v9702
    df = v9703
    of = v9778 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v19426 [from 0x8048541:sub    eax, edx]
    cx = v9680
    dx = v9713+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = -v9910-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v9694
    pf = -v9904-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v9696
    af = -v9908-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v9698
    zf = v9907 [from 0x8048541:sub    eax, edx]
    sf = v9906 [from 0x8048541:sub    eax, edx]
    tf = v9701
    if = v9702
    df = v9703
    of = v9914 [from 0x8048541:sub    eax, edx]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v9953 [from 0x8048543:sar    eax, 0x02]
    cx = v9680
    dx = v9713+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = v9956 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9694
    pf = -v9976-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v9696
    af = <top>
    ?5 = v9698
    zf = v9981 [from 0x8048543:sar    eax, 0x02]
    sf = v9979 [from 0x8048543:sar    eax, 0x02]
    tf = v9701
    if = v9702
    df = v9703
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v9953 [from 0x8048543:sar    eax, 0x02]
    cx = v9680
    dx = v9713+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = v9956 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9694
    pf = -v9976-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v9696
    af = <top>
    ?5 = v9698
    zf = v9981 [from 0x8048543:sar    eax, 0x02]
    sf = v9979 [from 0x8048543:sar    eax, 0x02]
    tf = v9701
    if = v9702
    df = v9703
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {
        size=4; addr=v9684-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9953 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v9953-0x1 [from 0x8048549:dec    eax]
    cx = v9680
    dx = v9713+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = v9956 [from 0x8048543:sar    eax, 0x02]
    ?1 = v9694
    pf = -v10075-0x1 [from 0x8048549:dec    eax]
    ?3 = v9696
    af = -v10079-0x1 [from 0x8048549:dec    eax]
    ?5 = v9698
    zf = v10078 [from 0x8048549:dec    eax]
    sf = v10077 [from 0x8048549:dec    eax]
    tf = v9701
    if = v9702
    df = v9703
    of = v10083 [from 0x8048549:dec    eax]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {
        size=4; addr=v9684-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9953 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v9953-0x1 [from 0x8048549:dec    eax]
    cx = v9680
    dx = v9713+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = -v10148-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v9694
    pf = -v10142-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v9696
    af = -v10146-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v9698
    zf = v10145 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10144 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v9701
    if = v9702
    df = v9703
    of = v10152 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {
        size=4; addr=v9684-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9953 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v9953-0x1 [from 0x8048549:dec    eax]
    cx = v9680
    dx = v9713+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v9713+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v9683+0x4 [from 0x804852e:pop    ebx]
    bp = v9684
    si = v9685
    di = v9686
    es = v9687
    cs = v9688
    ss = v9689
    ds = v9690
    fs = v9691
    gs = v9692
    cf = -v10148-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v9694
    pf = -v10142-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v9696
    af = -v10146-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v9698
    zf = v10145 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v10144 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v9701
    if = v9702
    df = v9703
    of = v10152 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v9705
    iopl1 = v9706
    nt = v9707
    ?15 = v9708
    memory = {
        size=4; addr=v9684-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v9953 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v10186 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v10308
    cx = v10309
    dx = v10310
    bx = v10311
    sp = v10312-0x4 [from 0x804856b:call   0x080485b0]
    bp = v10313
    si = v10314
    di = v10315
    es = v10316
    cs = v10317
    ss = v10318
    ds = v10319
    fs = v10320
    gs = v10321
    cf = v10322
    ?1 = v10323
    pf = v10324
    ?3 = v10325
    af = v10326
    ?5 = v10327
    zf = v10328
    sf = v10329
    tf = v10330
    if = v10331
    df = v10332
    of = v10333
    iopl0 = v10334
    iopl1 = v10335
    nt = v10336
    ?15 = v10337
    memory = {
        size=4; addr=v10312-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v10435
    cx = v10436
    dx = v10437
    bx = v10438
    sp = v10439+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v10440
    si = v10441
    di = v10442
    es = v10443
    cs = v10444
    ss = v10445
    ds = v10446
    fs = v10447
    gs = v10448
    cf = v10495 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10450
    pf = -v10490-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10452
    af = v10494 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10454
    zf = v10493 [from 0x8048570:add    esp, 0x0c]
    sf = v10492 [from 0x8048570:add    esp, 0x0c]
    tf = v10457
    if = v10458
    df = v10459
    of = v10498 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10461
    iopl1 = v10462
    nt = v10463
    ?15 = v10464
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v10435
    cx = v10436
    dx = v10437
    bx = v10534 [from 0x8048573:pop    ebx]
    sp = v10439+0x10 [from 0x8048573:pop    ebx]
    bp = v10440
    si = v10441
    di = v10442
    es = v10443
    cs = v10444
    ss = v10445
    ds = v10446
    fs = v10447
    gs = v10448
    cf = v10495 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10450
    pf = -v10490-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10452
    af = v10494 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10454
    zf = v10493 [from 0x8048570:add    esp, 0x0c]
    sf = v10492 [from 0x8048570:add    esp, 0x0c]
    tf = v10457
    if = v10458
    df = v10459
    of = v10498 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10461
    iopl1 = v10462
    nt = v10463
    ?15 = v10464
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v10435
    cx = v10436
    dx = v10437
    bx = v10534 [from 0x8048573:pop    ebx]
    sp = v10439+0x14 [from 0x8048574:pop    esi]
    bp = v10440
    si = v10570 [from 0x8048574:pop    esi]
    di = v10442
    es = v10443
    cs = v10444
    ss = v10445
    ds = v10446
    fs = v10447
    gs = v10448
    cf = v10495 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10450
    pf = -v10490-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10452
    af = v10494 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10454
    zf = v10493 [from 0x8048570:add    esp, 0x0c]
    sf = v10492 [from 0x8048570:add    esp, 0x0c]
    tf = v10457
    if = v10458
    df = v10459
    of = v10498 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10461
    iopl1 = v10462
    nt = v10463
    ?15 = v10464
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v10435
    cx = v10436
    dx = v10437
    bx = v10534 [from 0x8048573:pop    ebx]
    sp = v10439+0x18 [from 0x8048575:pop    edi]
    bp = v10440
    si = v10570 [from 0x8048574:pop    esi]
    di = v10606 [from 0x8048575:pop    edi]
    es = v10443
    cs = v10444
    ss = v10445
    ds = v10446
    fs = v10447
    gs = v10448
    cf = v10495 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10450
    pf = -v10490-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10452
    af = v10494 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10454
    zf = v10493 [from 0x8048570:add    esp, 0x0c]
    sf = v10492 [from 0x8048570:add    esp, 0x0c]
    tf = v10457
    if = v10458
    df = v10459
    of = v10498 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10461
    iopl1 = v10462
    nt = v10463
    ?15 = v10464
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v10435
    cx = v10436
    dx = v10437
    bx = v10534 [from 0x8048573:pop    ebx]
    sp = v10439+0x1c [from 0x8048576:pop    ebp]
    bp = v10642 [from 0x8048576:pop    ebp]
    si = v10570 [from 0x8048574:pop    esi]
    di = v10606 [from 0x8048575:pop    edi]
    es = v10443
    cs = v10444
    ss = v10445
    ds = v10446
    fs = v10447
    gs = v10448
    cf = v10495 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10450
    pf = -v10490-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10452
    af = v10494 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10454
    zf = v10493 [from 0x8048570:add    esp, 0x0c]
    sf = v10492 [from 0x8048570:add    esp, 0x0c]
    tf = v10457
    if = v10458
    df = v10459
    of = v10498 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10461
    iopl1 = v10462
    nt = v10463
    ?15 = v10464
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v10435
    cx = v10436
    dx = v10437
    bx = v10534 [from 0x8048573:pop    ebx]
    sp = v10439+0x20 [from 0x8048577:ret    ]
    bp = v10642 [from 0x8048576:pop    ebp]
    si = v10570 [from 0x8048574:pop    esi]
    di = v10606 [from 0x8048575:pop    edi]
    es = v10443
    cs = v10444
    ss = v10445
    ds = v10446
    fs = v10447
    gs = v10448
    cf = v10495 [from 0x8048570:add    esp, 0x0c]
    ?1 = v10450
    pf = -v10490-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v10452
    af = v10494 [from 0x8048570:add    esp, 0x0c]
    ?5 = v10454
    zf = v10493 [from 0x8048570:add    esp, 0x0c]
    sf = v10492 [from 0x8048570:add    esp, 0x0c]
    tf = v10457
    if = v10458
    df = v10459
    of = v10498 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v10461
    iopl1 = v10462
    nt = v10463
    ?15 = v10464
    memory = {}
    ip = v10680 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048578:nop    
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {}
    ip = 0x8048579 [from 0x8048578:nop    ]
0x8048579:nop    
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {}
    ip = 0x804857a [from 0x8048579:nop    ]
0x804857a:nop    
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {}
    ip = 0x804857b [from 0x804857a:nop    ]
0x804857b:nop    
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {}
    ip = 0x804857c [from 0x804857b:nop    ]
0x804857c:nop    
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {}
    ip = 0x804857d [from 0x804857c:nop    ]
0x804857d:nop    
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {}
    ip = 0x804857e [from 0x804857d:nop    ]
0x804857e:nop    
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {}
    ip = 0x804857f [from 0x804857e:nop    ]
0x804857f:nop    
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {}
    ip = 0x8048580 [from 0x804857f:nop    ]
0x8048580:push   ebp
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746-0x4 [from 0x8048580:push   ebp]
    bp = v10747
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {
        size=4; addr=v10746-0x4 [from 0x8048580:push   ebp]; value=v10747
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746-0x4 [from 0x8048580:push   ebp]
    bp = v10746-0x4 [from 0x8048580:push   ebp]
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {
        size=4; addr=v10746-0x4 [from 0x8048580:push   ebp]; value=v10747
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746-0x8 [from 0x8048583:push   ebx]
    bp = v10746-0x4 [from 0x8048580:push   ebp]
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = v10756
    ?1 = v10757
    pf = v10758
    ?3 = v10759
    af = v10760
    ?5 = v10761
    zf = v10762
    sf = v10763
    tf = v10764
    if = v10765
    df = v10766
    of = v10767
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {
        size=4; addr=v10746-0x8 [from 0x8048583:push   ebx]; value=v10745
        size=4; addr=v10746-0x4 [from 0x8048580:push   ebp]; value=v10747
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v10742
    cx = v10743
    dx = v10744
    bx = v10745
    sp = v10746-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10746-0x4 [from 0x8048580:push   ebp]
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = -v11165-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10757
    pf = -v11159-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10759
    af = -v11163-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10761
    zf = v11162 [from 0x8048584:sub    esp, 0x04]
    sf = v11161 [from 0x8048584:sub    esp, 0x04]
    tf = v10764
    if = v10765
    df = v10766
    of = v11169 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {
        size=4; addr=v10746-0x8 [from 0x8048583:push   ebx]; value=v10745
        size=4; addr=v10746-0x4 [from 0x8048580:push   ebp]; value=v10747
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v10742
    cx = v10743
    dx = v10744
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10746-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10746-0x4 [from 0x8048580:push   ebp]
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = -v11165-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10757
    pf = -v11159-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10759
    af = -v11163-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10761
    zf = v11162 [from 0x8048584:sub    esp, 0x04]
    sf = v11161 [from 0x8048584:sub    esp, 0x04]
    tf = v10764
    if = v10765
    df = v10766
    of = v11169 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {
        size=4; addr=v10746-0x8 [from 0x8048583:push   ebx]; value=v10745
        size=4; addr=v10746-0x4 [from 0x8048580:push   ebp]; value=v10747
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v11237 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10743
    dx = v10744
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10746-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10746-0x4 [from 0x8048580:push   ebp]
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = -v11165-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v10757
    pf = -v11159-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v10759
    af = -v11163-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v10761
    zf = v11162 [from 0x8048584:sub    esp, 0x04]
    sf = v11161 [from 0x8048584:sub    esp, 0x04]
    tf = v10764
    if = v10765
    df = v10766
    of = v11169 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {
        size=4; addr=v10746-0x8 [from 0x8048583:push   ebx]; value=v10745
        size=4; addr=v10746-0x4 [from 0x8048580:push   ebp]; value=v10747
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v11237 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10743
    dx = v10744
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10746-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10746-0x4 [from 0x8048580:push   ebp]
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = -v11302-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v10757
    pf = -v11296-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v10759
    af = -v11300-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v10761
    zf = v11299 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v11298 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v10764
    if = v10765
    df = v10766
    of = v11306 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {
        size=4; addr=v10746-0x8 [from 0x8048583:push   ebx]; value=v10745
        size=4; addr=v10746-0x4 [from 0x8048580:push   ebp]; value=v10747
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v11237 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v10743
    dx = v10744
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v10746-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v10746-0x4 [from 0x8048580:push   ebp]
    si = v10748
    di = v10749
    es = v10750
    cs = v10751
    ss = v10752
    ds = v10753
    fs = v10754
    gs = v10755
    cf = -v11302-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v10757
    pf = -v11296-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v10759
    af = -v11300-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v10761
    zf = v11299 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v11298 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v10764
    if = v10765
    df = v10766
    of = v11306 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v10768
    iopl1 = v10769
    nt = v10770
    ?15 = v10771
    memory = {
        size=4; addr=v10746-0x8 [from 0x8048583:push   ebx]; value=v10745
        size=4; addr=v10746-0x4 [from 0x8048580:push   ebp]; value=v10747
    }
    ip = v11340 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v11462
    cx = v11463
    dx = v11464
    bx = v11465
    sp = v11466
    bp = v11467
    si = v11468 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11469
    es = v11470
    cs = v11471
    ss = v11472
    ds = v11473
    fs = v11474
    gs = v11475
    cf = v11476
    ?1 = v11477
    pf = v11478
    ?3 = v11479
    af = v11480
    ?5 = v11481
    zf = v11482
    sf = v11483
    tf = v11484
    if = v11485
    df = v11486
    of = v11487
    iopl0 = v11488
    iopl1 = v11489
    nt = v11490
    ?15 = v11491
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v11462
    cx = v11463
    dx = v11464
    bx = v11465
    sp = v11466
    bp = v11467
    si = v11468 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11469 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11470
    cs = v11471
    ss = v11472
    ds = v11473
    fs = v11474
    gs = v11475
    cf = v11476
    ?1 = v11477
    pf = v11478
    ?3 = v11479
    af = v11480
    ?5 = v11481
    zf = v11482
    sf = v11483
    tf = v11484
    if = v11485
    df = v11486
    of = v11487
    iopl0 = v11488
    iopl1 = v11489
    nt = v11490
    ?15 = v11491
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v11462
    cx = v11463
    dx = v11464
    bx = v11465-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v11466
    bp = v11467
    si = v11468 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11469 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11470
    cs = v11471
    ss = v11472
    ds = v11473
    fs = v11474
    gs = v11475
    cf = -v11593-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v11477
    pf = -v11587-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v11479
    af = -v11591-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v11481
    zf = v11590 [from 0x80485a0:sub    ebx, 0x04]
    sf = v11589 [from 0x80485a0:sub    ebx, 0x04]
    tf = v11484
    if = v11485
    df = v11486
    of = v11597 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v11488
    iopl1 = v11489
    nt = v11490
    ?15 = v11491
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v11462
    cx = v11463
    dx = v11464
    bx = v11465-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v11466-0x4 [from 0x80485a3:call   eax]
    bp = v11467
    si = v11468 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v11469 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v11470
    cs = v11471
    ss = v11472
    ds = v11473
    fs = v11474
    gs = v11475
    cf = -v11593-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v11477
    pf = -v11587-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v11479
    af = -v11591-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v11481
    zf = v11590 [from 0x80485a0:sub    ebx, 0x04]
    sf = v11589 [from 0x80485a0:sub    ebx, 0x04]
    tf = v11484
    if = v11485
    df = v11486
    of = v11597 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v11488
    iopl1 = v11489
    nt = v11490
    ?15 = v11491
    memory = {
        size=4; addr=v11466-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v11462
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v11727 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11696
    dx = v11697
    bx = v11698
    sp = v11699
    bp = v11700
    si = v11701
    di = v11702
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = v11709
    ?1 = v11710
    pf = v11711
    ?3 = v11712
    af = v11713
    ?5 = v11714
    zf = v11715
    sf = v11716
    tf = v11717
    if = v11718
    df = v11719
    of = v11720
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v11727 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11696
    dx = v11697
    bx = v11698
    sp = v11699
    bp = v11700
    si = v11701
    di = v11702
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = -v11792-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v11710
    pf = -v11786-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v11712
    af = -v11790-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v11714
    zf = v11789 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v11788 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v11717
    if = v11718
    df = v11719
    of = v11796 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v11727 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v11696
    dx = v11697
    bx = v11698
    sp = v11699
    bp = v11700
    si = v11701
    di = v11702
    es = v11703
    cs = v11704
    ss = v11705
    ds = v11706
    fs = v11707
    gs = v11708
    cf = -v11792-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v11710
    pf = -v11786-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v11712
    af = -v11790-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v11714
    zf = v11789 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v11788 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v11717
    if = v11718
    df = v11719
    of = v11796 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v11721
    iopl1 = v11722
    nt = v11723
    ?15 = v11724
    memory = {}
    ip = v11831 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v11987 [from 0x80485ac:pop    eax]
    cx = v11954
    dx = v11955
    bx = v11956
    sp = v11957+0x4 [from 0x80485ac:pop    eax]
    bp = v11958
    si = v11959
    di = v11960
    es = v11961
    cs = v11962
    ss = v11963
    ds = v11964
    fs = v11965
    gs = v11966
    cf = v11967
    ?1 = v11968
    pf = v11969
    ?3 = v11970
    af = v11971
    ?5 = v11972
    zf = v11973
    sf = v11974
    tf = v11975
    if = v11976
    df = v11977
    of = v11978
    iopl0 = v11979
    iopl1 = v11980
    nt = v11981
    ?15 = v11982
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v11987 [from 0x80485ac:pop    eax]
    cx = v11954
    dx = v11955
    bx = v12023 [from 0x80485ad:pop    ebx]
    sp = v11957+0x8 [from 0x80485ad:pop    ebx]
    bp = v11958
    si = v11959
    di = v11960
    es = v11961
    cs = v11962
    ss = v11963
    ds = v11964
    fs = v11965
    gs = v11966
    cf = v11967
    ?1 = v11968
    pf = v11969
    ?3 = v11970
    af = v11971
    ?5 = v11972
    zf = v11973
    sf = v11974
    tf = v11975
    if = v11976
    df = v11977
    of = v11978
    iopl0 = v11979
    iopl1 = v11980
    nt = v11981
    ?15 = v11982
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v11987 [from 0x80485ac:pop    eax]
    cx = v11954
    dx = v11955
    bx = v12023 [from 0x80485ad:pop    ebx]
    sp = v11957+0xc [from 0x80485ae:pop    ebp]
    bp = v12059 [from 0x80485ae:pop    ebp]
    si = v11959
    di = v11960
    es = v11961
    cs = v11962
    ss = v11963
    ds = v11964
    fs = v11965
    gs = v11966
    cf = v11967
    ?1 = v11968
    pf = v11969
    ?3 = v11970
    af = v11971
    ?5 = v11972
    zf = v11973
    sf = v11974
    tf = v11975
    if = v11976
    df = v11977
    of = v11978
    iopl0 = v11979
    iopl1 = v11980
    nt = v11981
    ?15 = v11982
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v11987 [from 0x80485ac:pop    eax]
    cx = v11954
    dx = v11955
    bx = v12023 [from 0x80485ad:pop    ebx]
    sp = v11957+0x10 [from 0x80485af:ret    ]
    bp = v12059 [from 0x80485ae:pop    ebp]
    si = v11959
    di = v11960
    es = v11961
    cs = v11962
    ss = v11963
    ds = v11964
    fs = v11965
    gs = v11966
    cf = v11967
    ?1 = v11968
    pf = v11969
    ?3 = v11970
    af = v11971
    ?5 = v11972
    zf = v11973
    sf = v11974
    tf = v11975
    if = v11976
    df = v11977
    of = v11978
    iopl0 = v11979
    iopl1 = v11980
    nt = v11981
    ?15 = v11982
    memory = {}
    ip = v12097 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v12159
    cx = v12160
    dx = v12161
    bx = v12162
    sp = v12163-0x4 [from 0x80485b0:push   ebp]
    bp = v12164
    si = v12165
    di = v12166
    es = v12167
    cs = v12168
    ss = v12169
    ds = v12170
    fs = v12171
    gs = v12172
    cf = v12173
    ?1 = v12174
    pf = v12175
    ?3 = v12176
    af = v12177
    ?5 = v12178
    zf = v12179
    sf = v12180
    tf = v12181
    if = v12182
    df = v12183
    of = v12184
    iopl0 = v12185
    iopl1 = v12186
    nt = v12187
    ?15 = v12188
    memory = {
        size=4; addr=v12163-0x4 [from 0x80485b0:push   ebp]; value=v12164
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v12159
    cx = v12160
    dx = v12161
    bx = v12162
    sp = v12163-0x4 [from 0x80485b0:push   ebp]
    bp = v12163-0x4 [from 0x80485b0:push   ebp]
    si = v12165
    di = v12166
    es = v12167
    cs = v12168
    ss = v12169
    ds = v12170
    fs = v12171
    gs = v12172
    cf = v12173
    ?1 = v12174
    pf = v12175
    ?3 = v12176
    af = v12177
    ?5 = v12178
    zf = v12179
    sf = v12180
    tf = v12181
    if = v12182
    df = v12183
    of = v12184
    iopl0 = v12185
    iopl1 = v12186
    nt = v12187
    ?15 = v12188
    memory = {
        size=4; addr=v12163-0x4 [from 0x80485b0:push   ebp]; value=v12164
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v12159
    cx = v12160
    dx = v12161
    bx = v12162
    sp = v12163-0x8 [from 0x80485b3:push   ebx]
    bp = v12163-0x4 [from 0x80485b0:push   ebp]
    si = v12165
    di = v12166
    es = v12167
    cs = v12168
    ss = v12169
    ds = v12170
    fs = v12171
    gs = v12172
    cf = v12173
    ?1 = v12174
    pf = v12175
    ?3 = v12176
    af = v12177
    ?5 = v12178
    zf = v12179
    sf = v12180
    tf = v12181
    if = v12182
    df = v12183
    of = v12184
    iopl0 = v12185
    iopl1 = v12186
    nt = v12187
    ?15 = v12188
    memory = {
        size=4; addr=v12163-0x8 [from 0x80485b3:push   ebx]; value=v12162
        size=4; addr=v12163-0x4 [from 0x80485b0:push   ebp]; value=v12164
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v12159
    cx = v12160
    dx = v12161
    bx = v12162
    sp = v12163-0xc [from 0x80485b4:push   eax]
    bp = v12163-0x4 [from 0x80485b0:push   ebp]
    si = v12165
    di = v12166
    es = v12167
    cs = v12168
    ss = v12169
    ds = v12170
    fs = v12171
    gs = v12172
    cf = v12173
    ?1 = v12174
    pf = v12175
    ?3 = v12176
    af = v12177
    ?5 = v12178
    zf = v12179
    sf = v12180
    tf = v12181
    if = v12182
    df = v12183
    of = v12184
    iopl0 = v12185
    iopl1 = v12186
    nt = v12187
    ?15 = v12188
    memory = {
        size=4; addr=v12163-0xc [from 0x80485b4:push   eax]; value=v12159
        size=4; addr=v12163-0x8 [from 0x80485b3:push   ebx]; value=v12162
        size=4; addr=v12163-0x4 [from 0x80485b0:push   ebp]; value=v12164
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v12159
    cx = v12160
    dx = v12161
    bx = v12162
    sp = v12163-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v12163-0x4 [from 0x80485b0:push   ebp]
    si = v12165
    di = v12166
    es = v12167
    cs = v12168
    ss = v12169
    ds = v12170
    fs = v12171
    gs = v12172
    cf = v12173
    ?1 = v12174
    pf = v12175
    ?3 = v12176
    af = v12177
    ?5 = v12178
    zf = v12179
    sf = v12180
    tf = v12181
    if = v12182
    df = v12183
    of = v12184
    iopl0 = v12185
    iopl1 = v12186
    nt = v12187
    ?15 = v12188
    memory = {
        size=4; addr=v12163-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v12163-0xc [from 0x80485b4:push   eax]; value=v12159
        size=4; addr=v12163-0x8 [from 0x80485b3:push   ebx]; value=v12162
        size=4; addr=v12163-0x4 [from 0x80485b0:push   ebp]; value=v12164
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v12426
    cx = v12427
    dx = v12428
    bx = v12460 [from 0x80485ba:pop    ebx]
    sp = v12430+0x4 [from 0x80485ba:pop    ebx]
    bp = v12431
    si = v12432
    di = v12433
    es = v12434
    cs = v12435
    ss = v12436
    ds = v12437
    fs = v12438
    gs = v12439
    cf = v12440
    ?1 = v12441
    pf = v12442
    ?3 = v12443
    af = v12444
    ?5 = v12445
    zf = v12446
    sf = v12447
    tf = v12448
    if = v12449
    df = v12450
    of = v12451
    iopl0 = v12452
    iopl1 = v12453
    nt = v12454
    ?15 = v12455
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v12426
    cx = v12427
    dx = v12428
    bx = v12460+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v12430+0x4 [from 0x80485ba:pop    ebx]
    bp = v12431
    si = v12432
    di = v12433
    es = v12434
    cs = v12435
    ss = v12436
    ds = v12437
    fs = v12438
    gs = v12439
    cf = v12522 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v12441
    pf = -v12517-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v12443
    af = v12521 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v12445
    zf = v12520 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v12519 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v12448
    if = v12449
    df = v12450
    of = v12525 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v12452
    iopl1 = v12453
    nt = v12454
    ?15 = v12455
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v12426
    cx = v12427
    dx = v12428
    bx = v12460+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v12430 [from 0x80485c1:call   0x08048390]
    bp = v12431
    si = v12432
    di = v12433
    es = v12434
    cs = v12435
    ss = v12436
    ds = v12437
    fs = v12438
    gs = v12439
    cf = v12522 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v12441
    pf = -v12517-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v12443
    af = v12521 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v12445
    zf = v12520 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v12519 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v12448
    if = v12449
    df = v12450
    of = v12525 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v12452
    iopl1 = v12453
    nt = v12454
    ?15 = v12455
    memory = {
        size=4; addr=v12430 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v12688 [from 0x80485c6:pop    eax]
    cx = v12655
    dx = v12656
    bx = v12657
    sp = v12658+0x4 [from 0x80485c6:pop    eax]
    bp = v12659
    si = v12660
    di = v12661
    es = v12662
    cs = v12663
    ss = v12664
    ds = v12665
    fs = v12666
    gs = v12667
    cf = v12668
    ?1 = v12669
    pf = v12670
    ?3 = v12671
    af = v12672
    ?5 = v12673
    zf = v12674
    sf = v12675
    tf = v12676
    if = v12677
    df = v12678
    of = v12679
    iopl0 = v12680
    iopl1 = v12681
    nt = v12682
    ?15 = v12683
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v12688 [from 0x80485c6:pop    eax]
    cx = v12655
    dx = v12656
    bx = v12724 [from 0x80485c7:pop    ebx]
    sp = v12658+0x8 [from 0x80485c7:pop    ebx]
    bp = v12659
    si = v12660
    di = v12661
    es = v12662
    cs = v12663
    ss = v12664
    ds = v12665
    fs = v12666
    gs = v12667
    cf = v12668
    ?1 = v12669
    pf = v12670
    ?3 = v12671
    af = v12672
    ?5 = v12673
    zf = v12674
    sf = v12675
    tf = v12676
    if = v12677
    df = v12678
    of = v12679
    iopl0 = v12680
    iopl1 = v12681
    nt = v12682
    ?15 = v12683
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v12688 [from 0x80485c6:pop    eax]
    cx = v12655
    dx = v12656
    bx = v12724 [from 0x80485c7:pop    ebx]
    sp = v12659+0x4 [from 0x80485c8:leave  ]
    bp = v12760 [from 0x80485c8:leave  ]
    si = v12660
    di = v12661
    es = v12662
    cs = v12663
    ss = v12664
    ds = v12665
    fs = v12666
    gs = v12667
    cf = v12668
    ?1 = v12669
    pf = v12670
    ?3 = v12671
    af = v12672
    ?5 = v12673
    zf = v12674
    sf = v12675
    tf = v12676
    if = v12677
    df = v12678
    of = v12679
    iopl0 = v12680
    iopl1 = v12681
    nt = v12682
    ?15 = v12683
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v12688 [from 0x80485c6:pop    eax]
    cx = v12655
    dx = v12656
    bx = v12724 [from 0x80485c7:pop    ebx]
    sp = v12659+0x8 [from 0x80485c9:ret    ]
    bp = v12760 [from 0x80485c8:leave  ]
    si = v12660
    di = v12661
    es = v12662
    cs = v12663
    ss = v12664
    ds = v12665
    fs = v12666
    gs = v12667
    cf = v12668
    ?1 = v12669
    pf = v12670
    ?3 = v12671
    af = v12672
    ?5 = v12673
    zf = v12674
    sf = v12675
    tf = v12676
    if = v12677
    df = v12678
    of = v12679
    iopl0 = v12680
    iopl1 = v12681
    nt = v12682
    ?15 = v12683
    memory = {}
    ip = v12798 [from 0x80485c9:ret    ]
analyzed headers: 1
