program event_test

    event,allocatable:: a_event(:)[*]
    event,allocatable:: e_event(:)[*]

    integer :: rank
    integer :: size
    integer :: partner_0

    size = team_size(team_default)
    rank = team_rank(team_default)

    partner_0 = size-1

    allocate(a_event(10)[@team_default])
    allocate(e_event(10)[@team_default])


    if (rank .eq. 0) then
      write(*, '(A)') "event_test_2 OK: allocate events"
    endif 

    call event_init(a_event,10)
    call event_init(e_event,10)

    if (rank .eq. 0) then
      write(*, '(A)') "event_test_2 OK:  event_init"
    endif 

    call team_barrier()

    if (rank .eq. 0) then
      call event_wait(a_event(1))
    else if (rank .eq. partner_0) then 
      call event_notify(a_event(1)[0])
    end if 


end program event_test
