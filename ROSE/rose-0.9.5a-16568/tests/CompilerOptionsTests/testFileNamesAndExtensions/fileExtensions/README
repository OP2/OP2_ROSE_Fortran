#######################################################
SOME NOTES ON FILENAMES and EXTENSIONS
------------------------------------------------------
The general rules seem to be the following:

1. A c file can have only .c as extension.
2. A C PLUS PLUS file can have any of
   .C .cc .cp .cpp .cxx .c++ as extensions.

3. On case sensitive systems, the accepted suffixes for C PLUS PLUS
   files seem to be the following:
   .cc (==.CC) .cp (==.CP) .cpp (==.CPP) .cxx (==.CXX) .c++(==.C++)

4. On case insensitive systems, the accepted suffixes for C PLUS PLUS
   files seem to be the following:
    .C .cc .cp .cpp .cxx .c++
       .CC .CP .CPP .CXX .C++
#######################################################
GNU
------------------------------------------------------
In GNU, the code that checks and enforces these is in the 
file cppspec.c in data structure known_suffixes
 ".c",  ".C", ".cc", ".cxx", ".cpp", ".cp",  ".c++",
#######################################################
EDG 
------------------------------------------------------
file host_environ.h
c:C:cpp:CPP:cxx:CXX:cc
#######################################################
EXAMPLES OF CASE (IN)SENSITIVE systems:
------------------------------------------------------
Some systems are case sensitive (like UNIX/LINUX),
some are not (like MAC/DOS/WINDOWZ)

#######################################################
MY changes to DAN's cpp file name checker
------------------------------------------------------
I have defined a macro that checks (in some magical way)
about the sensitivity of the system and then enforces it.
#######################################################
TEST DIRECTORY CASE_SENSITIVE_SYSTEMS
------------------------------------------------------
The test codes are in the three directories.

CASE_SENSITIVE_SYSTEMS: compiles and tests each of the files 
with gcc, g++ , EDG and identityTranslator
------------------------------------------------------
CASE_INSENSITIVE_SYSTEMS: compiles and tests each of the files 
with gcc, g++ , EDG and identityTranslator. Note that "redundant"
suffixes have been removed.
------------------------------------------------------
WIERD: compiles and tests each of the files  with wierd suffixes
with gcc, g++ , EDG and identityTranslator. For now, they probably 
donot serve much purpose except for a future reference.
