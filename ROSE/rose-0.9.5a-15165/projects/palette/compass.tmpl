// vim: syn=cpp:

#define PALETTE_USE_ROSE
#include "rose.h"
#include "paletteCommon.h"

namespace CompassAnalyses {
  namespace PaletteGenerated {
    class Traversal {
      Compass::Parameters inputParameters;
      Compass::OutputObject* output;
@@@@@

      public:
      virtual void run() {
        Palette::Timer t("Query");
        paletteMain();
      }
      virtual void visit(SgNode*) {}

      Traversal(Compass::Parameters inputParameters,
          Compass::OutputObject* output)
        : inputParameters(inputParameters), output(output)
        {}
    };
  }
}

static void run(Compass::Parameters params, Compass::OutputObject* output) {
  CompassAnalyses::PaletteGenerated::Traversal(params, output).run();
}

extern const Compass::Checker* const myChecker =
  new Compass::Checker(
        "Palette-generated checker",
        "",
        "",
        Compass::C | Compass::Cpp,
        Compass::PrerequisiteList(),
        run);

#include "compass.C"
#include "compassTestMain.C"
