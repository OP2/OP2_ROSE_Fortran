=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v326
    cx = v327
    dx = v328
    bx = v329
    sp = v330-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v331
    si = v332
    di = v333
    es = v334
    cs = v335
    ss = v336
    ds = v337
    fs = v338
    gs = v339
    cf = v340
    ?1 = v341
    pf = v342
    ?3 = v343
    af = v344
    ?5 = v345
    zf = v346
    sf = v347
    tf = v348
    if = v349
    df = v350
    of = v351
    iopl0 = v352
    iopl1 = v353
    nt = v354
    ?15 = v355
    memory = {
        size=4; addr=v330-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v453
    cx = v454
    dx = v455
    bx = v456
    sp = v457-0x4 [from 0x80482d8:call   0x08048580]
    bp = v458
    si = v459
    di = v460
    es = v461
    cs = v462
    ss = v463
    ds = v464
    fs = v465
    gs = v466
    cf = v467
    ?1 = v468
    pf = v469
    ?3 = v470
    af = v471
    ?5 = v472
    zf = v473
    sf = v474
    tf = v475
    if = v476
    df = v477
    of = v478
    iopl0 = v479
    iopl1 = v480
    nt = v481
    ?15 = v482
    memory = {
        size=4; addr=v457-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v580
    cx = v581
    dx = v582
    bx = v583
    sp = v585+0x4 [from 0x80482dd:leave  ]
    bp = v614 [from 0x80482dd:leave  ]
    si = v586
    di = v587
    es = v588
    cs = v589
    ss = v590
    ds = v591
    fs = v592
    gs = v593
    cf = v594
    ?1 = v595
    pf = v596
    ?3 = v597
    af = v598
    ?5 = v599
    zf = v600
    sf = v601
    tf = v602
    if = v603
    df = v604
    of = v605
    iopl0 = v606
    iopl1 = v607
    nt = v608
    ?15 = v609
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v580
    cx = v581
    dx = v582
    bx = v583
    sp = v585+0x8 [from 0x80482de:ret    ]
    bp = v614 [from 0x80482dd:leave  ]
    si = v586
    di = v587
    es = v588
    cs = v589
    ss = v590
    ds = v591
    fs = v592
    gs = v593
    cf = v594
    ?1 = v595
    pf = v596
    ?3 = v597
    af = v598
    ?5 = v599
    zf = v600
    sf = v601
    tf = v602
    if = v603
    df = v604
    of = v605
    iopl0 = v606
    iopl1 = v607
    nt = v608
    ?15 = v609
    memory = {}
    ip = v652 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482df:add    bh, bh
    ax = v714
    cx = v715
    dx = v716
    bx = v782 [from 0x80482df:add    bh, bh]
    sp = v718
    bp = v719
    si = v720
    di = v721
    es = v722
    cs = v723
    ss = v724
    ds = v725
    fs = v726
    gs = v727
    cf = v775 [from 0x80482df:add    bh, bh]
    ?1 = v729
    pf = -v770-0x1 [from 0x80482df:add    bh, bh]
    ?3 = v731
    af = v774 [from 0x80482df:add    bh, bh]
    ?5 = v733
    zf = v773 [from 0x80482df:add    bh, bh]
    sf = v772 [from 0x80482df:add    bh, bh]
    tf = v736
    if = v737
    df = v738
    of = v778 [from 0x80482df:add    bh, bh]
    iopl0 = v740
    iopl1 = v741
    nt = v742
    ?15 = v743
    memory = {}
    ip = 0x80482e1 [from 0x80482df:add    bh, bh]
0x80482e1:xor    eax, 0x080496cc
    ax = v816 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = v715
    dx = v716
    bx = v782 [from 0x80482df:add    bh, bh]
    sp = v718
    bp = v719
    si = v720
    di = v721
    es = v722
    cs = v723
    ss = v724
    ds = v725
    fs = v726
    gs = v727
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = v729
    pf = -v832-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = v731
    af = <top>
    ?5 = v733
    zf = v835 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = v834 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = v736
    if = v737
    df = v738
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = v740
    iopl1 = v741
    nt = v742
    ?15 = v743
    memory = {}
    ip = 0x80482e6 [from 0x80482e1:xor    eax, 0x080496cc]
0x80482e6:jmp    DWORD PTR ds:[0x080496d0]
    ax = v816 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = v715
    dx = v716
    bx = v782 [from 0x80482df:add    bh, bh]
    sp = v718
    bp = v719
    si = v720
    di = v721
    es = v722
    cs = v723
    ss = v724
    ds = v725
    fs = v726
    gs = v727
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = v729
    pf = -v832-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = v731
    af = <top>
    ?5 = v733
    zf = v835 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = v834 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = v736
    if = v737
    df = v738
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = v740
    iopl1 = v741
    nt = v742
    ?15 = v743
    memory = {}
    ip = v873 [from 0x80482e6:jmp    DWORD PTR ds:[0x080496d0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482e0:push   DWORD PTR ds:[0x080496cc]
    ax = v935
    cx = v936
    dx = v937
    bx = v938
    sp = v939-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    bp = v940
    si = v941
    di = v942
    es = v943
    cs = v944
    ss = v945
    ds = v946
    fs = v947
    gs = v948
    cf = v949
    ?1 = v950
    pf = v951
    ?3 = v952
    af = v953
    ?5 = v954
    zf = v955
    sf = v956
    tf = v957
    if = v958
    df = v959
    of = v960
    iopl0 = v961
    iopl1 = v962
    nt = v963
    ?15 = v964
    memory = {
        size=4; addr=v939-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]; value=v971 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    }
    ip = 0x80482e6 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = v1064
    cx = v1065
    dx = v1066
    bx = v1067
    sp = v1068
    bp = v1069
    si = v1070
    di = v1071
    es = v1072
    cs = v1073
    ss = v1074
    ds = v1075
    fs = v1076
    gs = v1077
    cf = v1126 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?1 = v1079
    pf = -v1121-0x1 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?3 = v1081
    af = v1125 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?5 = v1083
    zf = v1124 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    sf = v1123 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    tf = v1086
    if = v1087
    df = v1088
    of = v1129 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    iopl0 = v1090
    iopl1 = v1091
    nt = v1092
    ?15 = v1093
    memory = {
        size=1; addr=v1064; value=v2162 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    }
    ip = 0x80482ee [from 0x80482ec:add    BYTE PTR ds:[eax], al]
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = v1064
    cx = v1065
    dx = v1066
    bx = v1067
    sp = v1068
    bp = v1069
    si = v1070
    di = v1071
    es = v1072
    cs = v1073
    ss = v1074
    ds = v1075
    fs = v1076
    gs = v1077
    cf = v1195 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?1 = v1079
    pf = -v1190-0x1 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?3 = v1081
    af = v1194 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?5 = v1083
    zf = v1193 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    sf = v1192 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    tf = v1086
    if = v1087
    df = v1088
    of = v1198 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    iopl0 = v1090
    iopl1 = v1091
    nt = v1092
    ?15 = v1093
    memory = {
        size=1; addr=v1064; value=v3226 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    }
    ip = 0x80482f0 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v1064
    cx = v1065
    dx = v1066
    bx = v1067
    sp = v1068
    bp = v1069
    si = v1070
    di = v1071
    es = v1072
    cs = v1073
    ss = v1074
    ds = v1075
    fs = v1076
    gs = v1077
    cf = v1195 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?1 = v1079
    pf = -v1190-0x1 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?3 = v1081
    af = v1194 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?5 = v1083
    zf = v1193 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    sf = v1192 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    tf = v1086
    if = v1087
    df = v1088
    of = v1198 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    iopl0 = v1090
    iopl1 = v1091
    nt = v1092
    ?15 = v1093
    memory = {
        size=1; addr=v1064; value=v3226 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    }
    ip = v1235 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f6:push   0x00000000
    ax = v1297
    cx = v1298
    dx = v1299
    bx = v1300
    sp = v1301-0x4 [from 0x80482f6:push   0x00000000]
    bp = v1302
    si = v1303
    di = v1304
    es = v1305
    cs = v1306
    ss = v1307
    ds = v1308
    fs = v1309
    gs = v1310
    cf = v1311
    ?1 = v1312
    pf = v1313
    ?3 = v1314
    af = v1315
    ?5 = v1316
    zf = v1317
    sf = v1318
    tf = v1319
    if = v1320
    df = v1321
    of = v1322
    iopl0 = v1323
    iopl1 = v1324
    nt = v1325
    ?15 = v1326
    memory = {
        size=4; addr=v1301-0x4 [from 0x80482f6:push   0x00000000]; value=0x0 [from 0x80482f6:push   0x00000000]
    }
    ip = 0x80482fb [from 0x80482f6:push   0x00000000]
0x80482fb:jmp    0x080482e0
    ax = v1297
    cx = v1298
    dx = v1299
    bx = v1300
    sp = v1301-0x4 [from 0x80482f6:push   0x00000000]
    bp = v1302
    si = v1303
    di = v1304
    es = v1305
    cs = v1306
    ss = v1307
    ds = v1308
    fs = v1309
    gs = v1310
    cf = v1311
    ?1 = v1312
    pf = v1313
    ?3 = v1314
    af = v1315
    ?5 = v1316
    zf = v1317
    sf = v1318
    tf = v1319
    if = v1320
    df = v1321
    of = v1322
    iopl0 = v1323
    iopl1 = v1324
    nt = v1325
    ?15 = v1326
    memory = {
        size=4; addr=v1301-0x4 [from 0x80482f6:push   0x00000000]; value=0x0 [from 0x80482f6:push   0x00000000]
    }
    ip = 0x80482e0 [from 0x80482fb:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v1457
    cx = v1458
    dx = v1459
    bx = v1460
    sp = v1461
    bp = v1462
    si = v1463
    di = v1464
    es = v1465
    cs = v1466
    ss = v1467
    ds = v1468
    fs = v1469
    gs = v1470
    cf = v1471
    ?1 = v1472
    pf = v1473
    ?3 = v1474
    af = v1475
    ?5 = v1476
    zf = v1477
    sf = v1478
    tf = v1479
    if = v1480
    df = v1481
    of = v1482
    iopl0 = v1483
    iopl1 = v1484
    nt = v1485
    ?15 = v1486
    memory = {}
    ip = v1490 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048306:push   0x00000008
    ax = v1552
    cx = v1553
    dx = v1554
    bx = v1555
    sp = v1556-0x4 [from 0x8048306:push   0x00000008]
    bp = v1557
    si = v1558
    di = v1559
    es = v1560
    cs = v1561
    ss = v1562
    ds = v1563
    fs = v1564
    gs = v1565
    cf = v1566
    ?1 = v1567
    pf = v1568
    ?3 = v1569
    af = v1570
    ?5 = v1571
    zf = v1572
    sf = v1573
    tf = v1574
    if = v1575
    df = v1576
    of = v1577
    iopl0 = v1578
    iopl1 = v1579
    nt = v1580
    ?15 = v1581
    memory = {
        size=4; addr=v1556-0x4 [from 0x8048306:push   0x00000008]; value=0x8 [from 0x8048306:push   0x00000008]
    }
    ip = 0x804830b [from 0x8048306:push   0x00000008]
0x804830b:jmp    0x080482e0
    ax = v1552
    cx = v1553
    dx = v1554
    bx = v1555
    sp = v1556-0x4 [from 0x8048306:push   0x00000008]
    bp = v1557
    si = v1558
    di = v1559
    es = v1560
    cs = v1561
    ss = v1562
    ds = v1563
    fs = v1564
    gs = v1565
    cf = v1566
    ?1 = v1567
    pf = v1568
    ?3 = v1569
    af = v1570
    ?5 = v1571
    zf = v1572
    sf = v1573
    tf = v1574
    if = v1575
    df = v1576
    of = v1577
    iopl0 = v1578
    iopl1 = v1579
    nt = v1580
    ?15 = v1581
    memory = {
        size=4; addr=v1556-0x4 [from 0x8048306:push   0x00000008]; value=0x8 [from 0x8048306:push   0x00000008]
    }
    ip = 0x80482e0 [from 0x804830b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v1712
    cx = v1713
    dx = v1714
    bx = v1715
    sp = v1716
    bp = v1717
    si = v1718
    di = v1719
    es = v1720
    cs = v1721
    ss = v1722
    ds = v1723
    fs = v1724
    gs = v1725
    cf = v1726
    ?1 = v1727
    pf = v1728
    ?3 = v1729
    af = v1730
    ?5 = v1731
    zf = v1732
    sf = v1733
    tf = v1734
    if = v1735
    df = v1736
    of = v1737
    iopl0 = v1738
    iopl1 = v1739
    nt = v1740
    ?15 = v1741
    memory = {}
    ip = v1745 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048316:push   0x00000010
    ax = v1807
    cx = v1808
    dx = v1809
    bx = v1810
    sp = v1811-0x4 [from 0x8048316:push   0x00000010]
    bp = v1812
    si = v1813
    di = v1814
    es = v1815
    cs = v1816
    ss = v1817
    ds = v1818
    fs = v1819
    gs = v1820
    cf = v1821
    ?1 = v1822
    pf = v1823
    ?3 = v1824
    af = v1825
    ?5 = v1826
    zf = v1827
    sf = v1828
    tf = v1829
    if = v1830
    df = v1831
    of = v1832
    iopl0 = v1833
    iopl1 = v1834
    nt = v1835
    ?15 = v1836
    memory = {
        size=4; addr=v1811-0x4 [from 0x8048316:push   0x00000010]; value=0x10 [from 0x8048316:push   0x00000010]
    }
    ip = 0x804831b [from 0x8048316:push   0x00000010]
0x804831b:jmp    0x080482e0
    ax = v1807
    cx = v1808
    dx = v1809
    bx = v1810
    sp = v1811-0x4 [from 0x8048316:push   0x00000010]
    bp = v1812
    si = v1813
    di = v1814
    es = v1815
    cs = v1816
    ss = v1817
    ds = v1818
    fs = v1819
    gs = v1820
    cf = v1821
    ?1 = v1822
    pf = v1823
    ?3 = v1824
    af = v1825
    ?5 = v1826
    zf = v1827
    sf = v1828
    tf = v1829
    if = v1830
    df = v1831
    of = v1832
    iopl0 = v1833
    iopl1 = v1834
    nt = v1835
    ?15 = v1836
    memory = {
        size=4; addr=v1811-0x4 [from 0x8048316:push   0x00000010]; value=0x10 [from 0x8048316:push   0x00000010]
    }
    ip = 0x80482e0 [from 0x804831b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v1967
    cx = v1968
    dx = v1969
    bx = v1970
    sp = v1971
    bp = v1972
    si = v1973
    di = v1974
    es = v1975
    cs = v1976
    ss = v1977
    ds = v1978
    fs = v1979
    gs = v1980
    cf = v1981
    ?1 = v1982
    pf = v1983
    ?3 = v1984
    af = v1985
    ?5 = v1986
    zf = v1987
    sf = v1988
    tf = v1989
    if = v1990
    df = v1991
    of = v1992
    iopl0 = v1993
    iopl1 = v1994
    nt = v1995
    ?15 = v1996
    memory = {}
    ip = v2000 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048326:push   0x00000018
    ax = v2062
    cx = v2063
    dx = v2064
    bx = v2065
    sp = v2066-0x4 [from 0x8048326:push   0x00000018]
    bp = v2067
    si = v2068
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = v2076
    ?1 = v2077
    pf = v2078
    ?3 = v2079
    af = v2080
    ?5 = v2081
    zf = v2082
    sf = v2083
    tf = v2084
    if = v2085
    df = v2086
    of = v2087
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2066-0x4 [from 0x8048326:push   0x00000018]; value=0x18 [from 0x8048326:push   0x00000018]
    }
    ip = 0x804832b [from 0x8048326:push   0x00000018]
0x804832b:jmp    0x080482e0
    ax = v2062
    cx = v2063
    dx = v2064
    bx = v2065
    sp = v2066-0x4 [from 0x8048326:push   0x00000018]
    bp = v2067
    si = v2068
    di = v2069
    es = v2070
    cs = v2071
    ss = v2072
    ds = v2073
    fs = v2074
    gs = v2075
    cf = v2076
    ?1 = v2077
    pf = v2078
    ?3 = v2079
    af = v2080
    ?5 = v2081
    zf = v2082
    sf = v2083
    tf = v2084
    if = v2085
    df = v2086
    of = v2087
    iopl0 = v2088
    iopl1 = v2089
    nt = v2090
    ?15 = v2091
    memory = {
        size=4; addr=v2066-0x4 [from 0x8048326:push   0x00000018]; value=0x18 [from 0x8048326:push   0x00000018]
    }
    ip = 0x80482e0 [from 0x804832b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v2222
    cx = v2223
    dx = v2224
    bx = v2225
    sp = v2226
    bp = v2227
    si = v2228
    di = v2229
    es = v2230
    cs = v2231
    ss = v2232
    ds = v2233
    fs = v2234
    gs = v2235
    cf = v2236
    ?1 = v2237
    pf = v2238
    ?3 = v2239
    af = v2240
    ?5 = v2241
    zf = v2242
    sf = v2243
    tf = v2244
    if = v2245
    df = v2246
    of = v2247
    iopl0 = v2248
    iopl1 = v2249
    nt = v2250
    ?15 = v2251
    memory = {}
    ip = v2255 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048336:push   0x00000020
    ax = v2317
    cx = v2318
    dx = v2319
    bx = v2320
    sp = v2321-0x4 [from 0x8048336:push   0x00000020]
    bp = v2322
    si = v2323
    di = v2324
    es = v2325
    cs = v2326
    ss = v2327
    ds = v2328
    fs = v2329
    gs = v2330
    cf = v2331
    ?1 = v2332
    pf = v2333
    ?3 = v2334
    af = v2335
    ?5 = v2336
    zf = v2337
    sf = v2338
    tf = v2339
    if = v2340
    df = v2341
    of = v2342
    iopl0 = v2343
    iopl1 = v2344
    nt = v2345
    ?15 = v2346
    memory = {
        size=4; addr=v2321-0x4 [from 0x8048336:push   0x00000020]; value=0x20 [from 0x8048336:push   0x00000020]
    }
    ip = 0x804833b [from 0x8048336:push   0x00000020]
0x804833b:jmp    0x080482e0
    ax = v2317
    cx = v2318
    dx = v2319
    bx = v2320
    sp = v2321-0x4 [from 0x8048336:push   0x00000020]
    bp = v2322
    si = v2323
    di = v2324
    es = v2325
    cs = v2326
    ss = v2327
    ds = v2328
    fs = v2329
    gs = v2330
    cf = v2331
    ?1 = v2332
    pf = v2333
    ?3 = v2334
    af = v2335
    ?5 = v2336
    zf = v2337
    sf = v2338
    tf = v2339
    if = v2340
    df = v2341
    of = v2342
    iopl0 = v2343
    iopl1 = v2344
    nt = v2345
    ?15 = v2346
    memory = {
        size=4; addr=v2321-0x4 [from 0x8048336:push   0x00000020]; value=0x20 [from 0x8048336:push   0x00000020]
    }
    ip = 0x80482e0 [from 0x804833b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v2477
    cx = v2478
    dx = v2479
    bx = v2480
    sp = v2481
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2483
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2492
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v2477
    cx = v2478
    dx = v2479
    bx = v2480
    sp = v2481+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2492
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2481+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2492
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0x8 [from 0x8048349:push   esp]; value=v2632-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0xc [from 0x804834a:push   edx]; value=v2479
        size=4; addr=v2632-0x8 [from 0x8048349:push   esp]; value=v2632-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2632-0xc [from 0x804834a:push   edx]; value=v2479
        size=4; addr=v2632-0x8 [from 0x8048349:push   esp]; value=v2632-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2632-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2632-0xc [from 0x804834a:push   edx]; value=v2479
        size=4; addr=v2632-0x8 [from 0x8048349:push   esp]; value=v2632-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0x18 [from 0x8048355:push   ecx]; value=v2481+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2632-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2632-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2632-0xc [from 0x804834a:push   edx]; value=v2479
        size=4; addr=v2632-0x8 [from 0x8048349:push   esp]; value=v2632-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0x1c [from 0x8048356:push   esi]; value=v2566 [from 0x8048342:pop    esi]
        size=4; addr=v2632-0x18 [from 0x8048355:push   ecx]; value=v2481+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2632-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2632-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2632-0xc [from 0x804834a:push   edx]; value=v2479
        size=4; addr=v2632-0x8 [from 0x8048349:push   esp]; value=v2632-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v2632-0x1c [from 0x8048356:push   esi]; value=v2566 [from 0x8048342:pop    esi]
        size=4; addr=v2632-0x18 [from 0x8048355:push   ecx]; value=v2481+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2632-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2632-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2632-0xc [from 0x804834a:push   edx]; value=v2479
        size=4; addr=v2632-0x8 [from 0x8048349:push   esp]; value=v2632-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v2477
    cx = v2481+0x4 [from 0x8048342:pop    esi]
    dx = v2479
    bx = v2480
    sp = v2632-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2566 [from 0x8048342:pop    esi]
    di = v2484
    es = v2485
    cs = v2486
    ss = v2487
    ds = v2488
    fs = v2489
    gs = v2490
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2492
    pf = -v2648-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2494
    af = <top>
    ?5 = v2496
    zf = v2651 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2650 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2499
    if = v2500
    df = v2501
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2503
    iopl1 = v2504
    nt = v2505
    ?15 = v2506
    memory = {
        size=4; addr=v2632-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v2632-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v2632-0x1c [from 0x8048356:push   esi]; value=v2566 [from 0x8048342:pop    esi]
        size=4; addr=v2632-0x18 [from 0x8048355:push   ecx]; value=v2481+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2632-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2632-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2632-0xc [from 0x804834a:push   edx]; value=v2479
        size=4; addr=v2632-0x8 [from 0x8048349:push   esp]; value=v2632-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2632-0x4 [from 0x8048348:push   eax]; value=v2477
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v3074
    cx = v3075
    dx = v3076
    bx = v3077
    sp = v3078
    bp = v3079
    si = v3080
    di = v3081
    es = v3082
    cs = v3083
    ss = v3084
    ds = v3085
    fs = v3086
    gs = v3087
    cf = v3088
    ?1 = v3089
    pf = v3090
    ?3 = v3091
    af = v3092
    ?5 = v3093
    zf = v3094
    sf = v3095
    tf = v3096
    if = v3097
    df = v3098
    of = v3099
    iopl0 = v3100
    iopl1 = v3101
    nt = v3102
    ?15 = v3103
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048362:nop    
    ax = v3167
    cx = v3168
    dx = v3169
    bx = v3170
    sp = v3171
    bp = v3172
    si = v3173
    di = v3174
    es = v3175
    cs = v3176
    ss = v3177
    ds = v3178
    fs = v3179
    gs = v3180
    cf = v3181
    ?1 = v3182
    pf = v3183
    ?3 = v3184
    af = v3185
    ?5 = v3186
    zf = v3187
    sf = v3188
    tf = v3189
    if = v3190
    df = v3191
    of = v3192
    iopl0 = v3193
    iopl1 = v3194
    nt = v3195
    ?15 = v3196
    memory = {}
    ip = 0x8048363 [from 0x8048362:nop    ]
0x8048363:nop    
    ax = v3167
    cx = v3168
    dx = v3169
    bx = v3170
    sp = v3171
    bp = v3172
    si = v3173
    di = v3174
    es = v3175
    cs = v3176
    ss = v3177
    ds = v3178
    fs = v3179
    gs = v3180
    cf = v3181
    ?1 = v3182
    pf = v3183
    ?3 = v3184
    af = v3185
    ?5 = v3186
    zf = v3187
    sf = v3188
    tf = v3189
    if = v3190
    df = v3191
    of = v3192
    iopl0 = v3193
    iopl1 = v3194
    nt = v3195
    ?15 = v3196
    memory = {}
    ip = 0x8048364 [from 0x8048363:nop    ]
0x8048364:push   ebp
    ax = v3167
    cx = v3168
    dx = v3169
    bx = v3170
    sp = v3171-0x4 [from 0x8048364:push   ebp]
    bp = v3172
    si = v3173
    di = v3174
    es = v3175
    cs = v3176
    ss = v3177
    ds = v3178
    fs = v3179
    gs = v3180
    cf = v3181
    ?1 = v3182
    pf = v3183
    ?3 = v3184
    af = v3185
    ?5 = v3186
    zf = v3187
    sf = v3188
    tf = v3189
    if = v3190
    df = v3191
    of = v3192
    iopl0 = v3193
    iopl1 = v3194
    nt = v3195
    ?15 = v3196
    memory = {
        size=4; addr=v3171-0x4 [from 0x8048364:push   ebp]; value=v3172
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v3167
    cx = v3168
    dx = v3169
    bx = v3170
    sp = v3171-0x4 [from 0x8048364:push   ebp]
    bp = v3171-0x4 [from 0x8048364:push   ebp]
    si = v3173
    di = v3174
    es = v3175
    cs = v3176
    ss = v3177
    ds = v3178
    fs = v3179
    gs = v3180
    cf = v3181
    ?1 = v3182
    pf = v3183
    ?3 = v3184
    af = v3185
    ?5 = v3186
    zf = v3187
    sf = v3188
    tf = v3189
    if = v3190
    df = v3191
    of = v3192
    iopl0 = v3193
    iopl1 = v3194
    nt = v3195
    ?15 = v3196
    memory = {
        size=4; addr=v3171-0x4 [from 0x8048364:push   ebp]; value=v3172
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v3167
    cx = v3168
    dx = v3169
    bx = v3170
    sp = v3171-0x8 [from 0x8048367:push   ebx]
    bp = v3171-0x4 [from 0x8048364:push   ebp]
    si = v3173
    di = v3174
    es = v3175
    cs = v3176
    ss = v3177
    ds = v3178
    fs = v3179
    gs = v3180
    cf = v3181
    ?1 = v3182
    pf = v3183
    ?3 = v3184
    af = v3185
    ?5 = v3186
    zf = v3187
    sf = v3188
    tf = v3189
    if = v3190
    df = v3191
    of = v3192
    iopl0 = v3193
    iopl1 = v3194
    nt = v3195
    ?15 = v3196
    memory = {
        size=4; addr=v3171-0x8 [from 0x8048367:push   ebx]; value=v3170
        size=4; addr=v3171-0x4 [from 0x8048364:push   ebp]; value=v3172
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v3167
    cx = v3168
    dx = v3169
    bx = v3170
    sp = v3171-0xc [from 0x8048368:push   ecx]
    bp = v3171-0x4 [from 0x8048364:push   ebp]
    si = v3173
    di = v3174
    es = v3175
    cs = v3176
    ss = v3177
    ds = v3178
    fs = v3179
    gs = v3180
    cf = v3181
    ?1 = v3182
    pf = v3183
    ?3 = v3184
    af = v3185
    ?5 = v3186
    zf = v3187
    sf = v3188
    tf = v3189
    if = v3190
    df = v3191
    of = v3192
    iopl0 = v3193
    iopl1 = v3194
    nt = v3195
    ?15 = v3196
    memory = {
        size=4; addr=v3171-0xc [from 0x8048368:push   ecx]; value=v3168
        size=4; addr=v3171-0x8 [from 0x8048367:push   ebx]; value=v3170
        size=4; addr=v3171-0x4 [from 0x8048364:push   ebp]; value=v3172
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v3167
    cx = v3168
    dx = v3169
    bx = v3170
    sp = v3171-0x10 [from 0x8048369:call   0x0804836e]
    bp = v3171-0x4 [from 0x8048364:push   ebp]
    si = v3173
    di = v3174
    es = v3175
    cs = v3176
    ss = v3177
    ds = v3178
    fs = v3179
    gs = v3180
    cf = v3181
    ?1 = v3182
    pf = v3183
    ?3 = v3184
    af = v3185
    ?5 = v3186
    zf = v3187
    sf = v3188
    tf = v3189
    if = v3190
    df = v3191
    of = v3192
    iopl0 = v3193
    iopl1 = v3194
    nt = v3195
    ?15 = v3196
    memory = {
        size=4; addr=v3171-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v3171-0xc [from 0x8048368:push   ecx]; value=v3168
        size=4; addr=v3171-0x8 [from 0x8048367:push   ebx]; value=v3170
        size=4; addr=v3171-0x4 [from 0x8048364:push   ebp]; value=v3172
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v3498
    cx = v3499
    dx = v3500
    bx = v3532 [from 0x804836e:pop    ebx]
    sp = v3502+0x4 [from 0x804836e:pop    ebx]
    bp = v3503
    si = v3504
    di = v3505
    es = v3506
    cs = v3507
    ss = v3508
    ds = v3509
    fs = v3510
    gs = v3511
    cf = v3512
    ?1 = v3513
    pf = v3514
    ?3 = v3515
    af = v3516
    ?5 = v3517
    zf = v3518
    sf = v3519
    tf = v3520
    if = v3521
    df = v3522
    of = v3523
    iopl0 = v3524
    iopl1 = v3525
    nt = v3526
    ?15 = v3527
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v3498
    cx = v3499
    dx = v3500
    bx = v3532+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3502+0x4 [from 0x804836e:pop    ebx]
    bp = v3503
    si = v3504
    di = v3505
    es = v3506
    cs = v3507
    ss = v3508
    ds = v3509
    fs = v3510
    gs = v3511
    cf = v3594 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v3513
    pf = -v3589-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v3515
    af = v3593 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v3517
    zf = v3592 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v3591 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v3520
    if = v3521
    df = v3522
    of = v3597 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v3524
    iopl1 = v3525
    nt = v3526
    ?15 = v3527
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v3498
    cx = v3499
    dx = v3633 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3532+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3502+0x4 [from 0x804836e:pop    ebx]
    bp = v3503
    si = v3504
    di = v3505
    es = v3506
    cs = v3507
    ss = v3508
    ds = v3509
    fs = v3510
    gs = v3511
    cf = v3594 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v3513
    pf = -v3589-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v3515
    af = v3593 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v3517
    zf = v3592 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v3591 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v3520
    if = v3521
    df = v3522
    of = v3597 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v3524
    iopl1 = v3525
    nt = v3526
    ?15 = v3527
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v3498
    cx = v3499
    dx = v3633 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3532+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3502+0x4 [from 0x804836e:pop    ebx]
    bp = v3503
    si = v3504
    di = v3505
    es = v3506
    cs = v3507
    ss = v3508
    ds = v3509
    fs = v3510
    gs = v3511
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v3513
    pf = -v3682-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v3515
    af = <top>
    ?5 = v3517
    zf = v3685 [from 0x804837b:test   edx, edx]
    sf = v3684 [from 0x804837b:test   edx, edx]
    tf = v3520
    if = v3521
    df = v3522
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v3524
    iopl1 = v3525
    nt = v3526
    ?15 = v3527
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v3498
    cx = v3499
    dx = v3633 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3532+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3502+0x4 [from 0x804836e:pop    ebx]
    bp = v3503
    si = v3504
    di = v3505
    es = v3506
    cs = v3507
    ss = v3508
    ds = v3509
    fs = v3510
    gs = v3511
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v3513
    pf = -v3682-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v3515
    af = <top>
    ?5 = v3517
    zf = v3685 [from 0x804837b:test   edx, edx]
    sf = v3684 [from 0x804837b:test   edx, edx]
    tf = v3520
    if = v3521
    df = v3522
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v3524
    iopl1 = v3525
    nt = v3526
    ?15 = v3527
    memory = {}
    ip = v3722 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v3844
    cx = v3845
    dx = v3846
    bx = v3847
    sp = v3848-0x4 [from 0x804837f:call   0x08048330]
    bp = v3849
    si = v3850
    di = v3851
    es = v3852
    cs = v3853
    ss = v3854
    ds = v3855
    fs = v3856
    gs = v3857
    cf = v3858
    ?1 = v3859
    pf = v3860
    ?3 = v3861
    af = v3862
    ?5 = v3863
    zf = v3864
    sf = v3865
    tf = v3866
    if = v3867
    df = v3868
    of = v3869
    iopl0 = v3870
    iopl1 = v3871
    nt = v3872
    ?15 = v3873
    memory = {
        size=4; addr=v3848-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v4005 [from 0x8048384:pop    eax]
    cx = v3972
    dx = v3973
    bx = v3974
    sp = v3975+0x4 [from 0x8048384:pop    eax]
    bp = v3976
    si = v3977
    di = v3978
    es = v3979
    cs = v3980
    ss = v3981
    ds = v3982
    fs = v3983
    gs = v3984
    cf = v3985
    ?1 = v3986
    pf = v3987
    ?3 = v3988
    af = v3989
    ?5 = v3990
    zf = v3991
    sf = v3992
    tf = v3993
    if = v3994
    df = v3995
    of = v3996
    iopl0 = v3997
    iopl1 = v3998
    nt = v3999
    ?15 = v4000
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v4005 [from 0x8048384:pop    eax]
    cx = v3972
    dx = v3973
    bx = v4041 [from 0x8048385:pop    ebx]
    sp = v3975+0x8 [from 0x8048385:pop    ebx]
    bp = v3976
    si = v3977
    di = v3978
    es = v3979
    cs = v3980
    ss = v3981
    ds = v3982
    fs = v3983
    gs = v3984
    cf = v3985
    ?1 = v3986
    pf = v3987
    ?3 = v3988
    af = v3989
    ?5 = v3990
    zf = v3991
    sf = v3992
    tf = v3993
    if = v3994
    df = v3995
    of = v3996
    iopl0 = v3997
    iopl1 = v3998
    nt = v3999
    ?15 = v4000
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v4005 [from 0x8048384:pop    eax]
    cx = v3972
    dx = v3973
    bx = v4041 [from 0x8048385:pop    ebx]
    sp = v3976+0x4 [from 0x8048386:leave  ]
    bp = v4077 [from 0x8048386:leave  ]
    si = v3977
    di = v3978
    es = v3979
    cs = v3980
    ss = v3981
    ds = v3982
    fs = v3983
    gs = v3984
    cf = v3985
    ?1 = v3986
    pf = v3987
    ?3 = v3988
    af = v3989
    ?5 = v3990
    zf = v3991
    sf = v3992
    tf = v3993
    if = v3994
    df = v3995
    of = v3996
    iopl0 = v3997
    iopl1 = v3998
    nt = v3999
    ?15 = v4000
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v4005 [from 0x8048384:pop    eax]
    cx = v3972
    dx = v3973
    bx = v4041 [from 0x8048385:pop    ebx]
    sp = v3976+0x8 [from 0x8048387:ret    ]
    bp = v4077 [from 0x8048386:leave  ]
    si = v3977
    di = v3978
    es = v3979
    cs = v3980
    ss = v3981
    ds = v3982
    fs = v3983
    gs = v3984
    cf = v3985
    ?1 = v3986
    pf = v3987
    ?3 = v3988
    af = v3989
    ?5 = v3990
    zf = v3991
    sf = v3992
    tf = v3993
    if = v3994
    df = v3995
    of = v3996
    iopl0 = v3997
    iopl1 = v3998
    nt = v3999
    ?15 = v4000
    memory = {}
    ip = v4115 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048388:nop    
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {}
    ip = 0x8048389 [from 0x8048388:nop    ]
0x8048389:nop    
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {}
    ip = 0x804838a [from 0x8048389:nop    ]
0x804838a:nop    
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {}
    ip = 0x804838b [from 0x804838a:nop    ]
0x804838b:nop    
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {}
    ip = 0x804838c [from 0x804838b:nop    ]
0x804838c:nop    
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {}
    ip = 0x804838d [from 0x804838c:nop    ]
0x804838d:nop    
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {}
    ip = 0x804838e [from 0x804838d:nop    ]
0x804838e:nop    
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {}
    ip = 0x804838f [from 0x804838e:nop    ]
0x804838f:nop    
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {}
    ip = 0x8048390 [from 0x804838f:nop    ]
0x8048390:push   ebp
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181-0x4 [from 0x8048390:push   ebp]
    bp = v4182
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {
        size=4; addr=v4181-0x4 [from 0x8048390:push   ebp]; value=v4182
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181-0x4 [from 0x8048390:push   ebp]
    bp = v4181-0x4 [from 0x8048390:push   ebp]
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = v4191
    ?1 = v4192
    pf = v4193
    ?3 = v4194
    af = v4195
    ?5 = v4196
    zf = v4197
    sf = v4198
    tf = v4199
    if = v4200
    df = v4201
    of = v4202
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {
        size=4; addr=v4181-0x4 [from 0x8048390:push   ebp]; value=v4182
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4181-0x4 [from 0x8048390:push   ebp]
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = -v4564-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v4192
    pf = -v4558-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v4194
    af = -v4562-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v4196
    zf = v4561 [from 0x8048393:sub    esp, 0x08]
    sf = v4560 [from 0x8048393:sub    esp, 0x08]
    tf = v4199
    if = v4200
    df = v4201
    of = v4568 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {
        size=4; addr=v4181-0x4 [from 0x8048390:push   ebp]; value=v4182
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4181-0x4 [from 0x8048390:push   ebp]
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = -v4636-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v4192
    pf = -v4630-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v4194
    af = -v4634-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v4196
    zf = v4633 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v4632 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v4199
    if = v4200
    df = v4201
    of = v4640 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {
        size=4; addr=v4181-0x4 [from 0x8048390:push   ebp]; value=v4182
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v4177
    cx = v4178
    dx = v4179
    bx = v4180
    sp = v4181-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4181-0x4 [from 0x8048390:push   ebp]
    si = v4183
    di = v4184
    es = v4185
    cs = v4186
    ss = v4187
    ds = v4188
    fs = v4189
    gs = v4190
    cf = -v4636-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v4192
    pf = -v4630-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v4194
    af = -v4634-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v4196
    zf = v4633 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v4632 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v4199
    if = v4200
    df = v4201
    of = v4640 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v4203
    iopl1 = v4204
    nt = v4205
    ?15 = v4206
    memory = {
        size=4; addr=v4181-0x4 [from 0x8048390:push   ebp]; value=v4182
    }
    ip = v4675 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v4830 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4798
    dx = v4799
    bx = v4800
    sp = v4801
    bp = v4802
    si = v4803
    di = v4804
    es = v4805
    cs = v4806
    ss = v4807
    ds = v4808
    fs = v4809
    gs = v4810
    cf = v4811
    ?1 = v4812
    pf = v4813
    ?3 = v4814
    af = v4815
    ?5 = v4816
    zf = v4817
    sf = v4818
    tf = v4819
    if = v4820
    df = v4821
    of = v4822
    iopl0 = v4823
    iopl1 = v4824
    nt = v4825
    ?15 = v4826
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v4830 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4798
    dx = v4864 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v4800
    sp = v4801
    bp = v4802
    si = v4803
    di = v4804
    es = v4805
    cs = v4806
    ss = v4807
    ds = v4808
    fs = v4809
    gs = v4810
    cf = v4811
    ?1 = v4812
    pf = v4813
    ?3 = v4814
    af = v4815
    ?5 = v4816
    zf = v4817
    sf = v4818
    tf = v4819
    if = v4820
    df = v4821
    of = v4822
    iopl0 = v4823
    iopl1 = v4824
    nt = v4825
    ?15 = v4826
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v4830 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4798
    dx = v4864 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v4800
    sp = v4801
    bp = v4802
    si = v4803
    di = v4804
    es = v4805
    cs = v4806
    ss = v4807
    ds = v4808
    fs = v4809
    gs = v4810
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v4812
    pf = -v4913-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v4814
    af = <top>
    ?5 = v4816
    zf = v4916 [from 0x80483a6:test   edx, edx]
    sf = v4915 [from 0x80483a6:test   edx, edx]
    tf = v4819
    if = v4820
    df = v4821
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v4823
    iopl1 = v4824
    nt = v4825
    ?15 = v4826
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v4830 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v4798
    dx = v4864 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v4800
    sp = v4801
    bp = v4802
    si = v4803
    di = v4804
    es = v4805
    cs = v4806
    ss = v4807
    ds = v4808
    fs = v4809
    gs = v4810
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v4812
    pf = -v4913-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v4814
    af = <top>
    ?5 = v4816
    zf = v4916 [from 0x80483a6:test   edx, edx]
    sf = v4915 [from 0x80483a6:test   edx, edx]
    tf = v4819
    if = v4820
    df = v4821
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v4823
    iopl1 = v4824
    nt = v4825
    ?15 = v4826
    memory = {}
    ip = v4953 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v5075
    cx = v5076
    dx = v5077
    bx = v5078
    sp = v5079
    bp = v5080
    si = v5081 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5082
    es = v5083
    cs = v5084
    ss = v5085
    ds = v5086
    fs = v5087
    gs = v5088
    cf = v5089
    ?1 = v5090
    pf = v5091
    ?3 = v5092
    af = v5093
    ?5 = v5094
    zf = v5095
    sf = v5096
    tf = v5097
    if = v5098
    df = v5099
    of = v5100
    iopl0 = v5101
    iopl1 = v5102
    nt = v5103
    ?15 = v5104
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v5075+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5076
    dx = v5077
    bx = v5078
    sp = v5079
    bp = v5080
    si = v5081 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5082
    es = v5083
    cs = v5084
    ss = v5085
    ds = v5086
    fs = v5087
    gs = v5088
    cf = v5169 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5090
    pf = -v5164-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5092
    af = v5168 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5094
    zf = v5167 [from 0x80483b0:add    eax, 0x04]
    sf = v5166 [from 0x80483b0:add    eax, 0x04]
    tf = v5097
    if = v5098
    df = v5099
    of = v5172 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5101
    iopl1 = v5102
    nt = v5103
    ?15 = v5104
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v5075+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5076
    dx = v5077
    bx = v5078
    sp = v5079
    bp = v5080
    si = v5081 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5082
    es = v5083
    cs = v5084
    ss = v5085
    ds = v5086
    fs = v5087
    gs = v5088
    cf = v5169 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5090
    pf = -v5164-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5092
    af = v5168 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5094
    zf = v5167 [from 0x80483b0:add    eax, 0x04]
    sf = v5166 [from 0x80483b0:add    eax, 0x04]
    tf = v5097
    if = v5098
    df = v5099
    of = v5172 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5101
    iopl1 = v5102
    nt = v5103
    ?15 = v5104
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v5075+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v5075+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5076
    dx = v5077
    bx = v5078
    sp = v5079-0x4 [from 0x80483b8:call   edx]
    bp = v5080
    si = v5081 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5082
    es = v5083
    cs = v5084
    ss = v5085
    ds = v5086
    fs = v5087
    gs = v5088
    cf = v5169 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5090
    pf = -v5164-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5092
    af = v5168 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5094
    zf = v5167 [from 0x80483b0:add    eax, 0x04]
    sf = v5166 [from 0x80483b0:add    eax, 0x04]
    tf = v5097
    if = v5098
    df = v5099
    of = v5172 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5101
    iopl1 = v5102
    nt = v5103
    ?15 = v5104
    memory = {
        size=4; addr=v5079-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v5077
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v5338 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5306
    dx = v5307
    bx = v5308
    sp = v5309
    bp = v5310
    si = v5311
    di = v5312
    es = v5313
    cs = v5314
    ss = v5315
    ds = v5316
    fs = v5317
    gs = v5318
    cf = v5319
    ?1 = v5320
    pf = v5321
    ?3 = v5322
    af = v5323
    ?5 = v5324
    zf = v5325
    sf = v5326
    tf = v5327
    if = v5328
    df = v5329
    of = v5330
    iopl0 = v5331
    iopl1 = v5332
    nt = v5333
    ?15 = v5334
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v5338 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5306
    dx = v5372 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5308
    sp = v5309
    bp = v5310
    si = v5311
    di = v5312
    es = v5313
    cs = v5314
    ss = v5315
    ds = v5316
    fs = v5317
    gs = v5318
    cf = v5319
    ?1 = v5320
    pf = v5321
    ?3 = v5322
    af = v5323
    ?5 = v5324
    zf = v5325
    sf = v5326
    tf = v5327
    if = v5328
    df = v5329
    of = v5330
    iopl0 = v5331
    iopl1 = v5332
    nt = v5333
    ?15 = v5334
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v5338 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5306
    dx = v5372 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5308
    sp = v5309
    bp = v5310
    si = v5311
    di = v5312
    es = v5313
    cs = v5314
    ss = v5315
    ds = v5316
    fs = v5317
    gs = v5318
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v5320
    pf = -v5421-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v5322
    af = <top>
    ?5 = v5324
    zf = v5424 [from 0x80483c1:test   edx, edx]
    sf = v5423 [from 0x80483c1:test   edx, edx]
    tf = v5327
    if = v5328
    df = v5329
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v5331
    iopl1 = v5332
    nt = v5333
    ?15 = v5334
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v5338 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5306
    dx = v5372 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5308
    sp = v5309
    bp = v5310
    si = v5311
    di = v5312
    es = v5313
    cs = v5314
    ss = v5315
    ds = v5316
    fs = v5317
    gs = v5318
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v5320
    pf = -v5421-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v5322
    af = <top>
    ?5 = v5324
    zf = v5424 [from 0x80483c1:test   edx, edx]
    sf = v5423 [from 0x80483c1:test   edx, edx]
    tf = v5327
    if = v5328
    df = v5329
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v5331
    iopl1 = v5332
    nt = v5333
    ?15 = v5334
    memory = {}
    ip = v5462 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v5584
    cx = v5585
    dx = v5586
    bx = v5587
    sp = v5588
    bp = v5589
    si = v5590
    di = v5591
    es = v5592
    cs = v5593
    ss = v5594
    ds = v5595
    fs = v5596
    gs = v5597
    cf = v5598
    ?1 = v5599
    pf = v5600
    ?3 = v5601
    af = v5602
    ?5 = v5603
    zf = v5604
    sf = v5605
    tf = v5606
    if = v5607
    df = v5608
    of = v5609
    iopl0 = v5610
    iopl1 = v5611
    nt = v5612
    ?15 = v5613
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v5584
    cx = v5585
    dx = v5586
    bx = v5587
    sp = v5589+0x4 [from 0x80483cc:leave  ]
    bp = v5654 [from 0x80483cc:leave  ]
    si = v5590
    di = v5591
    es = v5592
    cs = v5593
    ss = v5594
    ds = v5595
    fs = v5596
    gs = v5597
    cf = v5598
    ?1 = v5599
    pf = v5600
    ?3 = v5601
    af = v5602
    ?5 = v5603
    zf = v5604
    sf = v5605
    tf = v5606
    if = v5607
    df = v5608
    of = v5609
    iopl0 = v5610
    iopl1 = v5611
    nt = v5612
    ?15 = v5613
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v5584
    cx = v5585
    dx = v5586
    bx = v5587
    sp = v5589+0x8 [from 0x80483cd:ret    ]
    bp = v5654 [from 0x80483cc:leave  ]
    si = v5590
    di = v5591
    es = v5592
    cs = v5593
    ss = v5594
    ds = v5595
    fs = v5596
    gs = v5597
    cf = v5598
    ?1 = v5599
    pf = v5600
    ?3 = v5601
    af = v5602
    ?5 = v5603
    zf = v5604
    sf = v5605
    tf = v5606
    if = v5607
    df = v5608
    of = v5609
    iopl0 = v5610
    iopl1 = v5611
    nt = v5612
    ?15 = v5613
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v5692 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ce:mov    esi, esi
    ax = v5754
    cx = v5755
    dx = v5756
    bx = v5757
    sp = v5758
    bp = v5759
    si = v5760
    di = v5761
    es = v5762
    cs = v5763
    ss = v5764
    ds = v5765
    fs = v5766
    gs = v5767
    cf = v5768
    ?1 = v5769
    pf = v5770
    ?3 = v5771
    af = v5772
    ?5 = v5773
    zf = v5774
    sf = v5775
    tf = v5776
    if = v5777
    df = v5778
    of = v5779
    iopl0 = v5780
    iopl1 = v5781
    nt = v5782
    ?15 = v5783
    memory = {}
    ip = 0x80483d0 [from 0x80483ce:mov    esi, esi]
0x80483d0:push   ebp
    ax = v5754
    cx = v5755
    dx = v5756
    bx = v5757
    sp = v5758-0x4 [from 0x80483d0:push   ebp]
    bp = v5759
    si = v5760
    di = v5761
    es = v5762
    cs = v5763
    ss = v5764
    ds = v5765
    fs = v5766
    gs = v5767
    cf = v5768
    ?1 = v5769
    pf = v5770
    ?3 = v5771
    af = v5772
    ?5 = v5773
    zf = v5774
    sf = v5775
    tf = v5776
    if = v5777
    df = v5778
    of = v5779
    iopl0 = v5780
    iopl1 = v5781
    nt = v5782
    ?15 = v5783
    memory = {
        size=4; addr=v5758-0x4 [from 0x80483d0:push   ebp]; value=v5759
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v5754
    cx = v5755
    dx = v5756
    bx = v5757
    sp = v5758-0x4 [from 0x80483d0:push   ebp]
    bp = v5758-0x4 [from 0x80483d0:push   ebp]
    si = v5760
    di = v5761
    es = v5762
    cs = v5763
    ss = v5764
    ds = v5765
    fs = v5766
    gs = v5767
    cf = v5768
    ?1 = v5769
    pf = v5770
    ?3 = v5771
    af = v5772
    ?5 = v5773
    zf = v5774
    sf = v5775
    tf = v5776
    if = v5777
    df = v5778
    of = v5779
    iopl0 = v5780
    iopl1 = v5781
    nt = v5782
    ?15 = v5783
    memory = {
        size=4; addr=v5758-0x4 [from 0x80483d0:push   ebp]; value=v5759
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v5754
    cx = v5755
    dx = v5756
    bx = v5757
    sp = v5758-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v5758-0x4 [from 0x80483d0:push   ebp]
    si = v5760
    di = v5761
    es = v5762
    cs = v5763
    ss = v5764
    ds = v5765
    fs = v5766
    gs = v5767
    cf = -v5917-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v5769
    pf = -v5911-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v5771
    af = -v5915-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v5773
    zf = v5914 [from 0x80483d3:sub    esp, 0x08]
    sf = v5913 [from 0x80483d3:sub    esp, 0x08]
    tf = v5776
    if = v5777
    df = v5778
    of = v5921 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v5780
    iopl1 = v5781
    nt = v5782
    ?15 = v5783
    memory = {
        size=4; addr=v5758-0x4 [from 0x80483d0:push   ebp]; value=v5759
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v5956 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5755
    dx = v5756
    bx = v5757
    sp = v5758-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v5758-0x4 [from 0x80483d0:push   ebp]
    si = v5760
    di = v5761
    es = v5762
    cs = v5763
    ss = v5764
    ds = v5765
    fs = v5766
    gs = v5767
    cf = -v5917-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v5769
    pf = -v5911-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v5771
    af = -v5915-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v5773
    zf = v5914 [from 0x80483d3:sub    esp, 0x08]
    sf = v5913 [from 0x80483d3:sub    esp, 0x08]
    tf = v5776
    if = v5777
    df = v5778
    of = v5921 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v5780
    iopl1 = v5781
    nt = v5782
    ?15 = v5783
    memory = {
        size=4; addr=v5758-0x4 [from 0x80483d0:push   ebp]; value=v5759
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v5956 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5755
    dx = v5756
    bx = v5757
    sp = v5758-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v5758-0x4 [from 0x80483d0:push   ebp]
    si = v5760
    di = v5761
    es = v5762
    cs = v5763
    ss = v5764
    ds = v5765
    fs = v5766
    gs = v5767
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v5769
    pf = -v6005-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v5771
    af = <top>
    ?5 = v5773
    zf = v6008 [from 0x80483db:test   eax, eax]
    sf = v6007 [from 0x80483db:test   eax, eax]
    tf = v5776
    if = v5777
    df = v5778
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v5780
    iopl1 = v5781
    nt = v5782
    ?15 = v5783
    memory = {
        size=4; addr=v5758-0x4 [from 0x80483d0:push   ebp]; value=v5759
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v5956 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v5755
    dx = v5756
    bx = v5757
    sp = v5758-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v5758-0x4 [from 0x80483d0:push   ebp]
    si = v5760
    di = v5761
    es = v5762
    cs = v5763
    ss = v5764
    ds = v5765
    fs = v5766
    gs = v5767
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v5769
    pf = -v6005-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v5771
    af = <top>
    ?5 = v5773
    zf = v6008 [from 0x80483db:test   eax, eax]
    sf = v6007 [from 0x80483db:test   eax, eax]
    tf = v5776
    if = v5777
    df = v5778
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v5780
    iopl1 = v5781
    nt = v5782
    ?15 = v5783
    memory = {
        size=4; addr=v5758-0x4 [from 0x80483d0:push   ebp]; value=v5759
    }
    ip = v6045 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6168
    dx = v6169
    bx = v6170
    sp = v6171
    bp = v6172
    si = v6173
    di = v6174
    es = v6175
    cs = v6176
    ss = v6177
    ds = v6178
    fs = v6179
    gs = v6180
    cf = v6181
    ?1 = v6182
    pf = v6183
    ?3 = v6184
    af = v6185
    ?5 = v6186
    zf = v6187
    sf = v6188
    tf = v6189
    if = v6190
    df = v6191
    of = v6192
    iopl0 = v6193
    iopl1 = v6194
    nt = v6195
    ?15 = v6196
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6168
    dx = v6169
    bx = v6170
    sp = v6171
    bp = v6172
    si = v6173
    di = v6174
    es = v6175
    cs = v6176
    ss = v6177
    ds = v6178
    fs = v6179
    gs = v6180
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6182
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6184
    af = <top>
    ?5 = v6186
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6189
    if = v6190
    df = v6191
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6193
    iopl1 = v6194
    nt = v6195
    ?15 = v6196
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6168
    dx = v6169
    bx = v6170
    sp = v6171
    bp = v6172
    si = v6173
    di = v6174
    es = v6175
    cs = v6176
    ss = v6177
    ds = v6178
    fs = v6179
    gs = v6180
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6182
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6184
    af = <top>
    ?5 = v6186
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6189
    if = v6190
    df = v6191
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6193
    iopl1 = v6194
    nt = v6195
    ?15 = v6196
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6168
    dx = v6169
    bx = v6170
    sp = v6172
    bp = v6172
    si = v6173
    di = v6174
    es = v6175
    cs = v6176
    ss = v6177
    ds = v6178
    fs = v6179
    gs = v6180
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6182
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6184
    af = <top>
    ?5 = v6186
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6189
    if = v6190
    df = v6191
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6193
    iopl1 = v6194
    nt = v6195
    ?15 = v6196
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6168
    dx = v6169
    bx = v6170
    sp = v6172+0x4 [from 0x8048402:pop    ebp]
    bp = v6355 [from 0x8048402:pop    ebp]
    si = v6173
    di = v6174
    es = v6175
    cs = v6176
    ss = v6177
    ds = v6178
    fs = v6179
    gs = v6180
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6182
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6184
    af = <top>
    ?5 = v6186
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6189
    if = v6190
    df = v6191
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6193
    iopl1 = v6194
    nt = v6195
    ?15 = v6196
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6168
    dx = v6169
    bx = v6170
    sp = v6172+0x8 [from 0x8048403:ret    ]
    bp = v6355 [from 0x8048402:pop    ebp]
    si = v6173
    di = v6174
    es = v6175
    cs = v6176
    ss = v6177
    ds = v6178
    fs = v6179
    gs = v6180
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6182
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6184
    af = <top>
    ?5 = v6186
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6189
    if = v6190
    df = v6191
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6193
    iopl1 = v6194
    nt = v6195
    ?15 = v6196
    memory = {}
    ip = v6393 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = v6455
    cx = v6456
    dx = v6457
    bx = v6458
    sp = v6459
    bp = v6460
    si = v6461
    di = v6462
    es = v6463
    cs = v6464
    ss = v6465
    ds = v6466
    fs = v6467
    gs = v6468
    cf = v6469
    ?1 = v6470
    pf = v6471
    ?3 = v6472
    af = v6473
    ?5 = v6474
    zf = v6475
    sf = v6476
    tf = v6477
    if = v6478
    df = v6479
    of = v6480
    iopl0 = v6481
    iopl1 = v6482
    nt = v6483
    ?15 = v6484
    memory = {
        size=4; addr=v6459; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
0x80483ef:call   0x00000000
    ax = v6455
    cx = v6456
    dx = v6457
    bx = v6458
    sp = v6459-0x4 [from 0x80483ef:call   0x00000000]
    bp = v6460
    si = v6461
    di = v6462
    es = v6463
    cs = v6464
    ss = v6465
    ds = v6466
    fs = v6467
    gs = v6468
    cf = v6469
    ?1 = v6470
    pf = v6471
    ?3 = v6472
    af = v6473
    ?5 = v6474
    zf = v6475
    sf = v6476
    tf = v6477
    if = v6478
    df = v6479
    of = v6480
    iopl0 = v6481
    iopl1 = v6482
    nt = v6483
    ?15 = v6484
    memory = {
        size=4; addr=v6459; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=v6459-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v6617
    cx = v6618
    dx = v6619
    bx = v6620
    sp = v6621
    bp = v6622
    si = v6623 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v6624
    es = v6625
    cs = v6626
    ss = v6627
    ds = v6628
    fs = v6629
    gs = v6630
    cf = v6631
    ?1 = v6632
    pf = v6633
    ?3 = v6634
    af = v6635
    ?5 = v6636
    zf = v6637
    sf = v6638
    tf = v6639
    if = v6640
    df = v6641
    of = v6642
    iopl0 = v6643
    iopl1 = v6644
    nt = v6645
    ?15 = v6646
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v6617
    cx = v6618
    dx = v6619
    bx = v6620
    sp = v6621
    bp = v6622
    si = v6623 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v6624 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v6625
    cs = v6626
    ss = v6627
    ds = v6628
    fs = v6629
    gs = v6630
    cf = v6631
    ?1 = v6632
    pf = v6633
    ?3 = v6634
    af = v6635
    ?5 = v6636
    zf = v6637
    sf = v6638
    tf = v6639
    if = v6640
    df = v6641
    of = v6642
    iopl0 = v6643
    iopl1 = v6644
    nt = v6645
    ?15 = v6646
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048404:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x8048405 [from 0x8048404:nop    ]
0x8048405:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x8048406 [from 0x8048405:nop    ]
0x8048406:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x8048407 [from 0x8048406:nop    ]
0x8048407:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x8048408 [from 0x8048407:nop    ]
0x8048408:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x8048409 [from 0x8048408:nop    ]
0x8048409:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x804840a [from 0x8048409:nop    ]
0x804840a:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x804840b [from 0x804840a:nop    ]
0x804840b:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x804840c [from 0x804840b:nop    ]
0x804840c:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x804840d [from 0x804840c:nop    ]
0x804840d:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x804840e [from 0x804840d:nop    ]
0x804840e:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x804840f [from 0x804840e:nop    ]
0x804840f:nop    
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {}
    ip = 0x8048410 [from 0x804840f:nop    ]
0x8048410:push   ebp
    ax = v6775
    cx = v6776
    dx = v6777
    bx = v6778
    sp = v6779-0x4 [from 0x8048410:push   ebp]
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {
        size=4; addr=v6779-0x4 [from 0x8048410:push   ebp]; value=v6780
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v6775
    cx = v6776
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6778
    sp = v6779-0x4 [from 0x8048410:push   ebp]
    bp = v6780
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {
        size=4; addr=v6779-0x4 [from 0x8048410:push   ebp]; value=v6780
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v6775
    cx = v6776
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6778
    sp = v6779-0x4 [from 0x8048410:push   ebp]
    bp = v6779-0x4 [from 0x8048410:push   ebp]
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = v6789
    ?1 = v6790
    pf = v6791
    ?3 = v6792
    af = v6793
    ?5 = v6794
    zf = v6795
    sf = v6796
    tf = v6797
    if = v6798
    df = v6799
    of = v6800
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {
        size=4; addr=v6779-0x4 [from 0x8048410:push   ebp]; value=v6780
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v6775
    cx = v6776
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6778
    sp = v6779-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v6779-0x4 [from 0x8048410:push   ebp]
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = -v7323-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v6790
    pf = -v7317-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v6792
    af = -v7321-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v6794
    zf = v7320 [from 0x8048418:sub    esp, 0x08]
    sf = v7319 [from 0x8048418:sub    esp, 0x08]
    tf = v6797
    if = v6798
    df = v6799
    of = v7327 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {
        size=4; addr=v6779-0x4 [from 0x8048410:push   ebp]; value=v6780
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v6775
    cx = v6776
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6778
    sp = v7361 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6779-0x4 [from 0x8048410:push   ebp]
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6790
    pf = -v7377-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6792
    af = <top>
    ?5 = v6794
    zf = v7380 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v7379 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6797
    if = v6798
    df = v6799
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {
        size=4; addr=v6779-0x4 [from 0x8048410:push   ebp]; value=v6780
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v6775
    cx = v6776
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6778
    sp = v7361 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6779-0x4 [from 0x8048410:push   ebp]
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6790
    pf = -v7377-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6792
    af = <top>
    ?5 = v6794
    zf = v7380 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v7379 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6797
    if = v6798
    df = v6799
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {
        size=4; addr=v7361+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v6775
    cx = v6776
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6778
    sp = v7361 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v6779-0x4 [from 0x8048410:push   ebp]
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6790
    pf = -v7377-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6792
    af = <top>
    ?5 = v6794
    zf = v7380 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v7379 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6797
    if = v6798
    df = v6799
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {
        size=4; addr=v7361 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v7361+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v6775
    cx = v6776
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v6778
    sp = v7361-0x4 [from 0x8048429:call   0x080482f0]
    bp = v6779-0x4 [from 0x8048410:push   ebp]
    si = v6781
    di = v6782
    es = v6783
    cs = v6784
    ss = v6785
    ds = v6786
    fs = v6787
    gs = v6788
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v6790
    pf = -v7377-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v6792
    af = <top>
    ?5 = v6794
    zf = v7380 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v7379 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v6797
    if = v6798
    df = v6799
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v6801
    iopl1 = v6802
    nt = v6803
    ?15 = v6804
    memory = {
        size=4; addr=v7361 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v7361+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v7361-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v7583
    cx = v7584
    dx = v7585
    bx = v7586
    sp = v7588
    bp = v7588
    si = v7589
    di = v7590
    es = v7591
    cs = v7592
    ss = v7593
    ds = v7594
    fs = v7595
    gs = v7596
    cf = v7597
    ?1 = v7598
    pf = v7599
    ?3 = v7600
    af = v7601
    ?5 = v7602
    zf = v7603
    sf = v7604
    tf = v7605
    if = v7606
    df = v7607
    of = v7608
    iopl0 = v7609
    iopl1 = v7610
    nt = v7611
    ?15 = v7612
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v7584
    dx = v7585
    bx = v7586
    sp = v7588
    bp = v7588
    si = v7589
    di = v7590
    es = v7591
    cs = v7592
    ss = v7593
    ds = v7594
    fs = v7595
    gs = v7596
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v7598
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v7600
    af = <top>
    ?5 = v7602
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v7605
    if = v7606
    df = v7607
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v7609
    iopl1 = v7610
    nt = v7611
    ?15 = v7612
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v7584
    dx = v7585
    bx = v7586
    sp = v7588+0x4 [from 0x8048432:pop    ebp]
    bp = v7704 [from 0x8048432:pop    ebp]
    si = v7589
    di = v7590
    es = v7591
    cs = v7592
    ss = v7593
    ds = v7594
    fs = v7595
    gs = v7596
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v7598
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v7600
    af = <top>
    ?5 = v7602
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v7605
    if = v7606
    df = v7607
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v7609
    iopl1 = v7610
    nt = v7611
    ?15 = v7612
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v7584
    dx = v7585
    bx = v7586
    sp = v7588+0x8 [from 0x8048433:ret    ]
    bp = v7704 [from 0x8048432:pop    ebp]
    si = v7589
    di = v7590
    es = v7591
    cs = v7592
    ss = v7593
    ds = v7594
    fs = v7595
    gs = v7596
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v7598
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v7600
    af = <top>
    ?5 = v7602
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v7605
    if = v7606
    df = v7607
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v7609
    iopl1 = v7610
    nt = v7611
    ?15 = v7612
    memory = {}
    ip = v7742 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048434:lea    esi, [esi + 0x00000000]
    ax = v7804
    cx = v7805
    dx = v7806
    bx = v7807
    sp = v7808
    bp = v7809
    si = v7810 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v7811
    es = v7812
    cs = v7813
    ss = v7814
    ds = v7815
    fs = v7816
    gs = v7817
    cf = v7818
    ?1 = v7819
    pf = v7820
    ?3 = v7821
    af = v7822
    ?5 = v7823
    zf = v7824
    sf = v7825
    tf = v7826
    if = v7827
    df = v7828
    of = v7829
    iopl0 = v7830
    iopl1 = v7831
    nt = v7832
    ?15 = v7833
    memory = {}
    ip = 0x804843a [from 0x8048434:lea    esi, [esi + 0x00000000]]
0x804843a:lea    edi, [edi + 0x00000000]
    ax = v7804
    cx = v7805
    dx = v7806
    bx = v7807
    sp = v7808
    bp = v7809
    si = v7810 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v7811 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v7812
    cs = v7813
    ss = v7814
    ds = v7815
    fs = v7816
    gs = v7817
    cf = v7818
    ?1 = v7819
    pf = v7820
    ?3 = v7821
    af = v7822
    ?5 = v7823
    zf = v7824
    sf = v7825
    tf = v7826
    if = v7827
    df = v7828
    of = v7829
    iopl0 = v7830
    iopl1 = v7831
    nt = v7832
    ?15 = v7833
    memory = {}
    ip = 0x8048440 [from 0x804843a:lea    edi, [edi + 0x00000000]]
0x8048440:push   ebp
    ax = v7804
    cx = v7805
    dx = v7806
    bx = v7807
    sp = v7808-0x4 [from 0x8048440:push   ebp]
    bp = v7809
    si = v7810 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v7811 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v7812
    cs = v7813
    ss = v7814
    ds = v7815
    fs = v7816
    gs = v7817
    cf = v7818
    ?1 = v7819
    pf = v7820
    ?3 = v7821
    af = v7822
    ?5 = v7823
    zf = v7824
    sf = v7825
    tf = v7826
    if = v7827
    df = v7828
    of = v7829
    iopl0 = v7830
    iopl1 = v7831
    nt = v7832
    ?15 = v7833
    memory = {
        size=4; addr=v7808-0x4 [from 0x8048440:push   ebp]; value=v7809
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v7804
    cx = v7805
    dx = v7806
    bx = v7807
    sp = v7808-0x4 [from 0x8048440:push   ebp]
    bp = v7808-0x4 [from 0x8048440:push   ebp]
    si = v7810 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v7811 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v7812
    cs = v7813
    ss = v7814
    ds = v7815
    fs = v7816
    gs = v7817
    cf = v7818
    ?1 = v7819
    pf = v7820
    ?3 = v7821
    af = v7822
    ?5 = v7823
    zf = v7824
    sf = v7825
    tf = v7826
    if = v7827
    df = v7828
    of = v7829
    iopl0 = v7830
    iopl1 = v7831
    nt = v7832
    ?15 = v7833
    memory = {
        size=4; addr=v7808-0x4 [from 0x8048440:push   ebp]; value=v7809
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v7804
    cx = v7805
    dx = v7806
    bx = v7807
    sp = v7808-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v7808-0x4 [from 0x8048440:push   ebp]
    si = v7810 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v7811 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v7812
    cs = v7813
    ss = v7814
    ds = v7815
    fs = v7816
    gs = v7817
    cf = -v8003-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7819
    pf = -v7997-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7821
    af = -v8001-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7823
    zf = v8000 [from 0x8048443:sub    esp, 0x08]
    sf = v7999 [from 0x8048443:sub    esp, 0x08]
    tf = v7826
    if = v7827
    df = v7828
    of = v8007 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7830
    iopl1 = v7831
    nt = v7832
    ?15 = v7833
    memory = {
        size=4; addr=v7808-0x4 [from 0x8048440:push   ebp]; value=v7809
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v7804
    cx = v7805
    dx = v7806
    bx = v7807
    sp = v7808-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v7808-0x4 [from 0x8048440:push   ebp]
    si = v7810 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v7811 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v7812
    cs = v7813
    ss = v7814
    ds = v7815
    fs = v7816
    gs = v7817
    cf = -v8003-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7819
    pf = -v7997-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7821
    af = -v8001-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7823
    zf = v8000 [from 0x8048443:sub    esp, 0x08]
    sf = v7999 [from 0x8048443:sub    esp, 0x08]
    tf = v7826
    if = v7827
    df = v7828
    of = v8007 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7830
    iopl1 = v7831
    nt = v7832
    ?15 = v7833
    memory = {
        size=4; addr=v7808-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7808-0x4 [from 0x8048440:push   ebp]; value=v7809
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v7804
    cx = v7805
    dx = v7806
    bx = v7807
    sp = v7808-0x10 [from 0x804844d:call   0x08048300]
    bp = v7808-0x4 [from 0x8048440:push   ebp]
    si = v7810 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v7811 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v7812
    cs = v7813
    ss = v7814
    ds = v7815
    fs = v7816
    gs = v7817
    cf = -v8003-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v7819
    pf = -v7997-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v7821
    af = -v8001-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v7823
    zf = v8000 [from 0x8048443:sub    esp, 0x08]
    sf = v7999 [from 0x8048443:sub    esp, 0x08]
    tf = v7826
    if = v7827
    df = v7828
    of = v8007 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v7830
    iopl1 = v7831
    nt = v7832
    ?15 = v7833
    memory = {
        size=4; addr=v7808-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v7808-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v7808-0x4 [from 0x8048440:push   ebp]; value=v7809
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v8171
    cx = v8172
    dx = v8173
    bx = v8174
    sp = v8176
    bp = v8176
    si = v8177
    di = v8178
    es = v8179
    cs = v8180
    ss = v8181
    ds = v8182
    fs = v8183
    gs = v8184
    cf = v8185
    ?1 = v8186
    pf = v8187
    ?3 = v8188
    af = v8189
    ?5 = v8190
    zf = v8191
    sf = v8192
    tf = v8193
    if = v8194
    df = v8195
    of = v8196
    iopl0 = v8197
    iopl1 = v8198
    nt = v8199
    ?15 = v8200
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v8171
    cx = v8172
    dx = v8173
    bx = v8174
    sp = v8176+0x4 [from 0x8048454:pop    ebp]
    bp = v8237 [from 0x8048454:pop    ebp]
    si = v8177
    di = v8178
    es = v8179
    cs = v8180
    ss = v8181
    ds = v8182
    fs = v8183
    gs = v8184
    cf = v8185
    ?1 = v8186
    pf = v8187
    ?3 = v8188
    af = v8189
    ?5 = v8190
    zf = v8191
    sf = v8192
    tf = v8193
    if = v8194
    df = v8195
    of = v8196
    iopl0 = v8197
    iopl1 = v8198
    nt = v8199
    ?15 = v8200
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v8171
    cx = v8172
    dx = v8173
    bx = v8174
    sp = v8176+0x8 [from 0x8048455:ret    ]
    bp = v8237 [from 0x8048454:pop    ebp]
    si = v8177
    di = v8178
    es = v8179
    cs = v8180
    ss = v8181
    ds = v8182
    fs = v8183
    gs = v8184
    cf = v8185
    ?1 = v8186
    pf = v8187
    ?3 = v8188
    af = v8189
    ?5 = v8190
    zf = v8191
    sf = v8192
    tf = v8193
    if = v8194
    df = v8195
    of = v8196
    iopl0 = v8197
    iopl1 = v8198
    nt = v8199
    ?15 = v8200
    memory = {}
    ip = v8275 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048456:lea    esi, [esi + 0x00]
    ax = v8337
    cx = v8338
    dx = v8339
    bx = v8340
    sp = v8341
    bp = v8342
    si = v8343 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8344
    es = v8345
    cs = v8346
    ss = v8347
    ds = v8348
    fs = v8349
    gs = v8350
    cf = v8351
    ?1 = v8352
    pf = v8353
    ?3 = v8354
    af = v8355
    ?5 = v8356
    zf = v8357
    sf = v8358
    tf = v8359
    if = v8360
    df = v8361
    of = v8362
    iopl0 = v8363
    iopl1 = v8364
    nt = v8365
    ?15 = v8366
    memory = {}
    ip = 0x8048459 [from 0x8048456:lea    esi, [esi + 0x00]]
0x8048459:lea    edi, [edi + 0x00000000]
    ax = v8337
    cx = v8338
    dx = v8339
    bx = v8340
    sp = v8341
    bp = v8342
    si = v8343 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8344 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8345
    cs = v8346
    ss = v8347
    ds = v8348
    fs = v8349
    gs = v8350
    cf = v8351
    ?1 = v8352
    pf = v8353
    ?3 = v8354
    af = v8355
    ?5 = v8356
    zf = v8357
    sf = v8358
    tf = v8359
    if = v8360
    df = v8361
    of = v8362
    iopl0 = v8363
    iopl1 = v8364
    nt = v8365
    ?15 = v8366
    memory = {}
    ip = 0x8048460 [from 0x8048459:lea    edi, [edi + 0x00000000]]
0x8048460:push   ebp
    ax = v8337
    cx = v8338
    dx = v8339
    bx = v8340
    sp = v8341-0x4 [from 0x8048460:push   ebp]
    bp = v8342
    si = v8343 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8344 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8345
    cs = v8346
    ss = v8347
    ds = v8348
    fs = v8349
    gs = v8350
    cf = v8351
    ?1 = v8352
    pf = v8353
    ?3 = v8354
    af = v8355
    ?5 = v8356
    zf = v8357
    sf = v8358
    tf = v8359
    if = v8360
    df = v8361
    of = v8362
    iopl0 = v8363
    iopl1 = v8364
    nt = v8365
    ?15 = v8366
    memory = {
        size=4; addr=v8341-0x4 [from 0x8048460:push   ebp]; value=v8342
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v8337
    cx = v8338
    dx = v8339
    bx = v8340
    sp = v8341-0x4 [from 0x8048460:push   ebp]
    bp = v8341-0x4 [from 0x8048460:push   ebp]
    si = v8343 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8344 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8345
    cs = v8346
    ss = v8347
    ds = v8348
    fs = v8349
    gs = v8350
    cf = v8351
    ?1 = v8352
    pf = v8353
    ?3 = v8354
    af = v8355
    ?5 = v8356
    zf = v8357
    sf = v8358
    tf = v8359
    if = v8360
    df = v8361
    of = v8362
    iopl0 = v8363
    iopl1 = v8364
    nt = v8365
    ?15 = v8366
    memory = {
        size=4; addr=v8341-0x4 [from 0x8048460:push   ebp]; value=v8342
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v8337
    cx = v8338
    dx = v8339
    bx = v8340
    sp = v8341-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v8341-0x4 [from 0x8048460:push   ebp]
    si = v8343 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8344 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8345
    cs = v8346
    ss = v8347
    ds = v8348
    fs = v8349
    gs = v8350
    cf = -v8536-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v8352
    pf = -v8530-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v8354
    af = -v8534-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v8356
    zf = v8533 [from 0x8048463:sub    esp, 0x08]
    sf = v8532 [from 0x8048463:sub    esp, 0x08]
    tf = v8359
    if = v8360
    df = v8361
    of = v8540 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v8363
    iopl1 = v8364
    nt = v8365
    ?15 = v8366
    memory = {
        size=4; addr=v8341-0x4 [from 0x8048460:push   ebp]; value=v8342
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v8337
    cx = v8338
    dx = v8339
    bx = v8340
    sp = v8341-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v8341-0x4 [from 0x8048460:push   ebp]
    si = v8343 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8344 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8345
    cs = v8346
    ss = v8347
    ds = v8348
    fs = v8349
    gs = v8350
    cf = -v8536-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v8352
    pf = -v8530-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v8354
    af = -v8534-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v8356
    zf = v8533 [from 0x8048463:sub    esp, 0x08]
    sf = v8532 [from 0x8048463:sub    esp, 0x08]
    tf = v8359
    if = v8360
    df = v8361
    of = v8540 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v8363
    iopl1 = v8364
    nt = v8365
    ?15 = v8366
    memory = {
        size=4; addr=v8341-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8341-0x4 [from 0x8048460:push   ebp]; value=v8342
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v8337
    cx = v8338
    dx = v8339
    bx = v8340
    sp = v8341-0x10 [from 0x804846d:call   0x08048300]
    bp = v8341-0x4 [from 0x8048460:push   ebp]
    si = v8343 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v8344 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v8345
    cs = v8346
    ss = v8347
    ds = v8348
    fs = v8349
    gs = v8350
    cf = -v8536-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v8352
    pf = -v8530-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v8354
    af = -v8534-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v8356
    zf = v8533 [from 0x8048463:sub    esp, 0x08]
    sf = v8532 [from 0x8048463:sub    esp, 0x08]
    tf = v8359
    if = v8360
    df = v8361
    of = v8540 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v8363
    iopl1 = v8364
    nt = v8365
    ?15 = v8366
    memory = {
        size=4; addr=v8341-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v8341-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8341-0x4 [from 0x8048460:push   ebp]; value=v8342
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v8704
    cx = v8705
    dx = v8706
    bx = v8707
    sp = v8708
    bp = v8709
    si = v8710
    di = v8711
    es = v8712
    cs = v8713
    ss = v8714
    ds = v8715
    fs = v8716
    gs = v8717
    cf = v8718
    ?1 = v8719
    pf = v8720
    ?3 = v8721
    af = v8722
    ?5 = v8723
    zf = v8724
    sf = v8725
    tf = v8726
    if = v8727
    df = v8728
    of = v8729
    iopl0 = v8730
    iopl1 = v8731
    nt = v8732
    ?15 = v8733
    memory = {
        size=4; addr=v8708; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v8704
    cx = v8705
    dx = v8706
    bx = v8707
    sp = v8708-0x4 [from 0x8048479:call   0x08048320]
    bp = v8709
    si = v8710
    di = v8711
    es = v8712
    cs = v8713
    ss = v8714
    ds = v8715
    fs = v8716
    gs = v8717
    cf = v8718
    ?1 = v8719
    pf = v8720
    ?3 = v8721
    af = v8722
    ?5 = v8723
    zf = v8724
    sf = v8725
    tf = v8726
    if = v8727
    df = v8728
    of = v8729
    iopl0 = v8730
    iopl1 = v8731
    nt = v8732
    ?15 = v8733
    memory = {
        size=4; addr=v8708; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v8708-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804847e:mov    esi, esi
    ax = v8866
    cx = v8867
    dx = v8868
    bx = v8869
    sp = v8870
    bp = v8871
    si = v8872
    di = v8873
    es = v8874
    cs = v8875
    ss = v8876
    ds = v8877
    fs = v8878
    gs = v8879
    cf = v8880
    ?1 = v8881
    pf = v8882
    ?3 = v8883
    af = v8884
    ?5 = v8885
    zf = v8886
    sf = v8887
    tf = v8888
    if = v8889
    df = v8890
    of = v8891
    iopl0 = v8892
    iopl1 = v8893
    nt = v8894
    ?15 = v8895
    memory = {}
    ip = 0x8048480 [from 0x804847e:mov    esi, esi]
0x8048480:push   ebp
    ax = v8866
    cx = v8867
    dx = v8868
    bx = v8869
    sp = v8870-0x4 [from 0x8048480:push   ebp]
    bp = v8871
    si = v8872
    di = v8873
    es = v8874
    cs = v8875
    ss = v8876
    ds = v8877
    fs = v8878
    gs = v8879
    cf = v8880
    ?1 = v8881
    pf = v8882
    ?3 = v8883
    af = v8884
    ?5 = v8885
    zf = v8886
    sf = v8887
    tf = v8888
    if = v8889
    df = v8890
    of = v8891
    iopl0 = v8892
    iopl1 = v8893
    nt = v8894
    ?15 = v8895
    memory = {
        size=4; addr=v8870-0x4 [from 0x8048480:push   ebp]; value=v8871
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v8866
    cx = v8867
    dx = v8868
    bx = v8869
    sp = v8870-0x4 [from 0x8048480:push   ebp]
    bp = v8870-0x4 [from 0x8048480:push   ebp]
    si = v8872
    di = v8873
    es = v8874
    cs = v8875
    ss = v8876
    ds = v8877
    fs = v8878
    gs = v8879
    cf = v8880
    ?1 = v8881
    pf = v8882
    ?3 = v8883
    af = v8884
    ?5 = v8885
    zf = v8886
    sf = v8887
    tf = v8888
    if = v8889
    df = v8890
    of = v8891
    iopl0 = v8892
    iopl1 = v8893
    nt = v8894
    ?15 = v8895
    memory = {
        size=4; addr=v8870-0x4 [from 0x8048480:push   ebp]; value=v8871
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v8866
    cx = v8867
    dx = v8868
    bx = v8869
    sp = v8870-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v8870-0x4 [from 0x8048480:push   ebp]
    si = v8872
    di = v8873
    es = v8874
    cs = v8875
    ss = v8876
    ds = v8877
    fs = v8878
    gs = v8879
    cf = -v9029-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8881
    pf = -v9023-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v8883
    af = -v9027-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v8885
    zf = v9026 [from 0x8048483:sub    esp, 0x08]
    sf = v9025 [from 0x8048483:sub    esp, 0x08]
    tf = v8888
    if = v8889
    df = v8890
    of = v9033 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v8892
    iopl1 = v8893
    nt = v8894
    ?15 = v8895
    memory = {
        size=4; addr=v8870-0x4 [from 0x8048480:push   ebp]; value=v8871
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v8866
    cx = v8867
    dx = v8868
    bx = v8869
    sp = v8870-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v8870-0x4 [from 0x8048480:push   ebp]
    si = v8872
    di = v8873
    es = v8874
    cs = v8875
    ss = v8876
    ds = v8877
    fs = v8878
    gs = v8879
    cf = -v9029-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8881
    pf = -v9093-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8883
    af = v9097 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8885
    zf = v9096 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v9095 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8888
    if = v8889
    df = v8890
    of = v9100 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8892
    iopl1 = v8893
    nt = v8894
    ?15 = v8895
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v9068+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v8866
    cx = v8867
    dx = v8868
    bx = v8869
    sp = v8870-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v8870-0x4 [from 0x8048480:push   ebp]
    si = v8872
    di = v8873
    es = v8874
    cs = v8875
    ss = v8876
    ds = v8877
    fs = v8878
    gs = v8879
    cf = -v9029-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8881
    pf = -v9093-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8883
    af = v9097 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8885
    zf = v9096 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v9095 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8888
    if = v8889
    df = v8890
    of = v9100 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8892
    iopl1 = v8893
    nt = v8894
    ?15 = v8895
    memory = {
        size=4; addr=v8870-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v8866
    cx = v8867
    dx = v8868
    bx = v8869
    sp = v8870-0x10 [from 0x8048493:call   0x08048300]
    bp = v8870-0x4 [from 0x8048480:push   ebp]
    si = v8872
    di = v8873
    es = v8874
    cs = v8875
    ss = v8876
    ds = v8877
    fs = v8878
    gs = v8879
    cf = -v9029-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v8881
    pf = -v9093-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v8883
    af = v9097 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v8885
    zf = v9096 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v9095 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v8888
    if = v8889
    df = v8890
    of = v9100 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v8892
    iopl1 = v8893
    nt = v8894
    ?15 = v8895
    memory = {
        size=4; addr=v8870-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v8870-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v9267
    cx = v9268
    dx = v9269
    bx = v9270
    sp = v9271
    bp = v9272
    si = v9273
    di = v9274
    es = v9275
    cs = v9276
    ss = v9277
    ds = v9278
    fs = v9279
    gs = v9280
    cf = v9281
    ?1 = v9282
    pf = v9283
    ?3 = v9284
    af = v9285
    ?5 = v9286
    zf = v9287
    sf = v9288
    tf = v9289
    if = v9290
    df = v9291
    of = v9292
    iopl0 = v9293
    iopl1 = v9294
    nt = v9295
    ?15 = v9296
    memory = {
        size=4; addr=v9271; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v9267
    cx = v9268
    dx = v9269
    bx = v9270
    sp = v9271-0x4 [from 0x804849f:call   0x08048320]
    bp = v9272
    si = v9273
    di = v9274
    es = v9275
    cs = v9276
    ss = v9277
    ds = v9278
    fs = v9279
    gs = v9280
    cf = v9281
    ?1 = v9282
    pf = v9283
    ?3 = v9284
    af = v9285
    ?5 = v9286
    zf = v9287
    sf = v9288
    tf = v9289
    if = v9290
    df = v9291
    of = v9292
    iopl0 = v9293
    iopl1 = v9294
    nt = v9295
    ?15 = v9296
    memory = {
        size=4; addr=v9271; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v9271-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484a4:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484a5 [from 0x80484a4:nop    ]
0x80484a5:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484a6 [from 0x80484a5:nop    ]
0x80484a6:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484a7 [from 0x80484a6:nop    ]
0x80484a7:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484a8 [from 0x80484a7:nop    ]
0x80484a8:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484a9 [from 0x80484a8:nop    ]
0x80484a9:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484aa [from 0x80484a9:nop    ]
0x80484aa:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484ab [from 0x80484aa:nop    ]
0x80484ab:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484ac [from 0x80484ab:nop    ]
0x80484ac:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484ad [from 0x80484ac:nop    ]
0x80484ad:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484ae [from 0x80484ad:nop    ]
0x80484ae:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484af [from 0x80484ae:nop    ]
0x80484af:nop    
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {}
    ip = 0x80484b0 [from 0x80484af:nop    ]
0x80484b0:push   ebp
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433-0x4 [from 0x80484b0:push   ebp]
    bp = v9434
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {
        size=4; addr=v9433-0x4 [from 0x80484b0:push   ebp]; value=v9434
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433-0x4 [from 0x80484b0:push   ebp]
    bp = v9433-0x4 [from 0x80484b0:push   ebp]
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {
        size=4; addr=v9433-0x4 [from 0x80484b0:push   ebp]; value=v9434
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433-0x8 [from 0x80484b3:push   edi]
    bp = v9433-0x4 [from 0x80484b0:push   ebp]
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {
        size=4; addr=v9433-0x8 [from 0x80484b3:push   edi]; value=v9436
        size=4; addr=v9433-0x4 [from 0x80484b0:push   ebp]; value=v9434
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433-0xc [from 0x80484b4:push   esi]
    bp = v9433-0x4 [from 0x80484b0:push   ebp]
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {
        size=4; addr=v9433-0xc [from 0x80484b4:push   esi]; value=v9435
        size=4; addr=v9433-0x8 [from 0x80484b3:push   edi]; value=v9436
        size=4; addr=v9433-0x4 [from 0x80484b0:push   ebp]; value=v9434
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433-0x10 [from 0x80484b5:push   ebx]
    bp = v9433-0x4 [from 0x80484b0:push   ebp]
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = v9443
    ?1 = v9444
    pf = v9445
    ?3 = v9446
    af = v9447
    ?5 = v9448
    zf = v9449
    sf = v9450
    tf = v9451
    if = v9452
    df = v9453
    of = v9454
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {
        size=4; addr=v9433-0x10 [from 0x80484b5:push   ebx]; value=v9432
        size=4; addr=v9433-0xc [from 0x80484b4:push   esi]; value=v9435
        size=4; addr=v9433-0x8 [from 0x80484b3:push   edi]; value=v9436
        size=4; addr=v9433-0x4 [from 0x80484b0:push   ebp]; value=v9434
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v9433-0x4 [from 0x80484b0:push   ebp]
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = -v10052-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v9444
    pf = -v10046-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v9446
    af = -v10050-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v9448
    zf = v10049 [from 0x80484b6:sub    esp, 0x0c]
    sf = v10048 [from 0x80484b6:sub    esp, 0x0c]
    tf = v9451
    if = v9452
    df = v9453
    of = v10056 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {
        size=4; addr=v9433-0x10 [from 0x80484b5:push   ebx]; value=v9432
        size=4; addr=v9433-0xc [from 0x80484b4:push   esi]; value=v9435
        size=4; addr=v9433-0x8 [from 0x80484b3:push   edi]; value=v9436
        size=4; addr=v9433-0x4 [from 0x80484b0:push   ebp]; value=v9434
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v9429
    cx = v9430
    dx = v9431
    bx = v9432
    sp = v9433-0x20 [from 0x80484b9:call   0x080484be]
    bp = v9433-0x4 [from 0x80484b0:push   ebp]
    si = v9435
    di = v9436
    es = v9437
    cs = v9438
    ss = v9439
    ds = v9440
    fs = v9441
    gs = v9442
    cf = -v10052-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v9444
    pf = -v10046-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v9446
    af = -v10050-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v9448
    zf = v10049 [from 0x80484b6:sub    esp, 0x0c]
    sf = v10048 [from 0x80484b6:sub    esp, 0x0c]
    tf = v9451
    if = v9452
    df = v9453
    of = v10056 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v9455
    iopl1 = v9456
    nt = v9457
    ?15 = v9458
    memory = {
        size=4; addr=v9433-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v9433-0x10 [from 0x80484b5:push   ebx]; value=v9432
        size=4; addr=v9433-0xc [from 0x80484b4:push   esi]; value=v9435
        size=4; addr=v9433-0x8 [from 0x80484b3:push   edi]; value=v9436
        size=4; addr=v9433-0x4 [from 0x80484b0:push   ebp]; value=v9434
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v10185
    cx = v10186
    dx = v10187
    bx = v10219 [from 0x80484be:pop    ebx]
    sp = v10189+0x4 [from 0x80484be:pop    ebx]
    bp = v10190
    si = v10191
    di = v10192
    es = v10193
    cs = v10194
    ss = v10195
    ds = v10196
    fs = v10197
    gs = v10198
    cf = v10199
    ?1 = v10200
    pf = v10201
    ?3 = v10202
    af = v10203
    ?5 = v10204
    zf = v10205
    sf = v10206
    tf = v10207
    if = v10208
    df = v10209
    of = v10210
    iopl0 = v10211
    iopl1 = v10212
    nt = v10213
    ?15 = v10214
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v10185
    cx = v10186
    dx = v10187
    bx = v10219+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v10189+0x4 [from 0x80484be:pop    ebx]
    bp = v10190
    si = v10191
    di = v10192
    es = v10193
    cs = v10194
    ss = v10195
    ds = v10196
    fs = v10197
    gs = v10198
    cf = v10281 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v10200
    pf = -v10276-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v10202
    af = v10280 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v10204
    zf = v10279 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v10278 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v10207
    if = v10208
    df = v10209
    of = v10284 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v10211
    iopl1 = v10212
    nt = v10213
    ?15 = v10214
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v10185
    cx = v10186
    dx = v10187
    bx = v10219+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v10189 [from 0x80484c5:call   0x080482c8]
    bp = v10190
    si = v10191
    di = v10192
    es = v10193
    cs = v10194
    ss = v10195
    ds = v10196
    fs = v10197
    gs = v10198
    cf = v10281 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v10200
    pf = -v10276-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v10202
    af = v10280 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v10204
    zf = v10279 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v10278 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v10207
    if = v10208
    df = v10209
    of = v10284 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v10211
    iopl1 = v10212
    nt = v10213
    ?15 = v10214
    memory = {
        size=4; addr=v10189 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10416-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v10414
    dx = v10415
    bx = v10416
    sp = v10417
    bp = v10418
    si = v10419
    di = v10420
    es = v10421
    cs = v10422
    ss = v10423
    ds = v10424
    fs = v10425
    gs = v10426
    cf = v10427
    ?1 = v10428
    pf = v10429
    ?3 = v10430
    af = v10431
    ?5 = v10432
    zf = v10433
    sf = v10434
    tf = v10435
    if = v10436
    df = v10437
    of = v10438
    iopl0 = v10439
    iopl1 = v10440
    nt = v10441
    ?15 = v10442
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v10416-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v10414
    dx = v10416-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10416
    sp = v10417
    bp = v10418
    si = v10419
    di = v10420
    es = v10421
    cs = v10422
    ss = v10423
    ds = v10424
    fs = v10425
    gs = v10426
    cf = v10427
    ?1 = v10428
    pf = v10429
    ?3 = v10430
    af = v10431
    ?5 = v10432
    zf = v10433
    sf = v10434
    tf = v10435
    if = v10436
    df = v10437
    of = v10438
    iopl0 = v10439
    iopl1 = v10440
    nt = v10441
    ?15 = v10442
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v20832 [from 0x80484d6:sub    eax, edx]
    cx = v10414
    dx = v10416-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10416
    sp = v10417
    bp = v10418
    si = v10419
    di = v10420
    es = v10421
    cs = v10422
    ss = v10423
    ds = v10424
    fs = v10425
    gs = v10426
    cf = -v10543-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v10428
    pf = -v10537-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v10430
    af = -v10541-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v10432
    zf = v10540 [from 0x80484d6:sub    eax, edx]
    sf = v10539 [from 0x80484d6:sub    eax, edx]
    tf = v10435
    if = v10436
    df = v10437
    of = v10547 [from 0x80484d6:sub    eax, edx]
    iopl0 = v10439
    iopl1 = v10440
    nt = v10441
    ?15 = v10442
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v10586 [from 0x80484d8:sar    eax, 0x02]
    cx = v10414
    dx = v10416-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10416
    sp = v10417
    bp = v10418
    si = v10419
    di = v10420
    es = v10421
    cs = v10422
    ss = v10423
    ds = v10424
    fs = v10425
    gs = v10426
    cf = v10589 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v10428
    pf = -v10609-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v10430
    af = <top>
    ?5 = v10432
    zf = v10614 [from 0x80484d8:sar    eax, 0x02]
    sf = v10612 [from 0x80484d8:sar    eax, 0x02]
    tf = v10435
    if = v10436
    df = v10437
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v10439
    iopl1 = v10440
    nt = v10441
    ?15 = v10442
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v10586 [from 0x80484d8:sar    eax, 0x02]
    cx = v10414
    dx = v10416-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10416
    sp = v10417
    bp = v10418
    si = v10419
    di = v10420
    es = v10421
    cs = v10422
    ss = v10423
    ds = v10424
    fs = v10425
    gs = v10426
    cf = v10589 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v10428
    pf = -v10609-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v10430
    af = <top>
    ?5 = v10432
    zf = v10614 [from 0x80484d8:sar    eax, 0x02]
    sf = v10612 [from 0x80484d8:sar    eax, 0x02]
    tf = v10435
    if = v10436
    df = v10437
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v10439
    iopl1 = v10440
    nt = v10441
    ?15 = v10442
    memory = {
        size=4; addr=v10418-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10586 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v10586 [from 0x80484d8:sar    eax, 0x02]
    cx = v10414
    dx = v10416-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v10416
    sp = v10417
    bp = v10418
    si = v10419
    di = v10420
    es = v10421
    cs = v10422
    ss = v10423
    ds = v10424
    fs = v10425
    gs = v10426
    cf = v10589 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v10428
    pf = -v10609-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v10430
    af = <top>
    ?5 = v10432
    zf = v10614 [from 0x80484d8:sar    eax, 0x02]
    sf = v10612 [from 0x80484d8:sar    eax, 0x02]
    tf = v10435
    if = v10436
    df = v10437
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v10439
    iopl1 = v10440
    nt = v10441
    ?15 = v10442
    memory = {
        size=4; addr=v10418-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v10586 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v10686 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v10808
    cx = v10809
    dx = v10810
    bx = v10811
    sp = v10812+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v10813
    si = v10814
    di = v10815
    es = v10816
    cs = v10817
    ss = v10818
    ds = v10819
    fs = v10820
    gs = v10821
    cf = v10868 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10823
    pf = -v10863-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10825
    af = v10867 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10827
    zf = v10866 [from 0x80484e0:add    esp, 0x0c]
    sf = v10865 [from 0x80484e0:add    esp, 0x0c]
    tf = v10830
    if = v10831
    df = v10832
    of = v10871 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10834
    iopl1 = v10835
    nt = v10836
    ?15 = v10837
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v10808
    cx = v10809
    dx = v10810
    bx = v10907 [from 0x80484e3:pop    ebx]
    sp = v10812+0x10 [from 0x80484e3:pop    ebx]
    bp = v10813
    si = v10814
    di = v10815
    es = v10816
    cs = v10817
    ss = v10818
    ds = v10819
    fs = v10820
    gs = v10821
    cf = v10868 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10823
    pf = -v10863-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10825
    af = v10867 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10827
    zf = v10866 [from 0x80484e0:add    esp, 0x0c]
    sf = v10865 [from 0x80484e0:add    esp, 0x0c]
    tf = v10830
    if = v10831
    df = v10832
    of = v10871 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10834
    iopl1 = v10835
    nt = v10836
    ?15 = v10837
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v10808
    cx = v10809
    dx = v10810
    bx = v10907 [from 0x80484e3:pop    ebx]
    sp = v10812+0x14 [from 0x80484e4:pop    esi]
    bp = v10813
    si = v10943 [from 0x80484e4:pop    esi]
    di = v10815
    es = v10816
    cs = v10817
    ss = v10818
    ds = v10819
    fs = v10820
    gs = v10821
    cf = v10868 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10823
    pf = -v10863-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10825
    af = v10867 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10827
    zf = v10866 [from 0x80484e0:add    esp, 0x0c]
    sf = v10865 [from 0x80484e0:add    esp, 0x0c]
    tf = v10830
    if = v10831
    df = v10832
    of = v10871 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10834
    iopl1 = v10835
    nt = v10836
    ?15 = v10837
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v10808
    cx = v10809
    dx = v10810
    bx = v10907 [from 0x80484e3:pop    ebx]
    sp = v10812+0x18 [from 0x80484e5:pop    edi]
    bp = v10813
    si = v10943 [from 0x80484e4:pop    esi]
    di = v10979 [from 0x80484e5:pop    edi]
    es = v10816
    cs = v10817
    ss = v10818
    ds = v10819
    fs = v10820
    gs = v10821
    cf = v10868 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10823
    pf = -v10863-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10825
    af = v10867 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10827
    zf = v10866 [from 0x80484e0:add    esp, 0x0c]
    sf = v10865 [from 0x80484e0:add    esp, 0x0c]
    tf = v10830
    if = v10831
    df = v10832
    of = v10871 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10834
    iopl1 = v10835
    nt = v10836
    ?15 = v10837
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v10808
    cx = v10809
    dx = v10810
    bx = v10907 [from 0x80484e3:pop    ebx]
    sp = v10812+0x1c [from 0x80484e6:pop    ebp]
    bp = v11015 [from 0x80484e6:pop    ebp]
    si = v10943 [from 0x80484e4:pop    esi]
    di = v10979 [from 0x80484e5:pop    edi]
    es = v10816
    cs = v10817
    ss = v10818
    ds = v10819
    fs = v10820
    gs = v10821
    cf = v10868 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10823
    pf = -v10863-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10825
    af = v10867 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10827
    zf = v10866 [from 0x80484e0:add    esp, 0x0c]
    sf = v10865 [from 0x80484e0:add    esp, 0x0c]
    tf = v10830
    if = v10831
    df = v10832
    of = v10871 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10834
    iopl1 = v10835
    nt = v10836
    ?15 = v10837
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v10808
    cx = v10809
    dx = v10810
    bx = v10907 [from 0x80484e3:pop    ebx]
    sp = v10812+0x20 [from 0x80484e7:ret    ]
    bp = v11015 [from 0x80484e6:pop    ebp]
    si = v10943 [from 0x80484e4:pop    esi]
    di = v10979 [from 0x80484e5:pop    edi]
    es = v10816
    cs = v10817
    ss = v10818
    ds = v10819
    fs = v10820
    gs = v10821
    cf = v10868 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v10823
    pf = -v10863-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v10825
    af = v10867 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v10827
    zf = v10866 [from 0x80484e0:add    esp, 0x0c]
    sf = v10865 [from 0x80484e0:add    esp, 0x0c]
    tf = v10830
    if = v10831
    df = v10832
    of = v10871 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v10834
    iopl1 = v10835
    nt = v10836
    ?15 = v10837
    memory = {}
    ip = v11053 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e8:nop    
    ax = v11115
    cx = v11116
    dx = v11117
    bx = v11118
    sp = v11119
    bp = v11120
    si = v11121
    di = v11122
    es = v11123
    cs = v11124
    ss = v11125
    ds = v11126
    fs = v11127
    gs = v11128
    cf = v11129
    ?1 = v11130
    pf = v11131
    ?3 = v11132
    af = v11133
    ?5 = v11134
    zf = v11135
    sf = v11136
    tf = v11137
    if = v11138
    df = v11139
    of = v11140
    iopl0 = v11141
    iopl1 = v11142
    nt = v11143
    ?15 = v11144
    memory = {}
    ip = 0x80484e9 [from 0x80484e8:nop    ]
0x80484e9:lea    esi, [esi + 0x00000000]
    ax = v11115
    cx = v11116
    dx = v11117
    bx = v11118
    sp = v11119
    bp = v11120
    si = v11121 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
    di = v11122
    es = v11123
    cs = v11124
    ss = v11125
    ds = v11126
    fs = v11127
    gs = v11128
    cf = v11129
    ?1 = v11130
    pf = v11131
    ?3 = v11132
    af = v11133
    ?5 = v11134
    zf = v11135
    sf = v11136
    tf = v11137
    if = v11138
    df = v11139
    of = v11140
    iopl0 = v11141
    iopl1 = v11142
    nt = v11143
    ?15 = v11144
    memory = {}
    ip = 0x80484f0 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
0x80484f0:xor    edi, edi
    ax = v11115
    cx = v11116
    dx = v11117
    bx = v11118
    sp = v11119
    bp = v11120
    si = v11121 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v11123
    cs = v11124
    ss = v11125
    ds = v11126
    fs = v11127
    gs = v11128
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11130
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11132
    af = <top>
    ?5 = v11134
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11137
    if = v11138
    df = v11139
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11141
    iopl1 = v11142
    nt = v11143
    ?15 = v11144
    memory = {}
    ip = 0x80484f2 [from 0x80484f0:xor    edi, edi]
0x80484f2:mov    esi, edx
    ax = v11115
    cx = v11116
    dx = v11117
    bx = v11118
    sp = v11119
    bp = v11120
    si = v11117
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v11123
    cs = v11124
    ss = v11125
    ds = v11126
    fs = v11127
    gs = v11128
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11130
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11132
    af = <top>
    ?5 = v11134
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11137
    if = v11138
    df = v11139
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11141
    iopl1 = v11142
    nt = v11143
    ?15 = v11144
    memory = {}
    ip = 0x80484f4 [from 0x80484f2:mov    esi, edx]
0x80484f4:lea    esi, [esi + 0x00000000]
    ax = v11115
    cx = v11116
    dx = v11117
    bx = v11118
    sp = v11119
    bp = v11120
    si = v11117 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v11123
    cs = v11124
    ss = v11125
    ds = v11126
    fs = v11127
    gs = v11128
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11130
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11132
    af = <top>
    ?5 = v11134
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11137
    if = v11138
    df = v11139
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11141
    iopl1 = v11142
    nt = v11143
    ?15 = v11144
    memory = {}
    ip = 0x80484fa [from 0x80484f4:lea    esi, [esi + 0x00000000]]
0x80484fa:lea    edi, [edi + 0x00000000]
    ax = v11115
    cx = v11116
    dx = v11117
    bx = v11118
    sp = v11119
    bp = v11120
    si = v11117 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
    es = v11123
    cs = v11124
    ss = v11125
    ds = v11126
    fs = v11127
    gs = v11128
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11130
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11132
    af = <top>
    ?5 = v11134
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11137
    if = v11138
    df = v11139
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11141
    iopl1 = v11142
    nt = v11143
    ?15 = v11144
    memory = {}
    ip = 0x8048500 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
0x8048500:call   DWORD PTR ds:[esi]
    ax = v11115
    cx = v11116
    dx = v11117
    bx = v11118
    sp = v11119-0x4 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bp = v11120
    si = v11117 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
    es = v11123
    cs = v11124
    ss = v11125
    ds = v11126
    fs = v11127
    gs = v11128
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v11130
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v11132
    af = <top>
    ?5 = v11134
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v11137
    if = v11138
    df = v11139
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v11141
    iopl1 = v11142
    nt = v11143
    ?15 = v11144
    memory = {
        size=4; addr=v11119-0x4 [from 0x8048500:call   DWORD PTR ds:[esi]]; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
    ip = v11372 [from 0x8048500:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048502:inc    edi
    ax = v11434
    cx = v11435
    dx = v11436
    bx = v11437
    sp = v11438
    bp = v11439
    si = v11440
    di = v11441+0x1 [from 0x8048502:inc    edi]
    es = v11442
    cs = v11443
    ss = v11444
    ds = v11445
    fs = v11446
    gs = v11447
    cf = v11448
    ?1 = v11449
    pf = -v11489-0x1 [from 0x8048502:inc    edi]
    ?3 = v11451
    af = v11493 [from 0x8048502:inc    edi]
    ?5 = v11453
    zf = v11492 [from 0x8048502:inc    edi]
    sf = v11491 [from 0x8048502:inc    edi]
    tf = v11456
    if = v11457
    df = v11458
    of = v11496 [from 0x8048502:inc    edi]
    iopl0 = v11460
    iopl1 = v11461
    nt = v11462
    ?15 = v11463
    memory = {}
    ip = 0x8048503 [from 0x8048502:inc    edi]
0x8048503:add    esi, 0x04
    ax = v11434
    cx = v11435
    dx = v11436
    bx = v11437
    sp = v11438
    bp = v11439
    si = v11440+0x4 [from 0x8048503:add    esi, 0x04]
    di = v11441+0x1 [from 0x8048502:inc    edi]
    es = v11442
    cs = v11443
    ss = v11444
    ds = v11445
    fs = v11446
    gs = v11447
    cf = v11558 [from 0x8048503:add    esi, 0x04]
    ?1 = v11449
    pf = -v11553-0x1 [from 0x8048503:add    esi, 0x04]
    ?3 = v11451
    af = v11557 [from 0x8048503:add    esi, 0x04]
    ?5 = v11453
    zf = v11556 [from 0x8048503:add    esi, 0x04]
    sf = v11555 [from 0x8048503:add    esi, 0x04]
    tf = v11456
    if = v11457
    df = v11458
    of = v11561 [from 0x8048503:add    esi, 0x04]
    iopl0 = v11460
    iopl1 = v11461
    nt = v11462
    ?15 = v11463
    memory = {}
    ip = 0x8048506 [from 0x8048503:add    esi, 0x04]
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]
    ax = v11434
    cx = v11435
    dx = v11436
    bx = v11437
    sp = v11438
    bp = v11439
    si = v11440+0x4 [from 0x8048503:add    esi, 0x04]
    di = v11441+0x1 [from 0x8048502:inc    edi]
    es = v11442
    cs = v11443
    ss = v11444
    ds = v11445
    fs = v11446
    gs = v11447
    cf = -v11629-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?1 = v11449
    pf = -v11623-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?3 = v11451
    af = -v11627-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?5 = v11453
    zf = v11626 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    sf = v11625 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    tf = v11456
    if = v11457
    df = v11458
    of = v11633 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    iopl0 = v11460
    iopl1 = v11461
    nt = v11462
    ?15 = v11463
    memory = {}
    ip = 0x8048509 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
0x8048509:jb     0x08048500
    ax = v11434
    cx = v11435
    dx = v11436
    bx = v11437
    sp = v11438
    bp = v11439
    si = v11440+0x4 [from 0x8048503:add    esi, 0x04]
    di = v11441+0x1 [from 0x8048502:inc    edi]
    es = v11442
    cs = v11443
    ss = v11444
    ds = v11445
    fs = v11446
    gs = v11447
    cf = -v11629-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?1 = v11449
    pf = -v11623-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?3 = v11451
    af = -v11627-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?5 = v11453
    zf = v11626 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    sf = v11625 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    tf = v11456
    if = v11457
    df = v11458
    of = v11633 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    iopl0 = v11460
    iopl1 = v11461
    nt = v11462
    ?15 = v11463
    memory = {}
    ip = v11667 [from 0x8048509:jb     0x08048500]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804850b:add    esp, 0x0c
    ax = v11789
    cx = v11790
    dx = v11791
    bx = v11792
    sp = v11793+0xc [from 0x804850b:add    esp, 0x0c]
    bp = v11794
    si = v11795
    di = v11796
    es = v11797
    cs = v11798
    ss = v11799
    ds = v11800
    fs = v11801
    gs = v11802
    cf = v11849 [from 0x804850b:add    esp, 0x0c]
    ?1 = v11804
    pf = -v11844-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v11806
    af = v11848 [from 0x804850b:add    esp, 0x0c]
    ?5 = v11808
    zf = v11847 [from 0x804850b:add    esp, 0x0c]
    sf = v11846 [from 0x804850b:add    esp, 0x0c]
    tf = v11811
    if = v11812
    df = v11813
    of = v11852 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v11815
    iopl1 = v11816
    nt = v11817
    ?15 = v11818
    memory = {}
    ip = 0x804850e [from 0x804850b:add    esp, 0x0c]
0x804850e:pop    ebx
    ax = v11789
    cx = v11790
    dx = v11791
    bx = v11888 [from 0x804850e:pop    ebx]
    sp = v11793+0x10 [from 0x804850e:pop    ebx]
    bp = v11794
    si = v11795
    di = v11796
    es = v11797
    cs = v11798
    ss = v11799
    ds = v11800
    fs = v11801
    gs = v11802
    cf = v11849 [from 0x804850b:add    esp, 0x0c]
    ?1 = v11804
    pf = -v11844-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v11806
    af = v11848 [from 0x804850b:add    esp, 0x0c]
    ?5 = v11808
    zf = v11847 [from 0x804850b:add    esp, 0x0c]
    sf = v11846 [from 0x804850b:add    esp, 0x0c]
    tf = v11811
    if = v11812
    df = v11813
    of = v11852 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v11815
    iopl1 = v11816
    nt = v11817
    ?15 = v11818
    memory = {}
    ip = 0x804850f [from 0x804850e:pop    ebx]
0x804850f:pop    esi
    ax = v11789
    cx = v11790
    dx = v11791
    bx = v11888 [from 0x804850e:pop    ebx]
    sp = v11793+0x14 [from 0x804850f:pop    esi]
    bp = v11794
    si = v11924 [from 0x804850f:pop    esi]
    di = v11796
    es = v11797
    cs = v11798
    ss = v11799
    ds = v11800
    fs = v11801
    gs = v11802
    cf = v11849 [from 0x804850b:add    esp, 0x0c]
    ?1 = v11804
    pf = -v11844-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v11806
    af = v11848 [from 0x804850b:add    esp, 0x0c]
    ?5 = v11808
    zf = v11847 [from 0x804850b:add    esp, 0x0c]
    sf = v11846 [from 0x804850b:add    esp, 0x0c]
    tf = v11811
    if = v11812
    df = v11813
    of = v11852 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v11815
    iopl1 = v11816
    nt = v11817
    ?15 = v11818
    memory = {}
    ip = 0x8048510 [from 0x804850f:pop    esi]
0x8048510:pop    edi
    ax = v11789
    cx = v11790
    dx = v11791
    bx = v11888 [from 0x804850e:pop    ebx]
    sp = v11793+0x18 [from 0x8048510:pop    edi]
    bp = v11794
    si = v11924 [from 0x804850f:pop    esi]
    di = v11960 [from 0x8048510:pop    edi]
    es = v11797
    cs = v11798
    ss = v11799
    ds = v11800
    fs = v11801
    gs = v11802
    cf = v11849 [from 0x804850b:add    esp, 0x0c]
    ?1 = v11804
    pf = -v11844-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v11806
    af = v11848 [from 0x804850b:add    esp, 0x0c]
    ?5 = v11808
    zf = v11847 [from 0x804850b:add    esp, 0x0c]
    sf = v11846 [from 0x804850b:add    esp, 0x0c]
    tf = v11811
    if = v11812
    df = v11813
    of = v11852 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v11815
    iopl1 = v11816
    nt = v11817
    ?15 = v11818
    memory = {}
    ip = 0x8048511 [from 0x8048510:pop    edi]
0x8048511:pop    ebp
    ax = v11789
    cx = v11790
    dx = v11791
    bx = v11888 [from 0x804850e:pop    ebx]
    sp = v11793+0x1c [from 0x8048511:pop    ebp]
    bp = v11996 [from 0x8048511:pop    ebp]
    si = v11924 [from 0x804850f:pop    esi]
    di = v11960 [from 0x8048510:pop    edi]
    es = v11797
    cs = v11798
    ss = v11799
    ds = v11800
    fs = v11801
    gs = v11802
    cf = v11849 [from 0x804850b:add    esp, 0x0c]
    ?1 = v11804
    pf = -v11844-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v11806
    af = v11848 [from 0x804850b:add    esp, 0x0c]
    ?5 = v11808
    zf = v11847 [from 0x804850b:add    esp, 0x0c]
    sf = v11846 [from 0x804850b:add    esp, 0x0c]
    tf = v11811
    if = v11812
    df = v11813
    of = v11852 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v11815
    iopl1 = v11816
    nt = v11817
    ?15 = v11818
    memory = {}
    ip = 0x8048512 [from 0x8048511:pop    ebp]
0x8048512:ret    
    ax = v11789
    cx = v11790
    dx = v11791
    bx = v11888 [from 0x804850e:pop    ebx]
    sp = v11793+0x20 [from 0x8048512:ret    ]
    bp = v11996 [from 0x8048511:pop    ebp]
    si = v11924 [from 0x804850f:pop    esi]
    di = v11960 [from 0x8048510:pop    edi]
    es = v11797
    cs = v11798
    ss = v11799
    ds = v11800
    fs = v11801
    gs = v11802
    cf = v11849 [from 0x804850b:add    esp, 0x0c]
    ?1 = v11804
    pf = -v11844-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v11806
    af = v11848 [from 0x804850b:add    esp, 0x0c]
    ?5 = v11808
    zf = v11847 [from 0x804850b:add    esp, 0x0c]
    sf = v11846 [from 0x804850b:add    esp, 0x0c]
    tf = v11811
    if = v11812
    df = v11813
    of = v11852 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v11815
    iopl1 = v11816
    nt = v11817
    ?15 = v11818
    memory = {}
    ip = v12034 [from 0x8048512:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048513:lea    esi, [esi + 0x00000000]
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100
    bp = v12101
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = v12110
    ?1 = v12111
    pf = v12112
    ?3 = v12113
    af = v12114
    ?5 = v12115
    zf = v12116
    sf = v12117
    tf = v12118
    if = v12119
    df = v12120
    of = v12121
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {}
    ip = 0x8048519 [from 0x8048513:lea    esi, [esi + 0x00000000]]
0x8048519:lea    edi, [edi + 0x00000000]
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100
    bp = v12101
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = v12110
    ?1 = v12111
    pf = v12112
    ?3 = v12113
    af = v12114
    ?5 = v12115
    zf = v12116
    sf = v12117
    tf = v12118
    if = v12119
    df = v12120
    of = v12121
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {}
    ip = 0x8048520 [from 0x8048519:lea    edi, [edi + 0x00000000]]
0x8048520:push   ebp
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100-0x4 [from 0x8048520:push   ebp]
    bp = v12101
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = v12110
    ?1 = v12111
    pf = v12112
    ?3 = v12113
    af = v12114
    ?5 = v12115
    zf = v12116
    sf = v12117
    tf = v12118
    if = v12119
    df = v12120
    of = v12121
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {
        size=4; addr=v12100-0x4 [from 0x8048520:push   ebp]; value=v12101
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100-0x4 [from 0x8048520:push   ebp]
    bp = v12100-0x4 [from 0x8048520:push   ebp]
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = v12110
    ?1 = v12111
    pf = v12112
    ?3 = v12113
    af = v12114
    ?5 = v12115
    zf = v12116
    sf = v12117
    tf = v12118
    if = v12119
    df = v12120
    of = v12121
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {
        size=4; addr=v12100-0x4 [from 0x8048520:push   ebp]; value=v12101
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100-0x8 [from 0x8048523:push   edi]
    bp = v12100-0x4 [from 0x8048520:push   ebp]
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = v12110
    ?1 = v12111
    pf = v12112
    ?3 = v12113
    af = v12114
    ?5 = v12115
    zf = v12116
    sf = v12117
    tf = v12118
    if = v12119
    df = v12120
    of = v12121
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {
        size=4; addr=v12100-0x8 [from 0x8048523:push   edi]; value=v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v12100-0x4 [from 0x8048520:push   ebp]; value=v12101
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100-0xc [from 0x8048524:push   esi]
    bp = v12100-0x4 [from 0x8048520:push   ebp]
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = v12110
    ?1 = v12111
    pf = v12112
    ?3 = v12113
    af = v12114
    ?5 = v12115
    zf = v12116
    sf = v12117
    tf = v12118
    if = v12119
    df = v12120
    of = v12121
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {
        size=4; addr=v12100-0xc [from 0x8048524:push   esi]; value=v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
        size=4; addr=v12100-0x8 [from 0x8048523:push   edi]; value=v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v12100-0x4 [from 0x8048520:push   ebp]; value=v12101
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100-0x10 [from 0x8048525:push   ebx]
    bp = v12100-0x4 [from 0x8048520:push   ebp]
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = v12110
    ?1 = v12111
    pf = v12112
    ?3 = v12113
    af = v12114
    ?5 = v12115
    zf = v12116
    sf = v12117
    tf = v12118
    if = v12119
    df = v12120
    of = v12121
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {
        size=4; addr=v12100-0x10 [from 0x8048525:push   ebx]; value=v12099
        size=4; addr=v12100-0xc [from 0x8048524:push   esi]; value=v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
        size=4; addr=v12100-0x8 [from 0x8048523:push   edi]; value=v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v12100-0x4 [from 0x8048520:push   ebp]; value=v12101
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v12100-0x4 [from 0x8048520:push   ebp]
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = -v12403-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v12111
    pf = -v12397-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v12113
    af = -v12401-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v12115
    zf = v12400 [from 0x8048526:sub    esp, 0x0c]
    sf = v12399 [from 0x8048526:sub    esp, 0x0c]
    tf = v12118
    if = v12119
    df = v12120
    of = v12407 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {
        size=4; addr=v12100-0x10 [from 0x8048525:push   ebx]; value=v12099
        size=4; addr=v12100-0xc [from 0x8048524:push   esi]; value=v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
        size=4; addr=v12100-0x8 [from 0x8048523:push   edi]; value=v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v12100-0x4 [from 0x8048520:push   ebp]; value=v12101
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v12096
    cx = v12097
    dx = v12098
    bx = v12099
    sp = v12100-0x20 [from 0x8048529:call   0x0804852e]
    bp = v12100-0x4 [from 0x8048520:push   ebp]
    si = v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v12104
    cs = v12105
    ss = v12106
    ds = v12107
    fs = v12108
    gs = v12109
    cf = -v12403-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v12111
    pf = -v12397-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v12113
    af = -v12401-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v12115
    zf = v12400 [from 0x8048526:sub    esp, 0x0c]
    sf = v12399 [from 0x8048526:sub    esp, 0x0c]
    tf = v12118
    if = v12119
    df = v12120
    of = v12407 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v12122
    iopl1 = v12123
    nt = v12124
    ?15 = v12125
    memory = {
        size=4; addr=v12100-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v12100-0x10 [from 0x8048525:push   ebx]; value=v12099
        size=4; addr=v12100-0xc [from 0x8048524:push   esi]; value=v12102 [from 0x8048513:lea    esi, [esi + 0x00000000]]
        size=4; addr=v12100-0x8 [from 0x8048523:push   edi]; value=v12103 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v12100-0x4 [from 0x8048520:push   ebp]; value=v12101
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v12536
    cx = v12537
    dx = v12538
    bx = v12570 [from 0x804852e:pop    ebx]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = v12550
    ?1 = v12551
    pf = v12552
    ?3 = v12553
    af = v12554
    ?5 = v12555
    zf = v12556
    sf = v12557
    tf = v12558
    if = v12559
    df = v12560
    of = v12561
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v12536
    cx = v12537
    dx = v12538
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = v12632 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v12551
    pf = -v12627-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v12553
    af = v12631 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v12555
    zf = v12630 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v12629 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v12558
    if = v12559
    df = v12560
    of = v12635 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v12570+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v12537
    dx = v12538
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = v12632 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v12551
    pf = -v12627-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v12553
    af = v12631 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v12555
    zf = v12630 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v12629 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v12558
    if = v12559
    df = v12560
    of = v12635 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v12570+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v12537
    dx = v12570+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = v12632 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v12551
    pf = -v12627-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v12553
    af = v12631 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v12555
    zf = v12630 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v12629 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v12558
    if = v12559
    df = v12560
    of = v12635 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v25140 [from 0x8048541:sub    eax, edx]
    cx = v12537
    dx = v12570+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = -v12767-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v12551
    pf = -v12761-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v12553
    af = -v12765-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v12555
    zf = v12764 [from 0x8048541:sub    eax, edx]
    sf = v12763 [from 0x8048541:sub    eax, edx]
    tf = v12558
    if = v12559
    df = v12560
    of = v12771 [from 0x8048541:sub    eax, edx]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v12810 [from 0x8048543:sar    eax, 0x02]
    cx = v12537
    dx = v12570+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = v12813 [from 0x8048543:sar    eax, 0x02]
    ?1 = v12551
    pf = -v12833-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v12553
    af = <top>
    ?5 = v12555
    zf = v12838 [from 0x8048543:sar    eax, 0x02]
    sf = v12836 [from 0x8048543:sar    eax, 0x02]
    tf = v12558
    if = v12559
    df = v12560
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v12810 [from 0x8048543:sar    eax, 0x02]
    cx = v12537
    dx = v12570+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = v12813 [from 0x8048543:sar    eax, 0x02]
    ?1 = v12551
    pf = -v12833-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v12553
    af = <top>
    ?5 = v12555
    zf = v12838 [from 0x8048543:sar    eax, 0x02]
    sf = v12836 [from 0x8048543:sar    eax, 0x02]
    tf = v12558
    if = v12559
    df = v12560
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {
        size=4; addr=v12541-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v12810 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v12810-0x1 [from 0x8048549:dec    eax]
    cx = v12537
    dx = v12570+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = v12813 [from 0x8048543:sar    eax, 0x02]
    ?1 = v12551
    pf = -v12932-0x1 [from 0x8048549:dec    eax]
    ?3 = v12553
    af = -v12936-0x1 [from 0x8048549:dec    eax]
    ?5 = v12555
    zf = v12935 [from 0x8048549:dec    eax]
    sf = v12934 [from 0x8048549:dec    eax]
    tf = v12558
    if = v12559
    df = v12560
    of = v12940 [from 0x8048549:dec    eax]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {
        size=4; addr=v12541-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v12810 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v12810-0x1 [from 0x8048549:dec    eax]
    cx = v12537
    dx = v12570+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = -v13005-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v12551
    pf = -v12999-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v12553
    af = -v13003-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v12555
    zf = v13002 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v13001 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v12558
    if = v12559
    df = v12560
    of = v13009 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {
        size=4; addr=v12541-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v12810 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v12810-0x1 [from 0x8048549:dec    eax]
    cx = v12537
    dx = v12570+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v12570+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v12540+0x4 [from 0x804852e:pop    ebx]
    bp = v12541
    si = v12542
    di = v12543
    es = v12544
    cs = v12545
    ss = v12546
    ds = v12547
    fs = v12548
    gs = v12549
    cf = -v13005-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v12551
    pf = -v12999-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v12553
    af = -v13003-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v12555
    zf = v13002 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v13001 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v12558
    if = v12559
    df = v12560
    of = v13009 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v12562
    iopl1 = v12563
    nt = v12564
    ?15 = v12565
    memory = {
        size=4; addr=v12541-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v12810 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v13043 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax = v13165
    cx = v13166
    dx = v13167
    bx = v13168
    sp = v13169
    bp = v13170
    si = v13199 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v13172
    es = v13173
    cs = v13174
    ss = v13175
    ds = v13176
    fs = v13177
    gs = v13178
    cf = v13179
    ?1 = v13180
    pf = v13181
    ?3 = v13182
    af = v13183
    ?5 = v13184
    zf = v13185
    sf = v13186
    tf = v13187
    if = v13188
    df = v13189
    of = v13190
    iopl0 = v13191
    iopl1 = v13192
    nt = v13193
    ?15 = v13194
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]
0x8048552:xor    edi, edi
    ax = v13165
    cx = v13166
    dx = v13167
    bx = v13168
    sp = v13169
    bp = v13170
    si = v13199 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v13173
    cs = v13174
    ss = v13175
    ds = v13176
    fs = v13177
    gs = v13178
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v13180
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v13182
    af = <top>
    ?5 = v13184
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v13187
    if = v13188
    df = v13189
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v13191
    iopl1 = v13192
    nt = v13193
    ?15 = v13194
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]
0x8048554:lea    esi, [esi + 0x00000000]
    ax = v13165
    cx = v13166
    dx = v13167
    bx = v13168
    sp = v13169
    bp = v13170
    si = v13199 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v13173
    cs = v13174
    ss = v13175
    ds = v13176
    fs = v13177
    gs = v13178
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v13180
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v13182
    af = <top>
    ?5 = v13184
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v13187
    if = v13188
    df = v13189
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v13191
    iopl1 = v13192
    nt = v13193
    ?15 = v13194
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]
0x804855a:lea    edi, [edi + 0x00000000]
    ax = v13165
    cx = v13166
    dx = v13167
    bx = v13168
    sp = v13169
    bp = v13170
    si = v13199 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v13173
    cs = v13174
    ss = v13175
    ds = v13176
    fs = v13177
    gs = v13178
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v13180
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v13182
    af = <top>
    ?5 = v13184
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v13187
    if = v13188
    df = v13189
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v13191
    iopl1 = v13192
    nt = v13193
    ?15 = v13194
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]
0x8048560:call   DWORD PTR ds:[esi]
    ax = v13165
    cx = v13166
    dx = v13167
    bx = v13168
    sp = v13169-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v13170
    si = v13199 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v13173
    cs = v13174
    ss = v13175
    ds = v13176
    fs = v13177
    gs = v13178
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v13180
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v13182
    af = <top>
    ?5 = v13184
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v13187
    if = v13188
    df = v13189
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v13191
    iopl1 = v13192
    nt = v13193
    ?15 = v13194
    memory = {
        size=4; addr=v13169-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v13360 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax = v13422
    cx = v13423
    dx = v13424
    bx = v13425
    sp = v13426
    bp = v13427
    si = v13428
    di = v13429+0x1 [from 0x8048562:inc    edi]
    es = v13430
    cs = v13431
    ss = v13432
    ds = v13433
    fs = v13434
    gs = v13435
    cf = v13436
    ?1 = v13437
    pf = -v13477-0x1 [from 0x8048562:inc    edi]
    ?3 = v13439
    af = v13481 [from 0x8048562:inc    edi]
    ?5 = v13441
    zf = v13480 [from 0x8048562:inc    edi]
    sf = v13479 [from 0x8048562:inc    edi]
    tf = v13444
    if = v13445
    df = v13446
    of = v13484 [from 0x8048562:inc    edi]
    iopl0 = v13448
    iopl1 = v13449
    nt = v13450
    ?15 = v13451
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]
0x8048563:sub    esi, 0x04
    ax = v13422
    cx = v13423
    dx = v13424
    bx = v13425
    sp = v13426
    bp = v13427
    si = v13428-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v13429+0x1 [from 0x8048562:inc    edi]
    es = v13430
    cs = v13431
    ss = v13432
    ds = v13433
    fs = v13434
    gs = v13435
    cf = -v13549-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v13437
    pf = -v13543-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v13439
    af = -v13547-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v13441
    zf = v13546 [from 0x8048563:sub    esi, 0x04]
    sf = v13545 [from 0x8048563:sub    esi, 0x04]
    tf = v13444
    if = v13445
    df = v13446
    of = v13553 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v13448
    iopl1 = v13449
    nt = v13450
    ?15 = v13451
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v13422
    cx = v13423
    dx = v13424
    bx = v13425
    sp = v13426
    bp = v13427
    si = v13428-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v13429+0x1 [from 0x8048562:inc    edi]
    es = v13430
    cs = v13431
    ss = v13432
    ds = v13433
    fs = v13434
    gs = v13435
    cf = -v13621-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v13437
    pf = -v13615-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v13439
    af = -v13619-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v13441
    zf = v13618 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v13617 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v13444
    if = v13445
    df = v13446
    of = v13625 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v13448
    iopl1 = v13449
    nt = v13450
    ?15 = v13451
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
0x8048569:jne    0x08048560
    ax = v13422
    cx = v13423
    dx = v13424
    bx = v13425
    sp = v13426
    bp = v13427
    si = v13428-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v13429+0x1 [from 0x8048562:inc    edi]
    es = v13430
    cs = v13431
    ss = v13432
    ds = v13433
    fs = v13434
    gs = v13435
    cf = -v13621-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v13437
    pf = -v13615-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v13439
    af = -v13619-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v13441
    zf = v13618 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v13617 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v13444
    if = v13445
    df = v13446
    of = v13625 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v13448
    iopl1 = v13449
    nt = v13450
    ?15 = v13451
    memory = {}
    ip = v13660 [from 0x8048569:jne    0x08048560]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v13782
    cx = v13783
    dx = v13784
    bx = v13785
    sp = v13786-0x4 [from 0x804856b:call   0x080485b0]
    bp = v13787
    si = v13788
    di = v13789
    es = v13790
    cs = v13791
    ss = v13792
    ds = v13793
    fs = v13794
    gs = v13795
    cf = v13796
    ?1 = v13797
    pf = v13798
    ?3 = v13799
    af = v13800
    ?5 = v13801
    zf = v13802
    sf = v13803
    tf = v13804
    if = v13805
    df = v13806
    of = v13807
    iopl0 = v13808
    iopl1 = v13809
    nt = v13810
    ?15 = v13811
    memory = {
        size=4; addr=v13786-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v13909
    cx = v13910
    dx = v13911
    bx = v13912
    sp = v13913+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v13914
    si = v13915
    di = v13916
    es = v13917
    cs = v13918
    ss = v13919
    ds = v13920
    fs = v13921
    gs = v13922
    cf = v13969 [from 0x8048570:add    esp, 0x0c]
    ?1 = v13924
    pf = -v13964-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v13926
    af = v13968 [from 0x8048570:add    esp, 0x0c]
    ?5 = v13928
    zf = v13967 [from 0x8048570:add    esp, 0x0c]
    sf = v13966 [from 0x8048570:add    esp, 0x0c]
    tf = v13931
    if = v13932
    df = v13933
    of = v13972 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v13935
    iopl1 = v13936
    nt = v13937
    ?15 = v13938
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v13909
    cx = v13910
    dx = v13911
    bx = v14008 [from 0x8048573:pop    ebx]
    sp = v13913+0x10 [from 0x8048573:pop    ebx]
    bp = v13914
    si = v13915
    di = v13916
    es = v13917
    cs = v13918
    ss = v13919
    ds = v13920
    fs = v13921
    gs = v13922
    cf = v13969 [from 0x8048570:add    esp, 0x0c]
    ?1 = v13924
    pf = -v13964-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v13926
    af = v13968 [from 0x8048570:add    esp, 0x0c]
    ?5 = v13928
    zf = v13967 [from 0x8048570:add    esp, 0x0c]
    sf = v13966 [from 0x8048570:add    esp, 0x0c]
    tf = v13931
    if = v13932
    df = v13933
    of = v13972 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v13935
    iopl1 = v13936
    nt = v13937
    ?15 = v13938
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v13909
    cx = v13910
    dx = v13911
    bx = v14008 [from 0x8048573:pop    ebx]
    sp = v13913+0x14 [from 0x8048574:pop    esi]
    bp = v13914
    si = v14044 [from 0x8048574:pop    esi]
    di = v13916
    es = v13917
    cs = v13918
    ss = v13919
    ds = v13920
    fs = v13921
    gs = v13922
    cf = v13969 [from 0x8048570:add    esp, 0x0c]
    ?1 = v13924
    pf = -v13964-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v13926
    af = v13968 [from 0x8048570:add    esp, 0x0c]
    ?5 = v13928
    zf = v13967 [from 0x8048570:add    esp, 0x0c]
    sf = v13966 [from 0x8048570:add    esp, 0x0c]
    tf = v13931
    if = v13932
    df = v13933
    of = v13972 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v13935
    iopl1 = v13936
    nt = v13937
    ?15 = v13938
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v13909
    cx = v13910
    dx = v13911
    bx = v14008 [from 0x8048573:pop    ebx]
    sp = v13913+0x18 [from 0x8048575:pop    edi]
    bp = v13914
    si = v14044 [from 0x8048574:pop    esi]
    di = v14080 [from 0x8048575:pop    edi]
    es = v13917
    cs = v13918
    ss = v13919
    ds = v13920
    fs = v13921
    gs = v13922
    cf = v13969 [from 0x8048570:add    esp, 0x0c]
    ?1 = v13924
    pf = -v13964-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v13926
    af = v13968 [from 0x8048570:add    esp, 0x0c]
    ?5 = v13928
    zf = v13967 [from 0x8048570:add    esp, 0x0c]
    sf = v13966 [from 0x8048570:add    esp, 0x0c]
    tf = v13931
    if = v13932
    df = v13933
    of = v13972 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v13935
    iopl1 = v13936
    nt = v13937
    ?15 = v13938
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v13909
    cx = v13910
    dx = v13911
    bx = v14008 [from 0x8048573:pop    ebx]
    sp = v13913+0x1c [from 0x8048576:pop    ebp]
    bp = v14116 [from 0x8048576:pop    ebp]
    si = v14044 [from 0x8048574:pop    esi]
    di = v14080 [from 0x8048575:pop    edi]
    es = v13917
    cs = v13918
    ss = v13919
    ds = v13920
    fs = v13921
    gs = v13922
    cf = v13969 [from 0x8048570:add    esp, 0x0c]
    ?1 = v13924
    pf = -v13964-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v13926
    af = v13968 [from 0x8048570:add    esp, 0x0c]
    ?5 = v13928
    zf = v13967 [from 0x8048570:add    esp, 0x0c]
    sf = v13966 [from 0x8048570:add    esp, 0x0c]
    tf = v13931
    if = v13932
    df = v13933
    of = v13972 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v13935
    iopl1 = v13936
    nt = v13937
    ?15 = v13938
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v13909
    cx = v13910
    dx = v13911
    bx = v14008 [from 0x8048573:pop    ebx]
    sp = v13913+0x20 [from 0x8048577:ret    ]
    bp = v14116 [from 0x8048576:pop    ebp]
    si = v14044 [from 0x8048574:pop    esi]
    di = v14080 [from 0x8048575:pop    edi]
    es = v13917
    cs = v13918
    ss = v13919
    ds = v13920
    fs = v13921
    gs = v13922
    cf = v13969 [from 0x8048570:add    esp, 0x0c]
    ?1 = v13924
    pf = -v13964-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v13926
    af = v13968 [from 0x8048570:add    esp, 0x0c]
    ?5 = v13928
    zf = v13967 [from 0x8048570:add    esp, 0x0c]
    sf = v13966 [from 0x8048570:add    esp, 0x0c]
    tf = v13931
    if = v13932
    df = v13933
    of = v13972 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v13935
    iopl1 = v13936
    nt = v13937
    ?15 = v13938
    memory = {}
    ip = v14154 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048578:nop    
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {}
    ip = 0x8048579 [from 0x8048578:nop    ]
0x8048579:nop    
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {}
    ip = 0x804857a [from 0x8048579:nop    ]
0x804857a:nop    
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {}
    ip = 0x804857b [from 0x804857a:nop    ]
0x804857b:nop    
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {}
    ip = 0x804857c [from 0x804857b:nop    ]
0x804857c:nop    
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {}
    ip = 0x804857d [from 0x804857c:nop    ]
0x804857d:nop    
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {}
    ip = 0x804857e [from 0x804857d:nop    ]
0x804857e:nop    
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {}
    ip = 0x804857f [from 0x804857e:nop    ]
0x804857f:nop    
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {}
    ip = 0x8048580 [from 0x804857f:nop    ]
0x8048580:push   ebp
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220-0x4 [from 0x8048580:push   ebp]
    bp = v14221
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {
        size=4; addr=v14220-0x4 [from 0x8048580:push   ebp]; value=v14221
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220-0x4 [from 0x8048580:push   ebp]
    bp = v14220-0x4 [from 0x8048580:push   ebp]
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {
        size=4; addr=v14220-0x4 [from 0x8048580:push   ebp]; value=v14221
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220-0x8 [from 0x8048583:push   ebx]
    bp = v14220-0x4 [from 0x8048580:push   ebp]
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = v14230
    ?1 = v14231
    pf = v14232
    ?3 = v14233
    af = v14234
    ?5 = v14235
    zf = v14236
    sf = v14237
    tf = v14238
    if = v14239
    df = v14240
    of = v14241
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {
        size=4; addr=v14220-0x8 [from 0x8048583:push   ebx]; value=v14219
        size=4; addr=v14220-0x4 [from 0x8048580:push   ebp]; value=v14221
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v14216
    cx = v14217
    dx = v14218
    bx = v14219
    sp = v14220-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14220-0x4 [from 0x8048580:push   ebp]
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = -v14639-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v14231
    pf = -v14633-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v14233
    af = -v14637-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v14235
    zf = v14636 [from 0x8048584:sub    esp, 0x04]
    sf = v14635 [from 0x8048584:sub    esp, 0x04]
    tf = v14238
    if = v14239
    df = v14240
    of = v14643 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {
        size=4; addr=v14220-0x8 [from 0x8048583:push   ebx]; value=v14219
        size=4; addr=v14220-0x4 [from 0x8048580:push   ebp]; value=v14221
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v14216
    cx = v14217
    dx = v14218
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v14220-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14220-0x4 [from 0x8048580:push   ebp]
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = -v14639-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v14231
    pf = -v14633-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v14233
    af = -v14637-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v14235
    zf = v14636 [from 0x8048584:sub    esp, 0x04]
    sf = v14635 [from 0x8048584:sub    esp, 0x04]
    tf = v14238
    if = v14239
    df = v14240
    of = v14643 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {
        size=4; addr=v14220-0x8 [from 0x8048583:push   ebx]; value=v14219
        size=4; addr=v14220-0x4 [from 0x8048580:push   ebp]; value=v14221
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v14711 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v14217
    dx = v14218
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v14220-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14220-0x4 [from 0x8048580:push   ebp]
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = -v14639-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v14231
    pf = -v14633-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v14233
    af = -v14637-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v14235
    zf = v14636 [from 0x8048584:sub    esp, 0x04]
    sf = v14635 [from 0x8048584:sub    esp, 0x04]
    tf = v14238
    if = v14239
    df = v14240
    of = v14643 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {
        size=4; addr=v14220-0x8 [from 0x8048583:push   ebx]; value=v14219
        size=4; addr=v14220-0x4 [from 0x8048580:push   ebp]; value=v14221
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v14711 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v14217
    dx = v14218
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v14220-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14220-0x4 [from 0x8048580:push   ebp]
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = -v14776-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v14231
    pf = -v14770-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v14233
    af = -v14774-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v14235
    zf = v14773 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v14772 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v14238
    if = v14239
    df = v14240
    of = v14780 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {
        size=4; addr=v14220-0x8 [from 0x8048583:push   ebx]; value=v14219
        size=4; addr=v14220-0x4 [from 0x8048580:push   ebp]; value=v14221
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v14711 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v14217
    dx = v14218
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v14220-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v14220-0x4 [from 0x8048580:push   ebp]
    si = v14222
    di = v14223
    es = v14224
    cs = v14225
    ss = v14226
    ds = v14227
    fs = v14228
    gs = v14229
    cf = -v14776-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v14231
    pf = -v14770-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v14233
    af = -v14774-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v14235
    zf = v14773 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v14772 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v14238
    if = v14239
    df = v14240
    of = v14780 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v14242
    iopl1 = v14243
    nt = v14244
    ?15 = v14245
    memory = {
        size=4; addr=v14220-0x8 [from 0x8048583:push   ebx]; value=v14219
        size=4; addr=v14220-0x4 [from 0x8048580:push   ebp]; value=v14221
    }
    ip = v14814 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v14936
    cx = v14937
    dx = v14938
    bx = v14939
    sp = v14940
    bp = v14941
    si = v14942 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v14943
    es = v14944
    cs = v14945
    ss = v14946
    ds = v14947
    fs = v14948
    gs = v14949
    cf = v14950
    ?1 = v14951
    pf = v14952
    ?3 = v14953
    af = v14954
    ?5 = v14955
    zf = v14956
    sf = v14957
    tf = v14958
    if = v14959
    df = v14960
    of = v14961
    iopl0 = v14962
    iopl1 = v14963
    nt = v14964
    ?15 = v14965
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v14936
    cx = v14937
    dx = v14938
    bx = v14939
    sp = v14940
    bp = v14941
    si = v14942 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v14943 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v14944
    cs = v14945
    ss = v14946
    ds = v14947
    fs = v14948
    gs = v14949
    cf = v14950
    ?1 = v14951
    pf = v14952
    ?3 = v14953
    af = v14954
    ?5 = v14955
    zf = v14956
    sf = v14957
    tf = v14958
    if = v14959
    df = v14960
    of = v14961
    iopl0 = v14962
    iopl1 = v14963
    nt = v14964
    ?15 = v14965
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v14936
    cx = v14937
    dx = v14938
    bx = v14939-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v14940
    bp = v14941
    si = v14942 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v14943 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v14944
    cs = v14945
    ss = v14946
    ds = v14947
    fs = v14948
    gs = v14949
    cf = -v15067-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v14951
    pf = -v15061-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v14953
    af = -v15065-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v14955
    zf = v15064 [from 0x80485a0:sub    ebx, 0x04]
    sf = v15063 [from 0x80485a0:sub    ebx, 0x04]
    tf = v14958
    if = v14959
    df = v14960
    of = v15071 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v14962
    iopl1 = v14963
    nt = v14964
    ?15 = v14965
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v14936
    cx = v14937
    dx = v14938
    bx = v14939-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v14940-0x4 [from 0x80485a3:call   eax]
    bp = v14941
    si = v14942 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v14943 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v14944
    cs = v14945
    ss = v14946
    ds = v14947
    fs = v14948
    gs = v14949
    cf = -v15067-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v14951
    pf = -v15061-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v14953
    af = -v15065-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v14955
    zf = v15064 [from 0x80485a0:sub    ebx, 0x04]
    sf = v15063 [from 0x80485a0:sub    ebx, 0x04]
    tf = v14958
    if = v14959
    df = v14960
    of = v15071 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v14962
    iopl1 = v14963
    nt = v14964
    ?15 = v14965
    memory = {
        size=4; addr=v14940-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v14936
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v15201 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v15170
    dx = v15171
    bx = v15172
    sp = v15173
    bp = v15174
    si = v15175
    di = v15176
    es = v15177
    cs = v15178
    ss = v15179
    ds = v15180
    fs = v15181
    gs = v15182
    cf = v15183
    ?1 = v15184
    pf = v15185
    ?3 = v15186
    af = v15187
    ?5 = v15188
    zf = v15189
    sf = v15190
    tf = v15191
    if = v15192
    df = v15193
    of = v15194
    iopl0 = v15195
    iopl1 = v15196
    nt = v15197
    ?15 = v15198
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v15201 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v15170
    dx = v15171
    bx = v15172
    sp = v15173
    bp = v15174
    si = v15175
    di = v15176
    es = v15177
    cs = v15178
    ss = v15179
    ds = v15180
    fs = v15181
    gs = v15182
    cf = -v15266-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v15184
    pf = -v15260-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v15186
    af = -v15264-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v15188
    zf = v15263 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v15262 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v15191
    if = v15192
    df = v15193
    of = v15270 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v15195
    iopl1 = v15196
    nt = v15197
    ?15 = v15198
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v15201 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v15170
    dx = v15171
    bx = v15172
    sp = v15173
    bp = v15174
    si = v15175
    di = v15176
    es = v15177
    cs = v15178
    ss = v15179
    ds = v15180
    fs = v15181
    gs = v15182
    cf = -v15266-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v15184
    pf = -v15260-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v15186
    af = -v15264-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v15188
    zf = v15263 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v15262 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v15191
    if = v15192
    df = v15193
    of = v15270 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v15195
    iopl1 = v15196
    nt = v15197
    ?15 = v15198
    memory = {}
    ip = v15305 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v15461 [from 0x80485ac:pop    eax]
    cx = v15428
    dx = v15429
    bx = v15430
    sp = v15431+0x4 [from 0x80485ac:pop    eax]
    bp = v15432
    si = v15433
    di = v15434
    es = v15435
    cs = v15436
    ss = v15437
    ds = v15438
    fs = v15439
    gs = v15440
    cf = v15441
    ?1 = v15442
    pf = v15443
    ?3 = v15444
    af = v15445
    ?5 = v15446
    zf = v15447
    sf = v15448
    tf = v15449
    if = v15450
    df = v15451
    of = v15452
    iopl0 = v15453
    iopl1 = v15454
    nt = v15455
    ?15 = v15456
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v15461 [from 0x80485ac:pop    eax]
    cx = v15428
    dx = v15429
    bx = v15497 [from 0x80485ad:pop    ebx]
    sp = v15431+0x8 [from 0x80485ad:pop    ebx]
    bp = v15432
    si = v15433
    di = v15434
    es = v15435
    cs = v15436
    ss = v15437
    ds = v15438
    fs = v15439
    gs = v15440
    cf = v15441
    ?1 = v15442
    pf = v15443
    ?3 = v15444
    af = v15445
    ?5 = v15446
    zf = v15447
    sf = v15448
    tf = v15449
    if = v15450
    df = v15451
    of = v15452
    iopl0 = v15453
    iopl1 = v15454
    nt = v15455
    ?15 = v15456
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v15461 [from 0x80485ac:pop    eax]
    cx = v15428
    dx = v15429
    bx = v15497 [from 0x80485ad:pop    ebx]
    sp = v15431+0xc [from 0x80485ae:pop    ebp]
    bp = v15533 [from 0x80485ae:pop    ebp]
    si = v15433
    di = v15434
    es = v15435
    cs = v15436
    ss = v15437
    ds = v15438
    fs = v15439
    gs = v15440
    cf = v15441
    ?1 = v15442
    pf = v15443
    ?3 = v15444
    af = v15445
    ?5 = v15446
    zf = v15447
    sf = v15448
    tf = v15449
    if = v15450
    df = v15451
    of = v15452
    iopl0 = v15453
    iopl1 = v15454
    nt = v15455
    ?15 = v15456
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v15461 [from 0x80485ac:pop    eax]
    cx = v15428
    dx = v15429
    bx = v15497 [from 0x80485ad:pop    ebx]
    sp = v15431+0x10 [from 0x80485af:ret    ]
    bp = v15533 [from 0x80485ae:pop    ebp]
    si = v15433
    di = v15434
    es = v15435
    cs = v15436
    ss = v15437
    ds = v15438
    fs = v15439
    gs = v15440
    cf = v15441
    ?1 = v15442
    pf = v15443
    ?3 = v15444
    af = v15445
    ?5 = v15446
    zf = v15447
    sf = v15448
    tf = v15449
    if = v15450
    df = v15451
    of = v15452
    iopl0 = v15453
    iopl1 = v15454
    nt = v15455
    ?15 = v15456
    memory = {}
    ip = v15571 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v15633
    cx = v15634
    dx = v15635
    bx = v15636
    sp = v15637-0x4 [from 0x80485b0:push   ebp]
    bp = v15638
    si = v15639
    di = v15640
    es = v15641
    cs = v15642
    ss = v15643
    ds = v15644
    fs = v15645
    gs = v15646
    cf = v15647
    ?1 = v15648
    pf = v15649
    ?3 = v15650
    af = v15651
    ?5 = v15652
    zf = v15653
    sf = v15654
    tf = v15655
    if = v15656
    df = v15657
    of = v15658
    iopl0 = v15659
    iopl1 = v15660
    nt = v15661
    ?15 = v15662
    memory = {
        size=4; addr=v15637-0x4 [from 0x80485b0:push   ebp]; value=v15638
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v15633
    cx = v15634
    dx = v15635
    bx = v15636
    sp = v15637-0x4 [from 0x80485b0:push   ebp]
    bp = v15637-0x4 [from 0x80485b0:push   ebp]
    si = v15639
    di = v15640
    es = v15641
    cs = v15642
    ss = v15643
    ds = v15644
    fs = v15645
    gs = v15646
    cf = v15647
    ?1 = v15648
    pf = v15649
    ?3 = v15650
    af = v15651
    ?5 = v15652
    zf = v15653
    sf = v15654
    tf = v15655
    if = v15656
    df = v15657
    of = v15658
    iopl0 = v15659
    iopl1 = v15660
    nt = v15661
    ?15 = v15662
    memory = {
        size=4; addr=v15637-0x4 [from 0x80485b0:push   ebp]; value=v15638
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v15633
    cx = v15634
    dx = v15635
    bx = v15636
    sp = v15637-0x8 [from 0x80485b3:push   ebx]
    bp = v15637-0x4 [from 0x80485b0:push   ebp]
    si = v15639
    di = v15640
    es = v15641
    cs = v15642
    ss = v15643
    ds = v15644
    fs = v15645
    gs = v15646
    cf = v15647
    ?1 = v15648
    pf = v15649
    ?3 = v15650
    af = v15651
    ?5 = v15652
    zf = v15653
    sf = v15654
    tf = v15655
    if = v15656
    df = v15657
    of = v15658
    iopl0 = v15659
    iopl1 = v15660
    nt = v15661
    ?15 = v15662
    memory = {
        size=4; addr=v15637-0x8 [from 0x80485b3:push   ebx]; value=v15636
        size=4; addr=v15637-0x4 [from 0x80485b0:push   ebp]; value=v15638
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v15633
    cx = v15634
    dx = v15635
    bx = v15636
    sp = v15637-0xc [from 0x80485b4:push   eax]
    bp = v15637-0x4 [from 0x80485b0:push   ebp]
    si = v15639
    di = v15640
    es = v15641
    cs = v15642
    ss = v15643
    ds = v15644
    fs = v15645
    gs = v15646
    cf = v15647
    ?1 = v15648
    pf = v15649
    ?3 = v15650
    af = v15651
    ?5 = v15652
    zf = v15653
    sf = v15654
    tf = v15655
    if = v15656
    df = v15657
    of = v15658
    iopl0 = v15659
    iopl1 = v15660
    nt = v15661
    ?15 = v15662
    memory = {
        size=4; addr=v15637-0xc [from 0x80485b4:push   eax]; value=v15633
        size=4; addr=v15637-0x8 [from 0x80485b3:push   ebx]; value=v15636
        size=4; addr=v15637-0x4 [from 0x80485b0:push   ebp]; value=v15638
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v15633
    cx = v15634
    dx = v15635
    bx = v15636
    sp = v15637-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v15637-0x4 [from 0x80485b0:push   ebp]
    si = v15639
    di = v15640
    es = v15641
    cs = v15642
    ss = v15643
    ds = v15644
    fs = v15645
    gs = v15646
    cf = v15647
    ?1 = v15648
    pf = v15649
    ?3 = v15650
    af = v15651
    ?5 = v15652
    zf = v15653
    sf = v15654
    tf = v15655
    if = v15656
    df = v15657
    of = v15658
    iopl0 = v15659
    iopl1 = v15660
    nt = v15661
    ?15 = v15662
    memory = {
        size=4; addr=v15637-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v15637-0xc [from 0x80485b4:push   eax]; value=v15633
        size=4; addr=v15637-0x8 [from 0x80485b3:push   ebx]; value=v15636
        size=4; addr=v15637-0x4 [from 0x80485b0:push   ebp]; value=v15638
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v15900
    cx = v15901
    dx = v15902
    bx = v15934 [from 0x80485ba:pop    ebx]
    sp = v15904+0x4 [from 0x80485ba:pop    ebx]
    bp = v15905
    si = v15906
    di = v15907
    es = v15908
    cs = v15909
    ss = v15910
    ds = v15911
    fs = v15912
    gs = v15913
    cf = v15914
    ?1 = v15915
    pf = v15916
    ?3 = v15917
    af = v15918
    ?5 = v15919
    zf = v15920
    sf = v15921
    tf = v15922
    if = v15923
    df = v15924
    of = v15925
    iopl0 = v15926
    iopl1 = v15927
    nt = v15928
    ?15 = v15929
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v15900
    cx = v15901
    dx = v15902
    bx = v15934+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v15904+0x4 [from 0x80485ba:pop    ebx]
    bp = v15905
    si = v15906
    di = v15907
    es = v15908
    cs = v15909
    ss = v15910
    ds = v15911
    fs = v15912
    gs = v15913
    cf = v15996 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v15915
    pf = -v15991-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v15917
    af = v15995 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v15919
    zf = v15994 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v15993 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v15922
    if = v15923
    df = v15924
    of = v15999 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v15926
    iopl1 = v15927
    nt = v15928
    ?15 = v15929
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v15900
    cx = v15901
    dx = v15902
    bx = v15934+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v15904 [from 0x80485c1:call   0x08048390]
    bp = v15905
    si = v15906
    di = v15907
    es = v15908
    cs = v15909
    ss = v15910
    ds = v15911
    fs = v15912
    gs = v15913
    cf = v15996 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v15915
    pf = -v15991-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v15917
    af = v15995 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v15919
    zf = v15994 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v15993 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v15922
    if = v15923
    df = v15924
    of = v15999 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v15926
    iopl1 = v15927
    nt = v15928
    ?15 = v15929
    memory = {
        size=4; addr=v15904 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v16162 [from 0x80485c6:pop    eax]
    cx = v16129
    dx = v16130
    bx = v16131
    sp = v16132+0x4 [from 0x80485c6:pop    eax]
    bp = v16133
    si = v16134
    di = v16135
    es = v16136
    cs = v16137
    ss = v16138
    ds = v16139
    fs = v16140
    gs = v16141
    cf = v16142
    ?1 = v16143
    pf = v16144
    ?3 = v16145
    af = v16146
    ?5 = v16147
    zf = v16148
    sf = v16149
    tf = v16150
    if = v16151
    df = v16152
    of = v16153
    iopl0 = v16154
    iopl1 = v16155
    nt = v16156
    ?15 = v16157
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v16162 [from 0x80485c6:pop    eax]
    cx = v16129
    dx = v16130
    bx = v16198 [from 0x80485c7:pop    ebx]
    sp = v16132+0x8 [from 0x80485c7:pop    ebx]
    bp = v16133
    si = v16134
    di = v16135
    es = v16136
    cs = v16137
    ss = v16138
    ds = v16139
    fs = v16140
    gs = v16141
    cf = v16142
    ?1 = v16143
    pf = v16144
    ?3 = v16145
    af = v16146
    ?5 = v16147
    zf = v16148
    sf = v16149
    tf = v16150
    if = v16151
    df = v16152
    of = v16153
    iopl0 = v16154
    iopl1 = v16155
    nt = v16156
    ?15 = v16157
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v16162 [from 0x80485c6:pop    eax]
    cx = v16129
    dx = v16130
    bx = v16198 [from 0x80485c7:pop    ebx]
    sp = v16133+0x4 [from 0x80485c8:leave  ]
    bp = v16234 [from 0x80485c8:leave  ]
    si = v16134
    di = v16135
    es = v16136
    cs = v16137
    ss = v16138
    ds = v16139
    fs = v16140
    gs = v16141
    cf = v16142
    ?1 = v16143
    pf = v16144
    ?3 = v16145
    af = v16146
    ?5 = v16147
    zf = v16148
    sf = v16149
    tf = v16150
    if = v16151
    df = v16152
    of = v16153
    iopl0 = v16154
    iopl1 = v16155
    nt = v16156
    ?15 = v16157
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v16162 [from 0x80485c6:pop    eax]
    cx = v16129
    dx = v16130
    bx = v16198 [from 0x80485c7:pop    ebx]
    sp = v16133+0x8 [from 0x80485c9:ret    ]
    bp = v16234 [from 0x80485c8:leave  ]
    si = v16134
    di = v16135
    es = v16136
    cs = v16137
    ss = v16138
    ds = v16139
    fs = v16140
    gs = v16141
    cf = v16142
    ?1 = v16143
    pf = v16144
    ?3 = v16145
    af = v16146
    ?5 = v16147
    zf = v16148
    sf = v16149
    tf = v16150
    if = v16151
    df = v16152
    of = v16153
    iopl0 = v16154
    iopl1 = v16155
    nt = v16156
    ?15 = v16157
    memory = {}
    ip = v16272 [from 0x80485c9:ret    ]
analyzed headers: 1
