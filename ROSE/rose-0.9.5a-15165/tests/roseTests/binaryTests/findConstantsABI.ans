=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482c8:push   ebp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v67
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482c9 [from 0x80482c8:push   ebp]
0x80482c9:mov    ebp, esp
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x4 [from 0x80482c8:push   ebp]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = v76
    ?1 = v77
    pf = v78
    ?3 = v79
    af = v80
    ?5 = v81
    zf = v82
    sf = v83
    tf = v84
    if = v85
    df = v86
    of = v87
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482cb [from 0x80482c9:mov    ebp, esp]
0x80482cb:sub    esp, 0x08
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0xc [from 0x80482cb:sub    esp, 0x08]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x80482ce [from 0x80482cb:sub    esp, 0x08]
0x80482ce:call   0x08048364
    ax = v62
    cx = v63
    dx = v64
    bx = v65
    sp = v66-0x10 [from 0x80482ce:call   0x08048364]
    bp = v66-0x4 [from 0x80482c8:push   ebp]
    si = v68
    di = v69
    es = v70
    cs = v71
    ss = v72
    ds = v73
    fs = v74
    gs = v75
    cf = -v193-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?1 = v77
    pf = -v187-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?3 = v79
    af = -v191-0x1 [from 0x80482cb:sub    esp, 0x08]
    ?5 = v81
    zf = v190 [from 0x80482cb:sub    esp, 0x08]
    sf = v189 [from 0x80482cb:sub    esp, 0x08]
    tf = v84
    if = v85
    df = v86
    of = v197 [from 0x80482cb:sub    esp, 0x08]
    iopl0 = v88
    iopl1 = v89
    nt = v90
    ?15 = v91
    memory = {
        size=4; addr=v66-0x10 [from 0x80482ce:call   0x08048364]; value=0x80482d3 [from 0x80482ce:call   0x08048364]
        size=4; addr=v66-0x4 [from 0x80482c8:push   ebp]; value=v67
    }
    ip = 0x8048364 [from 0x80482ce:call   0x08048364]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d3:call   0x080483d0
    ax = v416
    cx = v417
    dx = v418
    bx = v419
    sp = v420-0x4 [from 0x80482d3:call   0x080483d0]
    bp = v421
    si = v422
    di = v423
    es = v424
    cs = v425
    ss = v426
    ds = v427
    fs = v428
    gs = v429
    cf = v430
    ?1 = v431
    pf = v432
    ?3 = v433
    af = v434
    ?5 = v435
    zf = v436
    sf = v437
    tf = v438
    if = v439
    df = v440
    of = v441
    iopl0 = v442
    iopl1 = v443
    nt = v444
    ?15 = v445
    memory = {
        size=4; addr=v420-0x4 [from 0x80482d3:call   0x080483d0]; value=0x80482d8 [from 0x80482d3:call   0x080483d0]
    }
    ip = 0x80483d0 [from 0x80482d3:call   0x080483d0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482d8:call   0x08048580
    ax = v633
    cx = v634
    dx = v635
    bx = v636
    sp = v637-0x4 [from 0x80482d8:call   0x08048580]
    bp = v638
    si = v639
    di = v640
    es = v641
    cs = v642
    ss = v643
    ds = v644
    fs = v645
    gs = v646
    cf = v647
    ?1 = v648
    pf = v649
    ?3 = v650
    af = v651
    ?5 = v652
    zf = v653
    sf = v654
    tf = v655
    if = v656
    df = v657
    of = v658
    iopl0 = v659
    iopl1 = v660
    nt = v661
    ?15 = v662
    memory = {
        size=4; addr=v637-0x4 [from 0x80482d8:call   0x08048580]; value=0x80482dd [from 0x80482d8:call   0x08048580]
    }
    ip = 0x8048580 [from 0x80482d8:call   0x08048580]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482dd:leave  
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x4 [from 0x80482dd:leave  ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = 0x80482de [from 0x80482dd:leave  ]
0x80482de:ret    
    ax = v850
    cx = v851
    dx = v852
    bx = v853
    sp = v855+0x8 [from 0x80482de:ret    ]
    bp = v884 [from 0x80482dd:leave  ]
    si = v856
    di = v857
    es = v858
    cs = v859
    ss = v860
    ds = v861
    fs = v862
    gs = v863
    cf = v864
    ?1 = v865
    pf = v866
    ?3 = v867
    af = v868
    ?5 = v869
    zf = v870
    sf = v871
    tf = v872
    if = v873
    df = v874
    of = v875
    iopl0 = v876
    iopl1 = v877
    nt = v878
    ?15 = v879
    memory = {}
    ip = v922 [from 0x80482de:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482df:add    bh, bh
    ax = v984
    cx = v985
    dx = v986
    bx = v1052 [from 0x80482df:add    bh, bh]
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = v1045 [from 0x80482df:add    bh, bh]
    ?1 = v999
    pf = -v1040-0x1 [from 0x80482df:add    bh, bh]
    ?3 = v1001
    af = v1044 [from 0x80482df:add    bh, bh]
    ?5 = v1003
    zf = v1043 [from 0x80482df:add    bh, bh]
    sf = v1042 [from 0x80482df:add    bh, bh]
    tf = v1006
    if = v1007
    df = v1008
    of = v1048 [from 0x80482df:add    bh, bh]
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = 0x80482e1 [from 0x80482df:add    bh, bh]
0x80482e1:xor    eax, 0x080496cc
    ax = v1086 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = v985
    dx = v986
    bx = v1052 [from 0x80482df:add    bh, bh]
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = v999
    pf = -v1102-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = v1001
    af = <top>
    ?5 = v1003
    zf = v1105 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = v1104 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = v1006
    if = v1007
    df = v1008
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = 0x80482e6 [from 0x80482e1:xor    eax, 0x080496cc]
0x80482e6:jmp    DWORD PTR ds:[0x080496d0]
    ax = v1086 [from 0x80482e1:xor    eax, 0x080496cc]
    cx = v985
    dx = v986
    bx = v1052 [from 0x80482df:add    bh, bh]
    sp = v988
    bp = v989
    si = v990
    di = v991
    es = v992
    cs = v993
    ss = v994
    ds = v995
    fs = v996
    gs = v997
    cf = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    ?1 = v999
    pf = -v1102-0x1 [from 0x80482e1:xor    eax, 0x080496cc]
    ?3 = v1001
    af = <top>
    ?5 = v1003
    zf = v1105 [from 0x80482e1:xor    eax, 0x080496cc]
    sf = v1104 [from 0x80482e1:xor    eax, 0x080496cc]
    tf = v1006
    if = v1007
    df = v1008
    of = 0x0 [from 0x80482e1:xor    eax, 0x080496cc]
    iopl0 = v1010
    iopl1 = v1011
    nt = v1012
    ?15 = v1013
    memory = {}
    ip = v1143 [from 0x80482e6:jmp    DWORD PTR ds:[0x080496d0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482e0:push   DWORD PTR ds:[0x080496cc]
    ax = v1205
    cx = v1206
    dx = v1207
    bx = v1208
    sp = v1209-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    bp = v1210
    si = v1211
    di = v1212
    es = v1213
    cs = v1214
    ss = v1215
    ds = v1216
    fs = v1217
    gs = v1218
    cf = v1219
    ?1 = v1220
    pf = v1221
    ?3 = v1222
    af = v1223
    ?5 = v1224
    zf = v1225
    sf = v1226
    tf = v1227
    if = v1228
    df = v1229
    of = v1230
    iopl0 = v1231
    iopl1 = v1232
    nt = v1233
    ?15 = v1234
    memory = {
        size=4; addr=v1209-0x4 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]; value=v1241 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
    }
    ip = 0x80482e6 [from 0x80482e0:push   DWORD PTR ds:[0x080496cc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482ec:add    BYTE PTR ds:[eax], al
    ax = v1334
    cx = v1335
    dx = v1336
    bx = v1337
    sp = v1338
    bp = v1339
    si = v1340
    di = v1341
    es = v1342
    cs = v1343
    ss = v1344
    ds = v1345
    fs = v1346
    gs = v1347
    cf = v1396 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?1 = v1349
    pf = -v1391-0x1 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?3 = v1351
    af = v1395 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    ?5 = v1353
    zf = v1394 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    sf = v1393 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    tf = v1356
    if = v1357
    df = v1358
    of = v1399 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    iopl0 = v1360
    iopl1 = v1361
    nt = v1362
    ?15 = v1363
    memory = {
        size=1; addr=v1334; value=v2702 [from 0x80482ec:add    BYTE PTR ds:[eax], al]
    }
    ip = 0x80482ee [from 0x80482ec:add    BYTE PTR ds:[eax], al]
0x80482ee:add    BYTE PTR ds:[eax], al
    ax = v1334
    cx = v1335
    dx = v1336
    bx = v1337
    sp = v1338
    bp = v1339
    si = v1340
    di = v1341
    es = v1342
    cs = v1343
    ss = v1344
    ds = v1345
    fs = v1346
    gs = v1347
    cf = v1465 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?1 = v1349
    pf = -v1460-0x1 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?3 = v1351
    af = v1464 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?5 = v1353
    zf = v1463 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    sf = v1462 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    tf = v1356
    if = v1357
    df = v1358
    of = v1468 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    iopl0 = v1360
    iopl1 = v1361
    nt = v1362
    ?15 = v1363
    memory = {
        size=1; addr=v1334; value=v4036 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    }
    ip = 0x80482f0 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
0x80482f0:jmp    DWORD PTR ds:[0x080496d4]
    ax = v1334
    cx = v1335
    dx = v1336
    bx = v1337
    sp = v1338
    bp = v1339
    si = v1340
    di = v1341
    es = v1342
    cs = v1343
    ss = v1344
    ds = v1345
    fs = v1346
    gs = v1347
    cf = v1465 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?1 = v1349
    pf = -v1460-0x1 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?3 = v1351
    af = v1464 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    ?5 = v1353
    zf = v1463 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    sf = v1462 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    tf = v1356
    if = v1357
    df = v1358
    of = v1468 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    iopl0 = v1360
    iopl1 = v1361
    nt = v1362
    ?15 = v1363
    memory = {
        size=1; addr=v1334; value=v4036 [from 0x80482ee:add    BYTE PTR ds:[eax], al]
    }
    ip = v1505 [from 0x80482f0:jmp    DWORD PTR ds:[0x080496d4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80482f6:push   0x00000000
    ax = v1567
    cx = v1568
    dx = v1569
    bx = v1570
    sp = v1571-0x4 [from 0x80482f6:push   0x00000000]
    bp = v1572
    si = v1573
    di = v1574
    es = v1575
    cs = v1576
    ss = v1577
    ds = v1578
    fs = v1579
    gs = v1580
    cf = v1581
    ?1 = v1582
    pf = v1583
    ?3 = v1584
    af = v1585
    ?5 = v1586
    zf = v1587
    sf = v1588
    tf = v1589
    if = v1590
    df = v1591
    of = v1592
    iopl0 = v1593
    iopl1 = v1594
    nt = v1595
    ?15 = v1596
    memory = {
        size=4; addr=v1571-0x4 [from 0x80482f6:push   0x00000000]; value=0x0 [from 0x80482f6:push   0x00000000]
    }
    ip = 0x80482fb [from 0x80482f6:push   0x00000000]
0x80482fb:jmp    0x080482e0
    ax = v1567
    cx = v1568
    dx = v1569
    bx = v1570
    sp = v1571-0x4 [from 0x80482f6:push   0x00000000]
    bp = v1572
    si = v1573
    di = v1574
    es = v1575
    cs = v1576
    ss = v1577
    ds = v1578
    fs = v1579
    gs = v1580
    cf = v1581
    ?1 = v1582
    pf = v1583
    ?3 = v1584
    af = v1585
    ?5 = v1586
    zf = v1587
    sf = v1588
    tf = v1589
    if = v1590
    df = v1591
    of = v1592
    iopl0 = v1593
    iopl1 = v1594
    nt = v1595
    ?15 = v1596
    memory = {
        size=4; addr=v1571-0x4 [from 0x80482f6:push   0x00000000]; value=0x0 [from 0x80482f6:push   0x00000000]
    }
    ip = 0x80482e0 [from 0x80482fb:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048300:jmp    DWORD PTR ds:[0x080496d8]
    ax = v1727
    cx = v1728
    dx = v1729
    bx = v1730
    sp = v1731
    bp = v1732
    si = v1733
    di = v1734
    es = v1735
    cs = v1736
    ss = v1737
    ds = v1738
    fs = v1739
    gs = v1740
    cf = v1741
    ?1 = v1742
    pf = v1743
    ?3 = v1744
    af = v1745
    ?5 = v1746
    zf = v1747
    sf = v1748
    tf = v1749
    if = v1750
    df = v1751
    of = v1752
    iopl0 = v1753
    iopl1 = v1754
    nt = v1755
    ?15 = v1756
    memory = {}
    ip = v1760 [from 0x8048300:jmp    DWORD PTR ds:[0x080496d8]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048306:push   0x00000008
    ax = v1822
    cx = v1823
    dx = v1824
    bx = v1825
    sp = v1826-0x4 [from 0x8048306:push   0x00000008]
    bp = v1827
    si = v1828
    di = v1829
    es = v1830
    cs = v1831
    ss = v1832
    ds = v1833
    fs = v1834
    gs = v1835
    cf = v1836
    ?1 = v1837
    pf = v1838
    ?3 = v1839
    af = v1840
    ?5 = v1841
    zf = v1842
    sf = v1843
    tf = v1844
    if = v1845
    df = v1846
    of = v1847
    iopl0 = v1848
    iopl1 = v1849
    nt = v1850
    ?15 = v1851
    memory = {
        size=4; addr=v1826-0x4 [from 0x8048306:push   0x00000008]; value=0x8 [from 0x8048306:push   0x00000008]
    }
    ip = 0x804830b [from 0x8048306:push   0x00000008]
0x804830b:jmp    0x080482e0
    ax = v1822
    cx = v1823
    dx = v1824
    bx = v1825
    sp = v1826-0x4 [from 0x8048306:push   0x00000008]
    bp = v1827
    si = v1828
    di = v1829
    es = v1830
    cs = v1831
    ss = v1832
    ds = v1833
    fs = v1834
    gs = v1835
    cf = v1836
    ?1 = v1837
    pf = v1838
    ?3 = v1839
    af = v1840
    ?5 = v1841
    zf = v1842
    sf = v1843
    tf = v1844
    if = v1845
    df = v1846
    of = v1847
    iopl0 = v1848
    iopl1 = v1849
    nt = v1850
    ?15 = v1851
    memory = {
        size=4; addr=v1826-0x4 [from 0x8048306:push   0x00000008]; value=0x8 [from 0x8048306:push   0x00000008]
    }
    ip = 0x80482e0 [from 0x804830b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048310:jmp    DWORD PTR ds:[0x080496dc]
    ax = v1982
    cx = v1983
    dx = v1984
    bx = v1985
    sp = v1986
    bp = v1987
    si = v1988
    di = v1989
    es = v1990
    cs = v1991
    ss = v1992
    ds = v1993
    fs = v1994
    gs = v1995
    cf = v1996
    ?1 = v1997
    pf = v1998
    ?3 = v1999
    af = v2000
    ?5 = v2001
    zf = v2002
    sf = v2003
    tf = v2004
    if = v2005
    df = v2006
    of = v2007
    iopl0 = v2008
    iopl1 = v2009
    nt = v2010
    ?15 = v2011
    memory = {}
    ip = v2015 [from 0x8048310:jmp    DWORD PTR ds:[0x080496dc]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048316:push   0x00000010
    ax = v2077
    cx = v2078
    dx = v2079
    bx = v2080
    sp = v2081-0x4 [from 0x8048316:push   0x00000010]
    bp = v2082
    si = v2083
    di = v2084
    es = v2085
    cs = v2086
    ss = v2087
    ds = v2088
    fs = v2089
    gs = v2090
    cf = v2091
    ?1 = v2092
    pf = v2093
    ?3 = v2094
    af = v2095
    ?5 = v2096
    zf = v2097
    sf = v2098
    tf = v2099
    if = v2100
    df = v2101
    of = v2102
    iopl0 = v2103
    iopl1 = v2104
    nt = v2105
    ?15 = v2106
    memory = {
        size=4; addr=v2081-0x4 [from 0x8048316:push   0x00000010]; value=0x10 [from 0x8048316:push   0x00000010]
    }
    ip = 0x804831b [from 0x8048316:push   0x00000010]
0x804831b:jmp    0x080482e0
    ax = v2077
    cx = v2078
    dx = v2079
    bx = v2080
    sp = v2081-0x4 [from 0x8048316:push   0x00000010]
    bp = v2082
    si = v2083
    di = v2084
    es = v2085
    cs = v2086
    ss = v2087
    ds = v2088
    fs = v2089
    gs = v2090
    cf = v2091
    ?1 = v2092
    pf = v2093
    ?3 = v2094
    af = v2095
    ?5 = v2096
    zf = v2097
    sf = v2098
    tf = v2099
    if = v2100
    df = v2101
    of = v2102
    iopl0 = v2103
    iopl1 = v2104
    nt = v2105
    ?15 = v2106
    memory = {
        size=4; addr=v2081-0x4 [from 0x8048316:push   0x00000010]; value=0x10 [from 0x8048316:push   0x00000010]
    }
    ip = 0x80482e0 [from 0x804831b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048320:jmp    DWORD PTR ds:[0x080496e0]
    ax = v2237
    cx = v2238
    dx = v2239
    bx = v2240
    sp = v2241
    bp = v2242
    si = v2243
    di = v2244
    es = v2245
    cs = v2246
    ss = v2247
    ds = v2248
    fs = v2249
    gs = v2250
    cf = v2251
    ?1 = v2252
    pf = v2253
    ?3 = v2254
    af = v2255
    ?5 = v2256
    zf = v2257
    sf = v2258
    tf = v2259
    if = v2260
    df = v2261
    of = v2262
    iopl0 = v2263
    iopl1 = v2264
    nt = v2265
    ?15 = v2266
    memory = {}
    ip = v2270 [from 0x8048320:jmp    DWORD PTR ds:[0x080496e0]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048326:push   0x00000018
    ax = v2332
    cx = v2333
    dx = v2334
    bx = v2335
    sp = v2336-0x4 [from 0x8048326:push   0x00000018]
    bp = v2337
    si = v2338
    di = v2339
    es = v2340
    cs = v2341
    ss = v2342
    ds = v2343
    fs = v2344
    gs = v2345
    cf = v2346
    ?1 = v2347
    pf = v2348
    ?3 = v2349
    af = v2350
    ?5 = v2351
    zf = v2352
    sf = v2353
    tf = v2354
    if = v2355
    df = v2356
    of = v2357
    iopl0 = v2358
    iopl1 = v2359
    nt = v2360
    ?15 = v2361
    memory = {
        size=4; addr=v2336-0x4 [from 0x8048326:push   0x00000018]; value=0x18 [from 0x8048326:push   0x00000018]
    }
    ip = 0x804832b [from 0x8048326:push   0x00000018]
0x804832b:jmp    0x080482e0
    ax = v2332
    cx = v2333
    dx = v2334
    bx = v2335
    sp = v2336-0x4 [from 0x8048326:push   0x00000018]
    bp = v2337
    si = v2338
    di = v2339
    es = v2340
    cs = v2341
    ss = v2342
    ds = v2343
    fs = v2344
    gs = v2345
    cf = v2346
    ?1 = v2347
    pf = v2348
    ?3 = v2349
    af = v2350
    ?5 = v2351
    zf = v2352
    sf = v2353
    tf = v2354
    if = v2355
    df = v2356
    of = v2357
    iopl0 = v2358
    iopl1 = v2359
    nt = v2360
    ?15 = v2361
    memory = {
        size=4; addr=v2336-0x4 [from 0x8048326:push   0x00000018]; value=0x18 [from 0x8048326:push   0x00000018]
    }
    ip = 0x80482e0 [from 0x804832b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048330:jmp    DWORD PTR ds:[0x080496e4]
    ax = v2492
    cx = v2493
    dx = v2494
    bx = v2495
    sp = v2496
    bp = v2497
    si = v2498
    di = v2499
    es = v2500
    cs = v2501
    ss = v2502
    ds = v2503
    fs = v2504
    gs = v2505
    cf = v2506
    ?1 = v2507
    pf = v2508
    ?3 = v2509
    af = v2510
    ?5 = v2511
    zf = v2512
    sf = v2513
    tf = v2514
    if = v2515
    df = v2516
    of = v2517
    iopl0 = v2518
    iopl1 = v2519
    nt = v2520
    ?15 = v2521
    memory = {}
    ip = v2525 [from 0x8048330:jmp    DWORD PTR ds:[0x080496e4]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048336:push   0x00000020
    ax = v2587
    cx = v2588
    dx = v2589
    bx = v2590
    sp = v2591-0x4 [from 0x8048336:push   0x00000020]
    bp = v2592
    si = v2593
    di = v2594
    es = v2595
    cs = v2596
    ss = v2597
    ds = v2598
    fs = v2599
    gs = v2600
    cf = v2601
    ?1 = v2602
    pf = v2603
    ?3 = v2604
    af = v2605
    ?5 = v2606
    zf = v2607
    sf = v2608
    tf = v2609
    if = v2610
    df = v2611
    of = v2612
    iopl0 = v2613
    iopl1 = v2614
    nt = v2615
    ?15 = v2616
    memory = {
        size=4; addr=v2591-0x4 [from 0x8048336:push   0x00000020]; value=0x20 [from 0x8048336:push   0x00000020]
    }
    ip = 0x804833b [from 0x8048336:push   0x00000020]
0x804833b:jmp    0x080482e0
    ax = v2587
    cx = v2588
    dx = v2589
    bx = v2590
    sp = v2591-0x4 [from 0x8048336:push   0x00000020]
    bp = v2592
    si = v2593
    di = v2594
    es = v2595
    cs = v2596
    ss = v2597
    ds = v2598
    fs = v2599
    gs = v2600
    cf = v2601
    ?1 = v2602
    pf = v2603
    ?3 = v2604
    af = v2605
    ?5 = v2606
    zf = v2607
    sf = v2608
    tf = v2609
    if = v2610
    df = v2611
    of = v2612
    iopl0 = v2613
    iopl1 = v2614
    nt = v2615
    ?15 = v2616
    memory = {
        size=4; addr=v2591-0x4 [from 0x8048336:push   0x00000020]; value=0x20 [from 0x8048336:push   0x00000020]
    }
    ip = 0x80482e0 [from 0x804833b:jmp    0x080482e0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048340:xor    ebp, ebp
    ax = v2747
    cx = v2748
    dx = v2749
    bx = v2750
    sp = v2751
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2753
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2762
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {}
    ip = 0x8048342 [from 0x8048340:xor    ebp, ebp]
0x8048342:pop    esi
    ax = v2747
    cx = v2748
    dx = v2749
    bx = v2750
    sp = v2751+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2762
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {}
    ip = 0x8048343 [from 0x8048342:pop    esi]
0x8048343:mov    ecx, esp
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2751+0x4 [from 0x8048342:pop    esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048340:xor    ebp, ebp]
    ?1 = v2762
    pf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = 0x1 (-0x1) [from 0x8048340:xor    ebp, ebp]
    sf = 0x0 [from 0x8048340:xor    ebp, ebp]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048340:xor    ebp, ebp]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {}
    ip = 0x8048345 [from 0x8048343:mov    ecx, esp]
0x8048345:and    esp, 0xf0<-0x10>
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902 [from 0x8048345:and    esp, 0xf0<-0x10>]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {}
    ip = 0x8048348 [from 0x8048345:and    esp, 0xf0<-0x10>]
0x8048348:push   eax
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x4 [from 0x8048348:push   eax]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048349 [from 0x8048348:push   eax]
0x8048349:push   esp
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x8 [from 0x8048349:push   esp]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x804834a [from 0x8048349:push   esp]
0x804834a:push   edx
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0xc [from 0x804834a:push   edx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x804834b [from 0x804834a:push   edx]
0x804834b:push   0x08048520
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x10 [from 0x804834b:push   0x08048520]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048350 [from 0x804834b:push   0x08048520]
0x8048350:push   0x080484b0
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x14 [from 0x8048350:push   0x080484b0]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048355 [from 0x8048350:push   0x080484b0]
0x8048355:push   ecx
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x18 [from 0x8048355:push   ecx]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x18 [from 0x8048355:push   ecx]; value=v2751+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048356 [from 0x8048355:push   ecx]
0x8048356:push   esi
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x1c [from 0x8048356:push   esi]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x1c [from 0x8048356:push   esi]; value=v2836 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x18 [from 0x8048355:push   ecx]; value=v2751+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048357 [from 0x8048356:push   esi]
0x8048357:push   0x08048410
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x20 [from 0x8048357:push   0x08048410]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v2902-0x1c [from 0x8048356:push   esi]; value=v2836 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x18 [from 0x8048355:push   ecx]; value=v2751+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x804835c [from 0x8048357:push   0x08048410]
0x804835c:call   0x08048310
    ax = v2747
    cx = v2751+0x4 [from 0x8048342:pop    esi]
    dx = v2749
    bx = v2750
    sp = v2902-0x24 [from 0x804835c:call   0x08048310]
    bp = 0x0 [from 0x8048340:xor    ebp, ebp]
    si = v2836 [from 0x8048342:pop    esi]
    di = v2754
    es = v2755
    cs = v2756
    ss = v2757
    ds = v2758
    fs = v2759
    gs = v2760
    cf = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?1 = v2762
    pf = -v2918-0x1 [from 0x8048345:and    esp, 0xf0<-0x10>]
    ?3 = v2764
    af = <top>
    ?5 = v2766
    zf = v2921 [from 0x8048345:and    esp, 0xf0<-0x10>]
    sf = v2920 [from 0x8048345:and    esp, 0xf0<-0x10>]
    tf = v2769
    if = v2770
    df = v2771
    of = 0x0 [from 0x8048345:and    esp, 0xf0<-0x10>]
    iopl0 = v2773
    iopl1 = v2774
    nt = v2775
    ?15 = v2776
    memory = {
        size=4; addr=v2902-0x24 [from 0x804835c:call   0x08048310]; value=0x8048361 [from 0x804835c:call   0x08048310]
        size=4; addr=v2902-0x20 [from 0x8048357:push   0x08048410]; value=0x8048410 [from 0x8048357:push   0x08048410]
        size=4; addr=v2902-0x1c [from 0x8048356:push   esi]; value=v2836 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x18 [from 0x8048355:push   ecx]; value=v2751+0x4 [from 0x8048342:pop    esi]
        size=4; addr=v2902-0x14 [from 0x8048350:push   0x080484b0]; value=0x80484b0 [from 0x8048350:push   0x080484b0]
        size=4; addr=v2902-0x10 [from 0x804834b:push   0x08048520]; value=0x8048520 [from 0x804834b:push   0x08048520]
        size=4; addr=v2902-0xc [from 0x804834a:push   edx]; value=v2749
        size=4; addr=v2902-0x8 [from 0x8048349:push   esp]; value=v2902-0x4 [from 0x8048348:push   eax]
        size=4; addr=v2902-0x4 [from 0x8048348:push   eax]; value=v2747
    }
    ip = 0x8048310 [from 0x804835c:call   0x08048310]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048361:hlt    
    ax = v3434
    cx = v3435
    dx = v3436
    bx = v3437
    sp = v3438
    bp = v3439
    si = v3440
    di = v3441
    es = v3442
    cs = v3443
    ss = v3444
    ds = v3445
    fs = v3446
    gs = v3447
    cf = v3448
    ?1 = v3449
    pf = v3450
    ?3 = v3451
    af = v3452
    ?5 = v3453
    zf = v3454
    sf = v3455
    tf = v3456
    if = v3457
    df = v3458
    of = v3459
    iopl0 = v3460
    iopl1 = v3461
    nt = v3462
    ?15 = v3463
    memory = {}
    ip = 0x8048361 [from 0x8048361:hlt    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048362:nop    
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531
    bp = v3532
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {}
    ip = 0x8048363 [from 0x8048362:nop    ]
0x8048363:nop    
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531
    bp = v3532
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {}
    ip = 0x8048364 [from 0x8048363:nop    ]
0x8048364:push   ebp
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0x4 [from 0x8048364:push   ebp]
    bp = v3532
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x8048365 [from 0x8048364:push   ebp]
0x8048365:mov    ebp, esp
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0x4 [from 0x8048364:push   ebp]
    bp = v3531-0x4 [from 0x8048364:push   ebp]
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x8048367 [from 0x8048365:mov    ebp, esp]
0x8048367:push   ebx
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0x8 [from 0x8048367:push   ebx]
    bp = v3531-0x4 [from 0x8048364:push   ebp]
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0x8 [from 0x8048367:push   ebx]; value=v3530
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x8048368 [from 0x8048367:push   ebx]
0x8048368:push   ecx
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0xc [from 0x8048368:push   ecx]
    bp = v3531-0x4 [from 0x8048364:push   ebp]
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0xc [from 0x8048368:push   ecx]; value=v3528
        size=4; addr=v3531-0x8 [from 0x8048367:push   ebx]; value=v3530
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x8048369 [from 0x8048368:push   ecx]
0x8048369:call   0x0804836e
    ax = v3527
    cx = v3528
    dx = v3529
    bx = v3530
    sp = v3531-0x10 [from 0x8048369:call   0x0804836e]
    bp = v3531-0x4 [from 0x8048364:push   ebp]
    si = v3533
    di = v3534
    es = v3535
    cs = v3536
    ss = v3537
    ds = v3538
    fs = v3539
    gs = v3540
    cf = v3541
    ?1 = v3542
    pf = v3543
    ?3 = v3544
    af = v3545
    ?5 = v3546
    zf = v3547
    sf = v3548
    tf = v3549
    if = v3550
    df = v3551
    of = v3552
    iopl0 = v3553
    iopl1 = v3554
    nt = v3555
    ?15 = v3556
    memory = {
        size=4; addr=v3531-0x10 [from 0x8048369:call   0x0804836e]; value=0x804836e [from 0x8048369:call   0x0804836e]
        size=4; addr=v3531-0xc [from 0x8048368:push   ecx]; value=v3528
        size=4; addr=v3531-0x8 [from 0x8048367:push   ebx]; value=v3530
        size=4; addr=v3531-0x4 [from 0x8048364:push   ebp]; value=v3532
    }
    ip = 0x804836e [from 0x8048369:call   0x0804836e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804836e:pop    ebx
    ax = v3858
    cx = v3859
    dx = v3860
    bx = v3892 [from 0x804836e:pop    ebx]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = v3872
    ?1 = v3873
    pf = v3874
    ?3 = v3875
    af = v3876
    ?5 = v3877
    zf = v3878
    sf = v3879
    tf = v3880
    if = v3881
    df = v3882
    of = v3883
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = 0x804836f [from 0x804836e:pop    ebx]
0x804836f:add    ebx, 0x0000135a
    ax = v3858
    cx = v3859
    dx = v3860
    bx = v3892+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = v3954 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v3873
    pf = -v3949-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v3875
    af = v3953 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v3877
    zf = v3952 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v3951 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v3880
    if = v3881
    df = v3882
    of = v3957 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = 0x8048375 [from 0x804836f:add    ebx, 0x0000135a]
0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]
    ax = v3858
    cx = v3859
    dx = v3993 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3892+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = v3954 [from 0x804836f:add    ebx, 0x0000135a]
    ?1 = v3873
    pf = -v3949-0x1 [from 0x804836f:add    ebx, 0x0000135a]
    ?3 = v3875
    af = v3953 [from 0x804836f:add    ebx, 0x0000135a]
    ?5 = v3877
    zf = v3952 [from 0x804836f:add    ebx, 0x0000135a]
    sf = v3951 [from 0x804836f:add    ebx, 0x0000135a]
    tf = v3880
    if = v3881
    df = v3882
    of = v3957 [from 0x804836f:add    ebx, 0x0000135a]
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = 0x804837b [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
0x804837b:test   edx, edx
    ax = v3858
    cx = v3859
    dx = v3993 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3892+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v3873
    pf = -v4042-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v3875
    af = <top>
    ?5 = v3877
    zf = v4045 [from 0x804837b:test   edx, edx]
    sf = v4044 [from 0x804837b:test   edx, edx]
    tf = v3880
    if = v3881
    df = v3882
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = 0x804837d [from 0x804837b:test   edx, edx]
0x804837d:je     0x08048384
    ax = v3858
    cx = v3859
    dx = v3993 [from 0x8048375:mov    edx, DWORD PTR ds:[ebx + 0xfffffffc<-0x00000004>]]
    bx = v3892+0x135a [from 0x804836f:add    ebx, 0x0000135a]
    sp = v3862+0x4 [from 0x804836e:pop    ebx]
    bp = v3863
    si = v3864
    di = v3865
    es = v3866
    cs = v3867
    ss = v3868
    ds = v3869
    fs = v3870
    gs = v3871
    cf = 0x0 [from 0x804837b:test   edx, edx]
    ?1 = v3873
    pf = -v4042-0x1 [from 0x804837b:test   edx, edx]
    ?3 = v3875
    af = <top>
    ?5 = v3877
    zf = v4045 [from 0x804837b:test   edx, edx]
    sf = v4044 [from 0x804837b:test   edx, edx]
    tf = v3880
    if = v3881
    df = v3882
    of = 0x0 [from 0x804837b:test   edx, edx]
    iopl0 = v3884
    iopl1 = v3885
    nt = v3886
    ?15 = v3887
    memory = {}
    ip = v4082 [from 0x804837d:je     0x08048384]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804837f:call   0x08048330
    ax = v4204
    cx = v4205
    dx = v4206
    bx = v4207
    sp = v4208-0x4 [from 0x804837f:call   0x08048330]
    bp = v4209
    si = v4210
    di = v4211
    es = v4212
    cs = v4213
    ss = v4214
    ds = v4215
    fs = v4216
    gs = v4217
    cf = v4218
    ?1 = v4219
    pf = v4220
    ?3 = v4221
    af = v4222
    ?5 = v4223
    zf = v4224
    sf = v4225
    tf = v4226
    if = v4227
    df = v4228
    of = v4229
    iopl0 = v4230
    iopl1 = v4231
    nt = v4232
    ?15 = v4233
    memory = {
        size=4; addr=v4208-0x4 [from 0x804837f:call   0x08048330]; value=0x8048384 [from 0x804837f:call   0x08048330]
    }
    ip = 0x8048330 [from 0x804837f:call   0x08048330]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048384:pop    eax
    ax = v4455 [from 0x8048384:pop    eax]
    cx = v4422
    dx = v4423
    bx = v4424
    sp = v4425+0x4 [from 0x8048384:pop    eax]
    bp = v4426
    si = v4427
    di = v4428
    es = v4429
    cs = v4430
    ss = v4431
    ds = v4432
    fs = v4433
    gs = v4434
    cf = v4435
    ?1 = v4436
    pf = v4437
    ?3 = v4438
    af = v4439
    ?5 = v4440
    zf = v4441
    sf = v4442
    tf = v4443
    if = v4444
    df = v4445
    of = v4446
    iopl0 = v4447
    iopl1 = v4448
    nt = v4449
    ?15 = v4450
    memory = {}
    ip = 0x8048385 [from 0x8048384:pop    eax]
0x8048385:pop    ebx
    ax = v4455 [from 0x8048384:pop    eax]
    cx = v4422
    dx = v4423
    bx = v4491 [from 0x8048385:pop    ebx]
    sp = v4425+0x8 [from 0x8048385:pop    ebx]
    bp = v4426
    si = v4427
    di = v4428
    es = v4429
    cs = v4430
    ss = v4431
    ds = v4432
    fs = v4433
    gs = v4434
    cf = v4435
    ?1 = v4436
    pf = v4437
    ?3 = v4438
    af = v4439
    ?5 = v4440
    zf = v4441
    sf = v4442
    tf = v4443
    if = v4444
    df = v4445
    of = v4446
    iopl0 = v4447
    iopl1 = v4448
    nt = v4449
    ?15 = v4450
    memory = {}
    ip = 0x8048386 [from 0x8048385:pop    ebx]
0x8048386:leave  
    ax = v4455 [from 0x8048384:pop    eax]
    cx = v4422
    dx = v4423
    bx = v4491 [from 0x8048385:pop    ebx]
    sp = v4426+0x4 [from 0x8048386:leave  ]
    bp = v4527 [from 0x8048386:leave  ]
    si = v4427
    di = v4428
    es = v4429
    cs = v4430
    ss = v4431
    ds = v4432
    fs = v4433
    gs = v4434
    cf = v4435
    ?1 = v4436
    pf = v4437
    ?3 = v4438
    af = v4439
    ?5 = v4440
    zf = v4441
    sf = v4442
    tf = v4443
    if = v4444
    df = v4445
    of = v4446
    iopl0 = v4447
    iopl1 = v4448
    nt = v4449
    ?15 = v4450
    memory = {}
    ip = 0x8048387 [from 0x8048386:leave  ]
0x8048387:ret    
    ax = v4455 [from 0x8048384:pop    eax]
    cx = v4422
    dx = v4423
    bx = v4491 [from 0x8048385:pop    ebx]
    sp = v4426+0x8 [from 0x8048387:ret    ]
    bp = v4527 [from 0x8048386:leave  ]
    si = v4427
    di = v4428
    es = v4429
    cs = v4430
    ss = v4431
    ds = v4432
    fs = v4433
    gs = v4434
    cf = v4435
    ?1 = v4436
    pf = v4437
    ?3 = v4438
    af = v4439
    ?5 = v4440
    zf = v4441
    sf = v4442
    tf = v4443
    if = v4444
    df = v4445
    of = v4446
    iopl0 = v4447
    iopl1 = v4448
    nt = v4449
    ?15 = v4450
    memory = {}
    ip = v4565 [from 0x8048387:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048388:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x8048389 [from 0x8048388:nop    ]
0x8048389:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838a [from 0x8048389:nop    ]
0x804838a:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838b [from 0x804838a:nop    ]
0x804838b:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838c [from 0x804838b:nop    ]
0x804838c:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838d [from 0x804838c:nop    ]
0x804838d:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838e [from 0x804838d:nop    ]
0x804838e:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x804838f [from 0x804838e:nop    ]
0x804838f:nop    
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {}
    ip = 0x8048390 [from 0x804838f:nop    ]
0x8048390:push   ebp
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0x4 [from 0x8048390:push   ebp]
    bp = v4632
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = 0x8048391 [from 0x8048390:push   ebp]
0x8048391:mov    ebp, esp
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0x4 [from 0x8048390:push   ebp]
    bp = v4631-0x4 [from 0x8048390:push   ebp]
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = v4641
    ?1 = v4642
    pf = v4643
    ?3 = v4644
    af = v4645
    ?5 = v4646
    zf = v4647
    sf = v4648
    tf = v4649
    if = v4650
    df = v4651
    of = v4652
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = 0x8048393 [from 0x8048391:mov    ebp, esp]
0x8048393:sub    esp, 0x08
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4631-0x4 [from 0x8048390:push   ebp]
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = -v5014-0x1 [from 0x8048393:sub    esp, 0x08]
    ?1 = v4642
    pf = -v5008-0x1 [from 0x8048393:sub    esp, 0x08]
    ?3 = v4644
    af = -v5012-0x1 [from 0x8048393:sub    esp, 0x08]
    ?5 = v4646
    zf = v5011 [from 0x8048393:sub    esp, 0x08]
    sf = v5010 [from 0x8048393:sub    esp, 0x08]
    tf = v4649
    if = v4650
    df = v4651
    of = v5018 [from 0x8048393:sub    esp, 0x08]
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = 0x8048396 [from 0x8048393:sub    esp, 0x08]
0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4631-0x4 [from 0x8048390:push   ebp]
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = -v5086-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v4642
    pf = -v5080-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v4644
    af = -v5084-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v4646
    zf = v5083 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v5082 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v4649
    if = v4650
    df = v4651
    of = v5090 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = 0x804839d [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
0x804839d:jne    0x080483cc
    ax = v4627
    cx = v4628
    dx = v4629
    bx = v4630
    sp = v4631-0xc [from 0x8048393:sub    esp, 0x08]
    bp = v4631-0x4 [from 0x8048390:push   ebp]
    si = v4633
    di = v4634
    es = v4635
    cs = v4636
    ss = v4637
    ds = v4638
    fs = v4639
    gs = v4640
    cf = -v5086-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?1 = v4642
    pf = -v5080-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?3 = v4644
    af = -v5084-0x1 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    ?5 = v4646
    zf = v5083 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    sf = v5082 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    tf = v4649
    if = v4650
    df = v4651
    of = v5090 [from 0x8048396:cmp    BYTE PTR ds:[0x080496f4], 0x00]
    iopl0 = v4653
    iopl1 = v4654
    nt = v4655
    ?15 = v4656
    memory = {
        size=4; addr=v4631-0x4 [from 0x8048390:push   ebp]; value=v4632
    }
    ip = v5125 [from 0x804839d:jne    0x080483cc]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v5280 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5248
    dx = v5249
    bx = v5250
    sp = v5251
    bp = v5252
    si = v5253
    di = v5254
    es = v5255
    cs = v5256
    ss = v5257
    ds = v5258
    fs = v5259
    gs = v5260
    cf = v5261
    ?1 = v5262
    pf = v5263
    ?3 = v5264
    af = v5265
    ?5 = v5266
    zf = v5267
    sf = v5268
    tf = v5269
    if = v5270
    df = v5271
    of = v5272
    iopl0 = v5273
    iopl1 = v5274
    nt = v5275
    ?15 = v5276
    memory = {}
    ip = 0x80483a4 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483a4:mov    edx, DWORD PTR ds:[eax]
    ax = v5280 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5248
    dx = v5314 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v5250
    sp = v5251
    bp = v5252
    si = v5253
    di = v5254
    es = v5255
    cs = v5256
    ss = v5257
    ds = v5258
    fs = v5259
    gs = v5260
    cf = v5261
    ?1 = v5262
    pf = v5263
    ?3 = v5264
    af = v5265
    ?5 = v5266
    zf = v5267
    sf = v5268
    tf = v5269
    if = v5270
    df = v5271
    of = v5272
    iopl0 = v5273
    iopl1 = v5274
    nt = v5275
    ?15 = v5276
    memory = {}
    ip = 0x80483a6 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
0x80483a6:test   edx, edx
    ax = v5280 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5248
    dx = v5314 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v5250
    sp = v5251
    bp = v5252
    si = v5253
    di = v5254
    es = v5255
    cs = v5256
    ss = v5257
    ds = v5258
    fs = v5259
    gs = v5260
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v5262
    pf = -v5363-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v5264
    af = <top>
    ?5 = v5266
    zf = v5366 [from 0x80483a6:test   edx, edx]
    sf = v5365 [from 0x80483a6:test   edx, edx]
    tf = v5269
    if = v5270
    df = v5271
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v5273
    iopl1 = v5274
    nt = v5275
    ?15 = v5276
    memory = {}
    ip = 0x80483a8 [from 0x80483a6:test   edx, edx]
0x80483a8:je     0x080483c5
    ax = v5280 [from 0x804839f:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5248
    dx = v5314 [from 0x80483a4:mov    edx, DWORD PTR ds:[eax]]
    bx = v5250
    sp = v5251
    bp = v5252
    si = v5253
    di = v5254
    es = v5255
    cs = v5256
    ss = v5257
    ds = v5258
    fs = v5259
    gs = v5260
    cf = 0x0 [from 0x80483a6:test   edx, edx]
    ?1 = v5262
    pf = -v5363-0x1 [from 0x80483a6:test   edx, edx]
    ?3 = v5264
    af = <top>
    ?5 = v5266
    zf = v5366 [from 0x80483a6:test   edx, edx]
    sf = v5365 [from 0x80483a6:test   edx, edx]
    tf = v5269
    if = v5270
    df = v5271
    of = 0x0 [from 0x80483a6:test   edx, edx]
    iopl0 = v5273
    iopl1 = v5274
    nt = v5275
    ?15 = v5276
    memory = {}
    ip = v5403 [from 0x80483a8:je     0x080483c5]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483aa:lea    esi, [esi + 0x00000000]
    ax = v5525
    cx = v5526
    dx = v5527
    bx = v5528
    sp = v5529
    bp = v5530
    si = v5531 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5532
    es = v5533
    cs = v5534
    ss = v5535
    ds = v5536
    fs = v5537
    gs = v5538
    cf = v5539
    ?1 = v5540
    pf = v5541
    ?3 = v5542
    af = v5543
    ?5 = v5544
    zf = v5545
    sf = v5546
    tf = v5547
    if = v5548
    df = v5549
    of = v5550
    iopl0 = v5551
    iopl1 = v5552
    nt = v5553
    ?15 = v5554
    memory = {}
    ip = 0x80483b0 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
0x80483b0:add    eax, 0x04
    ax = v5525+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5526
    dx = v5527
    bx = v5528
    sp = v5529
    bp = v5530
    si = v5531 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5532
    es = v5533
    cs = v5534
    ss = v5535
    ds = v5536
    fs = v5537
    gs = v5538
    cf = v5619 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5540
    pf = -v5614-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5542
    af = v5618 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5544
    zf = v5617 [from 0x80483b0:add    eax, 0x04]
    sf = v5616 [from 0x80483b0:add    eax, 0x04]
    tf = v5547
    if = v5548
    df = v5549
    of = v5622 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5551
    iopl1 = v5552
    nt = v5553
    ?15 = v5554
    memory = {}
    ip = 0x80483b3 [from 0x80483b0:add    eax, 0x04]
0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax
    ax = v5525+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5526
    dx = v5527
    bx = v5528
    sp = v5529
    bp = v5530
    si = v5531 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5532
    es = v5533
    cs = v5534
    ss = v5535
    ds = v5536
    fs = v5537
    gs = v5538
    cf = v5619 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5540
    pf = -v5614-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5542
    af = v5618 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5544
    zf = v5617 [from 0x80483b0:add    eax, 0x04]
    sf = v5616 [from 0x80483b0:add    eax, 0x04]
    tf = v5547
    if = v5548
    df = v5549
    of = v5622 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5551
    iopl1 = v5552
    nt = v5553
    ?15 = v5554
    memory = {
        size=4; addr=0x80496f0 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]; value=v5525+0x4 [from 0x80483b0:add    eax, 0x04]
    }
    ip = 0x80483b8 [from 0x80483b3:mov    DWORD PTR ds:[0x080496f0], eax]
0x80483b8:call   edx
    ax = v5525+0x4 [from 0x80483b0:add    eax, 0x04]
    cx = v5526
    dx = v5527
    bx = v5528
    sp = v5529-0x4 [from 0x80483b8:call   edx]
    bp = v5530
    si = v5531 [from 0x80483aa:lea    esi, [esi + 0x00000000]]
    di = v5532
    es = v5533
    cs = v5534
    ss = v5535
    ds = v5536
    fs = v5537
    gs = v5538
    cf = v5619 [from 0x80483b0:add    eax, 0x04]
    ?1 = v5540
    pf = -v5614-0x1 [from 0x80483b0:add    eax, 0x04]
    ?3 = v5542
    af = v5618 [from 0x80483b0:add    eax, 0x04]
    ?5 = v5544
    zf = v5617 [from 0x80483b0:add    eax, 0x04]
    sf = v5616 [from 0x80483b0:add    eax, 0x04]
    tf = v5547
    if = v5548
    df = v5549
    of = v5622 [from 0x80483b0:add    eax, 0x04]
    iopl0 = v5551
    iopl1 = v5552
    nt = v5553
    ?15 = v5554
    memory = {
        size=4; addr=v5529-0x4 [from 0x80483b8:call   edx]; value=0x80483ba [from 0x80483b8:call   edx]
    }
    ip = v5527
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]
    ax = v5878 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5846
    dx = v5847
    bx = v5848
    sp = v5849
    bp = v5850
    si = v5851
    di = v5852
    es = v5853
    cs = v5854
    ss = v5855
    ds = v5856
    fs = v5857
    gs = v5858
    cf = v5859
    ?1 = v5860
    pf = v5861
    ?3 = v5862
    af = v5863
    ?5 = v5864
    zf = v5865
    sf = v5866
    tf = v5867
    if = v5868
    df = v5869
    of = v5870
    iopl0 = v5871
    iopl1 = v5872
    nt = v5873
    ?15 = v5874
    memory = {}
    ip = 0x80483bf [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
0x80483bf:mov    edx, DWORD PTR ds:[eax]
    ax = v5878 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5846
    dx = v5912 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5848
    sp = v5849
    bp = v5850
    si = v5851
    di = v5852
    es = v5853
    cs = v5854
    ss = v5855
    ds = v5856
    fs = v5857
    gs = v5858
    cf = v5859
    ?1 = v5860
    pf = v5861
    ?3 = v5862
    af = v5863
    ?5 = v5864
    zf = v5865
    sf = v5866
    tf = v5867
    if = v5868
    df = v5869
    of = v5870
    iopl0 = v5871
    iopl1 = v5872
    nt = v5873
    ?15 = v5874
    memory = {}
    ip = 0x80483c1 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
0x80483c1:test   edx, edx
    ax = v5878 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5846
    dx = v5912 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5848
    sp = v5849
    bp = v5850
    si = v5851
    di = v5852
    es = v5853
    cs = v5854
    ss = v5855
    ds = v5856
    fs = v5857
    gs = v5858
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v5860
    pf = -v5961-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v5862
    af = <top>
    ?5 = v5864
    zf = v5964 [from 0x80483c1:test   edx, edx]
    sf = v5963 [from 0x80483c1:test   edx, edx]
    tf = v5867
    if = v5868
    df = v5869
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v5871
    iopl1 = v5872
    nt = v5873
    ?15 = v5874
    memory = {}
    ip = 0x80483c3 [from 0x80483c1:test   edx, edx]
0x80483c3:jne    0x080483b0
    ax = v5878 [from 0x80483ba:mov    eax, DWORD PTR ds:[0x080496f0]]
    cx = v5846
    dx = v5912 [from 0x80483bf:mov    edx, DWORD PTR ds:[eax]]
    bx = v5848
    sp = v5849
    bp = v5850
    si = v5851
    di = v5852
    es = v5853
    cs = v5854
    ss = v5855
    ds = v5856
    fs = v5857
    gs = v5858
    cf = 0x0 [from 0x80483c1:test   edx, edx]
    ?1 = v5860
    pf = -v5961-0x1 [from 0x80483c1:test   edx, edx]
    ?3 = v5862
    af = <top>
    ?5 = v5864
    zf = v5964 [from 0x80483c1:test   edx, edx]
    sf = v5963 [from 0x80483c1:test   edx, edx]
    tf = v5867
    if = v5868
    df = v5869
    of = 0x0 [from 0x80483c1:test   edx, edx]
    iopl0 = v5871
    iopl1 = v5872
    nt = v5873
    ?15 = v5874
    memory = {}
    ip = v6002 [from 0x80483c3:jne    0x080483b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01
    ax = v6124
    cx = v6125
    dx = v6126
    bx = v6127
    sp = v6128
    bp = v6129
    si = v6130
    di = v6131
    es = v6132
    cs = v6133
    ss = v6134
    ds = v6135
    fs = v6136
    gs = v6137
    cf = v6138
    ?1 = v6139
    pf = v6140
    ?3 = v6141
    af = v6142
    ?5 = v6143
    zf = v6144
    sf = v6145
    tf = v6146
    if = v6147
    df = v6148
    of = v6149
    iopl0 = v6150
    iopl1 = v6151
    nt = v6152
    ?15 = v6153
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cc [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
0x80483cc:leave  
    ax = v6124
    cx = v6125
    dx = v6126
    bx = v6127
    sp = v6129+0x4 [from 0x80483cc:leave  ]
    bp = v6194 [from 0x80483cc:leave  ]
    si = v6130
    di = v6131
    es = v6132
    cs = v6133
    ss = v6134
    ds = v6135
    fs = v6136
    gs = v6137
    cf = v6138
    ?1 = v6139
    pf = v6140
    ?3 = v6141
    af = v6142
    ?5 = v6143
    zf = v6144
    sf = v6145
    tf = v6146
    if = v6147
    df = v6148
    of = v6149
    iopl0 = v6150
    iopl1 = v6151
    nt = v6152
    ?15 = v6153
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = 0x80483cd [from 0x80483cc:leave  ]
0x80483cd:ret    
    ax = v6124
    cx = v6125
    dx = v6126
    bx = v6127
    sp = v6129+0x8 [from 0x80483cd:ret    ]
    bp = v6194 [from 0x80483cc:leave  ]
    si = v6130
    di = v6131
    es = v6132
    cs = v6133
    ss = v6134
    ds = v6135
    fs = v6136
    gs = v6137
    cf = v6138
    ?1 = v6139
    pf = v6140
    ?3 = v6141
    af = v6142
    ?5 = v6143
    zf = v6144
    sf = v6145
    tf = v6146
    if = v6147
    df = v6148
    of = v6149
    iopl0 = v6150
    iopl1 = v6151
    nt = v6152
    ?15 = v6153
    memory = {
        size=1; addr=0x80496f4 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]; value=0x1 [from 0x80483c5:mov    BYTE PTR ds:[0x080496f4], 0x01]
    }
    ip = v6232 [from 0x80483cd:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483ce:mov    esi, esi
    ax = v6294
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298
    bp = v6299
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = v6308
    ?1 = v6309
    pf = v6310
    ?3 = v6311
    af = v6312
    ?5 = v6313
    zf = v6314
    sf = v6315
    tf = v6316
    if = v6317
    df = v6318
    of = v6319
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {}
    ip = 0x80483d0 [from 0x80483ce:mov    esi, esi]
0x80483d0:push   ebp
    ax = v6294
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0x4 [from 0x80483d0:push   ebp]
    bp = v6299
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = v6308
    ?1 = v6309
    pf = v6310
    ?3 = v6311
    af = v6312
    ?5 = v6313
    zf = v6314
    sf = v6315
    tf = v6316
    if = v6317
    df = v6318
    of = v6319
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483d1 [from 0x80483d0:push   ebp]
0x80483d1:mov    ebp, esp
    ax = v6294
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0x4 [from 0x80483d0:push   ebp]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = v6308
    ?1 = v6309
    pf = v6310
    ?3 = v6311
    af = v6312
    ?5 = v6313
    zf = v6314
    sf = v6315
    tf = v6316
    if = v6317
    df = v6318
    of = v6319
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483d3 [from 0x80483d1:mov    ebp, esp]
0x80483d3:sub    esp, 0x08
    ax = v6294
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = -v6457-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v6309
    pf = -v6451-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v6311
    af = -v6455-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v6313
    zf = v6454 [from 0x80483d3:sub    esp, 0x08]
    sf = v6453 [from 0x80483d3:sub    esp, 0x08]
    tf = v6316
    if = v6317
    df = v6318
    of = v6461 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483d6 [from 0x80483d3:sub    esp, 0x08]
0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]
    ax = v6496 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = -v6457-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?1 = v6309
    pf = -v6451-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?3 = v6311
    af = -v6455-0x1 [from 0x80483d3:sub    esp, 0x08]
    ?5 = v6313
    zf = v6454 [from 0x80483d3:sub    esp, 0x08]
    sf = v6453 [from 0x80483d3:sub    esp, 0x08]
    tf = v6316
    if = v6317
    df = v6318
    of = v6461 [from 0x80483d3:sub    esp, 0x08]
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483db [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
0x80483db:test   eax, eax
    ax = v6496 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v6309
    pf = -v6545-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v6311
    af = <top>
    ?5 = v6313
    zf = v6548 [from 0x80483db:test   eax, eax]
    sf = v6547 [from 0x80483db:test   eax, eax]
    tf = v6316
    if = v6317
    df = v6318
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = 0x80483dd [from 0x80483db:test   eax, eax]
0x80483dd:je     0x08048400
    ax = v6496 [from 0x80483d6:mov    eax, DWORD PTR ds:[0x080495f8]]
    cx = v6295
    dx = v6296
    bx = v6297
    sp = v6298-0xc [from 0x80483d3:sub    esp, 0x08]
    bp = v6298-0x4 [from 0x80483d0:push   ebp]
    si = v6300
    di = v6301
    es = v6302
    cs = v6303
    ss = v6304
    ds = v6305
    fs = v6306
    gs = v6307
    cf = 0x0 [from 0x80483db:test   eax, eax]
    ?1 = v6309
    pf = -v6545-0x1 [from 0x80483db:test   eax, eax]
    ?3 = v6311
    af = <top>
    ?5 = v6313
    zf = v6548 [from 0x80483db:test   eax, eax]
    sf = v6547 [from 0x80483db:test   eax, eax]
    tf = v6316
    if = v6317
    df = v6318
    of = 0x0 [from 0x80483db:test   eax, eax]
    iopl0 = v6320
    iopl1 = v6321
    nt = v6322
    ?15 = v6323
    memory = {
        size=4; addr=v6298-0x4 [from 0x80483d0:push   ebp]; value=v6299
    }
    ip = v6585 [from 0x80483dd:je     0x08048400]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483df:mov    eax, 0x00000000
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6711
    bp = v6712
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = v6721
    ?1 = v6722
    pf = v6723
    ?3 = v6724
    af = v6725
    ?5 = v6726
    zf = v6727
    sf = v6728
    tf = v6729
    if = v6730
    df = v6731
    of = v6732
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x80483e4 [from 0x80483df:mov    eax, 0x00000000]
0x80483e4:test   eax, eax
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6711
    bp = v6712
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x80483e6 [from 0x80483e4:test   eax, eax]
0x80483e6:je     0x08048400
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6711
    bp = v6712
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x8048400 [from 0x80483e6:je     0x08048400]
0x8048400:mov    esp, ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6712
    bp = v6712
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x8048402 [from 0x8048400:mov    esp, ebp]
0x8048402:pop    ebp
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6712+0x4 [from 0x8048402:pop    ebp]
    bp = v6895 [from 0x8048402:pop    ebp]
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = 0x8048403 [from 0x8048402:pop    ebp]
0x8048403:ret    
    ax = 0x0 [from 0x80483df:mov    eax, 0x00000000]
    cx = v6708
    dx = v6709
    bx = v6710
    sp = v6712+0x8 [from 0x8048403:ret    ]
    bp = v6895 [from 0x8048402:pop    ebp]
    si = v6713
    di = v6714
    es = v6715
    cs = v6716
    ss = v6717
    ds = v6718
    fs = v6719
    gs = v6720
    cf = 0x0 [from 0x80483e4:test   eax, eax]
    ?1 = v6722
    pf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    ?3 = v6724
    af = <top>
    ?5 = v6726
    zf = 0x1 (-0x1) [from 0x80483e4:test   eax, eax]
    sf = 0x0 [from 0x80483e4:test   eax, eax]
    tf = v6729
    if = v6730
    df = v6731
    of = 0x0 [from 0x80483e4:test   eax, eax]
    iopl0 = v6733
    iopl1 = v6734
    nt = v6735
    ?15 = v6736
    memory = {}
    ip = v6933 [from 0x8048403:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v6999; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
    }
    ip = 0x80483ef [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
0x80483ef:call   0x00000000
    ax = v6995
    cx = v6996
    dx = v6997
    bx = v6998
    sp = v6999-0x4 [from 0x80483ef:call   0x00000000]
    bp = v7000
    si = v7001
    di = v7002
    es = v7003
    cs = v7004
    ss = v7005
    ds = v7006
    fs = v7007
    gs = v7008
    cf = v7009
    ?1 = v7010
    pf = v7011
    ?3 = v7012
    af = v7013
    ?5 = v7014
    zf = v7015
    sf = v7016
    tf = v7017
    if = v7018
    df = v7019
    of = v7020
    iopl0 = v7021
    iopl1 = v7022
    nt = v7023
    ?15 = v7024
    memory = {
        size=4; addr=v6999; value=0x80495f8 [from 0x80483e8:mov    DWORD PTR ss:[esp], 0x080495f8]
        size=4; addr=v6999-0x4 [from 0x80483ef:call   0x00000000]; value=0x80483f4 [from 0x80483ef:call   0x00000000]
    }
    ip = 0x0 [from 0x80483ef:call   0x00000000]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80483f4:lea    esi, [esi + 0x00000000]
    ax = v7247
    cx = v7248
    dx = v7249
    bx = v7250
    sp = v7251
    bp = v7252
    si = v7253 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v7254
    es = v7255
    cs = v7256
    ss = v7257
    ds = v7258
    fs = v7259
    gs = v7260
    cf = v7261
    ?1 = v7262
    pf = v7263
    ?3 = v7264
    af = v7265
    ?5 = v7266
    zf = v7267
    sf = v7268
    tf = v7269
    if = v7270
    df = v7271
    of = v7272
    iopl0 = v7273
    iopl1 = v7274
    nt = v7275
    ?15 = v7276
    memory = {}
    ip = 0x80483fa [from 0x80483f4:lea    esi, [esi + 0x00000000]]
0x80483fa:lea    edi, [edi + 0x00000000]
    ax = v7247
    cx = v7248
    dx = v7249
    bx = v7250
    sp = v7251
    bp = v7252
    si = v7253 [from 0x80483f4:lea    esi, [esi + 0x00000000]]
    di = v7254 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
    es = v7255
    cs = v7256
    ss = v7257
    ds = v7258
    fs = v7259
    gs = v7260
    cf = v7261
    ?1 = v7262
    pf = v7263
    ?3 = v7264
    af = v7265
    ?5 = v7266
    zf = v7267
    sf = v7268
    tf = v7269
    if = v7270
    df = v7271
    of = v7272
    iopl0 = v7273
    iopl1 = v7274
    nt = v7275
    ?15 = v7276
    memory = {}
    ip = 0x8048400 [from 0x80483fa:lea    edi, [edi + 0x00000000]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048404:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x8048405 [from 0x8048404:nop    ]
0x8048405:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x8048406 [from 0x8048405:nop    ]
0x8048406:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x8048407 [from 0x8048406:nop    ]
0x8048407:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x8048408 [from 0x8048407:nop    ]
0x8048408:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x8048409 [from 0x8048408:nop    ]
0x8048409:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x804840a [from 0x8048409:nop    ]
0x804840a:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x804840b [from 0x804840a:nop    ]
0x804840b:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x804840c [from 0x804840b:nop    ]
0x804840c:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x804840d [from 0x804840c:nop    ]
0x804840d:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x804840e [from 0x804840d:nop    ]
0x804840e:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x804840f [from 0x804840e:nop    ]
0x804840f:nop    
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {}
    ip = 0x8048410 [from 0x804840f:nop    ]
0x8048410:push   ebp
    ax = v7405
    cx = v7406
    dx = v7407
    bx = v7408
    sp = v7409-0x4 [from 0x8048410:push   ebp]
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {
        size=4; addr=v7409-0x4 [from 0x8048410:push   ebp]; value=v7410
    }
    ip = 0x8048411 [from 0x8048410:push   ebp]
0x8048411:mov    edx, 0x08048480
    ax = v7405
    cx = v7406
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v7408
    sp = v7409-0x4 [from 0x8048410:push   ebp]
    bp = v7410
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {
        size=4; addr=v7409-0x4 [from 0x8048410:push   ebp]; value=v7410
    }
    ip = 0x8048416 [from 0x8048411:mov    edx, 0x08048480]
0x8048416:mov    ebp, esp
    ax = v7405
    cx = v7406
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v7408
    sp = v7409-0x4 [from 0x8048410:push   ebp]
    bp = v7409-0x4 [from 0x8048410:push   ebp]
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = v7419
    ?1 = v7420
    pf = v7421
    ?3 = v7422
    af = v7423
    ?5 = v7424
    zf = v7425
    sf = v7426
    tf = v7427
    if = v7428
    df = v7429
    of = v7430
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {
        size=4; addr=v7409-0x4 [from 0x8048410:push   ebp]; value=v7410
    }
    ip = 0x8048418 [from 0x8048416:mov    ebp, esp]
0x8048418:sub    esp, 0x08
    ax = v7405
    cx = v7406
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v7408
    sp = v7409-0xc [from 0x8048418:sub    esp, 0x08]
    bp = v7409-0x4 [from 0x8048410:push   ebp]
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = -v7953-0x1 [from 0x8048418:sub    esp, 0x08]
    ?1 = v7420
    pf = -v7947-0x1 [from 0x8048418:sub    esp, 0x08]
    ?3 = v7422
    af = -v7951-0x1 [from 0x8048418:sub    esp, 0x08]
    ?5 = v7424
    zf = v7950 [from 0x8048418:sub    esp, 0x08]
    sf = v7949 [from 0x8048418:sub    esp, 0x08]
    tf = v7427
    if = v7428
    df = v7429
    of = v7957 [from 0x8048418:sub    esp, 0x08]
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {
        size=4; addr=v7409-0x4 [from 0x8048410:push   ebp]; value=v7410
    }
    ip = 0x804841b [from 0x8048418:sub    esp, 0x08]
0x804841b:and    esp, 0xf0<-0x10>
    ax = v7405
    cx = v7406
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v7408
    sp = v7991 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v7409-0x4 [from 0x8048410:push   ebp]
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v7420
    pf = -v8007-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v7422
    af = <top>
    ?5 = v7424
    zf = v8010 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v8009 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v7427
    if = v7428
    df = v7429
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {
        size=4; addr=v7409-0x4 [from 0x8048410:push   ebp]; value=v7410
    }
    ip = 0x804841e [from 0x804841b:and    esp, 0xf0<-0x10>]
0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx
    ax = v7405
    cx = v7406
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v7408
    sp = v7991 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v7409-0x4 [from 0x8048410:push   ebp]
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v7420
    pf = -v8007-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v7422
    af = <top>
    ?5 = v7424
    zf = v8010 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v8009 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v7427
    if = v7428
    df = v7429
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {
        size=4; addr=v7991+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048422 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]
0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a
    ax = v7405
    cx = v7406
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v7408
    sp = v7991 [from 0x804841b:and    esp, 0xf0<-0x10>]
    bp = v7409-0x4 [from 0x8048410:push   ebp]
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v7420
    pf = -v8007-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v7422
    af = <top>
    ?5 = v7424
    zf = v8010 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v8009 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v7427
    if = v7428
    df = v7429
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {
        size=4; addr=v7991 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v7991+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    }
    ip = 0x8048429 [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
0x8048429:call   0x080482f0
    ax = v7405
    cx = v7406
    dx = 0x8048480 [from 0x8048411:mov    edx, 0x08048480]
    bx = v7408
    sp = v7991-0x4 [from 0x8048429:call   0x080482f0]
    bp = v7409-0x4 [from 0x8048410:push   ebp]
    si = v7411
    di = v7412
    es = v7413
    cs = v7414
    ss = v7415
    ds = v7416
    fs = v7417
    gs = v7418
    cf = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?1 = v7420
    pf = -v8007-0x1 [from 0x804841b:and    esp, 0xf0<-0x10>]
    ?3 = v7422
    af = <top>
    ?5 = v7424
    zf = v8010 [from 0x804841b:and    esp, 0xf0<-0x10>]
    sf = v8009 [from 0x804841b:and    esp, 0xf0<-0x10>]
    tf = v7427
    if = v7428
    df = v7429
    of = 0x0 [from 0x804841b:and    esp, 0xf0<-0x10>]
    iopl0 = v7431
    iopl1 = v7432
    nt = v7433
    ?15 = v7434
    memory = {
        size=4; addr=v7991 [from 0x804841b:and    esp, 0xf0<-0x10>]; value=0xa [from 0x8048422:mov    DWORD PTR ss:[esp], 0x0000000a]
        size=4; addr=v7991+0x4 [from 0x804841e:mov    DWORD PTR ss:[esp + 0x04], edx]; value=0x8048480 [from 0x8048411:mov    edx, 0x08048480]
        size=4; addr=v7991-0x4 [from 0x8048429:call   0x080482f0]; value=0x804842e [from 0x8048429:call   0x080482f0]
    }
    ip = 0x80482f0 [from 0x8048429:call   0x080482f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804842e:mov    esp, ebp
    ax = v8303
    cx = v8304
    dx = v8305
    bx = v8306
    sp = v8308
    bp = v8308
    si = v8309
    di = v8310
    es = v8311
    cs = v8312
    ss = v8313
    ds = v8314
    fs = v8315
    gs = v8316
    cf = v8317
    ?1 = v8318
    pf = v8319
    ?3 = v8320
    af = v8321
    ?5 = v8322
    zf = v8323
    sf = v8324
    tf = v8325
    if = v8326
    df = v8327
    of = v8328
    iopl0 = v8329
    iopl1 = v8330
    nt = v8331
    ?15 = v8332
    memory = {}
    ip = 0x8048430 [from 0x804842e:mov    esp, ebp]
0x8048430:xor    eax, eax
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v8304
    dx = v8305
    bx = v8306
    sp = v8308
    bp = v8308
    si = v8309
    di = v8310
    es = v8311
    cs = v8312
    ss = v8313
    ds = v8314
    fs = v8315
    gs = v8316
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v8318
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v8320
    af = <top>
    ?5 = v8322
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v8325
    if = v8326
    df = v8327
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v8329
    iopl1 = v8330
    nt = v8331
    ?15 = v8332
    memory = {}
    ip = 0x8048432 [from 0x8048430:xor    eax, eax]
0x8048432:pop    ebp
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v8304
    dx = v8305
    bx = v8306
    sp = v8308+0x4 [from 0x8048432:pop    ebp]
    bp = v8424 [from 0x8048432:pop    ebp]
    si = v8309
    di = v8310
    es = v8311
    cs = v8312
    ss = v8313
    ds = v8314
    fs = v8315
    gs = v8316
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v8318
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v8320
    af = <top>
    ?5 = v8322
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v8325
    if = v8326
    df = v8327
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v8329
    iopl1 = v8330
    nt = v8331
    ?15 = v8332
    memory = {}
    ip = 0x8048433 [from 0x8048432:pop    ebp]
0x8048433:ret    
    ax = 0x0 [from 0x8048430:xor    eax, eax]
    cx = v8304
    dx = v8305
    bx = v8306
    sp = v8308+0x8 [from 0x8048433:ret    ]
    bp = v8424 [from 0x8048432:pop    ebp]
    si = v8309
    di = v8310
    es = v8311
    cs = v8312
    ss = v8313
    ds = v8314
    fs = v8315
    gs = v8316
    cf = 0x0 [from 0x8048430:xor    eax, eax]
    ?1 = v8318
    pf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    ?3 = v8320
    af = <top>
    ?5 = v8322
    zf = 0x1 (-0x1) [from 0x8048430:xor    eax, eax]
    sf = 0x0 [from 0x8048430:xor    eax, eax]
    tf = v8325
    if = v8326
    df = v8327
    of = 0x0 [from 0x8048430:xor    eax, eax]
    iopl0 = v8329
    iopl1 = v8330
    nt = v8331
    ?15 = v8332
    memory = {}
    ip = v8462 [from 0x8048433:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048434:lea    esi, [esi + 0x00000000]
    ax = v8524
    cx = v8525
    dx = v8526
    bx = v8527
    sp = v8528
    bp = v8529
    si = v8530 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8531
    es = v8532
    cs = v8533
    ss = v8534
    ds = v8535
    fs = v8536
    gs = v8537
    cf = v8538
    ?1 = v8539
    pf = v8540
    ?3 = v8541
    af = v8542
    ?5 = v8543
    zf = v8544
    sf = v8545
    tf = v8546
    if = v8547
    df = v8548
    of = v8549
    iopl0 = v8550
    iopl1 = v8551
    nt = v8552
    ?15 = v8553
    memory = {}
    ip = 0x804843a [from 0x8048434:lea    esi, [esi + 0x00000000]]
0x804843a:lea    edi, [edi + 0x00000000]
    ax = v8524
    cx = v8525
    dx = v8526
    bx = v8527
    sp = v8528
    bp = v8529
    si = v8530 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8531 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8532
    cs = v8533
    ss = v8534
    ds = v8535
    fs = v8536
    gs = v8537
    cf = v8538
    ?1 = v8539
    pf = v8540
    ?3 = v8541
    af = v8542
    ?5 = v8543
    zf = v8544
    sf = v8545
    tf = v8546
    if = v8547
    df = v8548
    of = v8549
    iopl0 = v8550
    iopl1 = v8551
    nt = v8552
    ?15 = v8553
    memory = {}
    ip = 0x8048440 [from 0x804843a:lea    edi, [edi + 0x00000000]]
0x8048440:push   ebp
    ax = v8524
    cx = v8525
    dx = v8526
    bx = v8527
    sp = v8528-0x4 [from 0x8048440:push   ebp]
    bp = v8529
    si = v8530 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8531 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8532
    cs = v8533
    ss = v8534
    ds = v8535
    fs = v8536
    gs = v8537
    cf = v8538
    ?1 = v8539
    pf = v8540
    ?3 = v8541
    af = v8542
    ?5 = v8543
    zf = v8544
    sf = v8545
    tf = v8546
    if = v8547
    df = v8548
    of = v8549
    iopl0 = v8550
    iopl1 = v8551
    nt = v8552
    ?15 = v8553
    memory = {
        size=4; addr=v8528-0x4 [from 0x8048440:push   ebp]; value=v8529
    }
    ip = 0x8048441 [from 0x8048440:push   ebp]
0x8048441:mov    ebp, esp
    ax = v8524
    cx = v8525
    dx = v8526
    bx = v8527
    sp = v8528-0x4 [from 0x8048440:push   ebp]
    bp = v8528-0x4 [from 0x8048440:push   ebp]
    si = v8530 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8531 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8532
    cs = v8533
    ss = v8534
    ds = v8535
    fs = v8536
    gs = v8537
    cf = v8538
    ?1 = v8539
    pf = v8540
    ?3 = v8541
    af = v8542
    ?5 = v8543
    zf = v8544
    sf = v8545
    tf = v8546
    if = v8547
    df = v8548
    of = v8549
    iopl0 = v8550
    iopl1 = v8551
    nt = v8552
    ?15 = v8553
    memory = {
        size=4; addr=v8528-0x4 [from 0x8048440:push   ebp]; value=v8529
    }
    ip = 0x8048443 [from 0x8048441:mov    ebp, esp]
0x8048443:sub    esp, 0x08
    ax = v8524
    cx = v8525
    dx = v8526
    bx = v8527
    sp = v8528-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v8528-0x4 [from 0x8048440:push   ebp]
    si = v8530 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8531 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8532
    cs = v8533
    ss = v8534
    ds = v8535
    fs = v8536
    gs = v8537
    cf = -v8723-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v8539
    pf = -v8717-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v8541
    af = -v8721-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v8543
    zf = v8720 [from 0x8048443:sub    esp, 0x08]
    sf = v8719 [from 0x8048443:sub    esp, 0x08]
    tf = v8546
    if = v8547
    df = v8548
    of = v8727 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v8550
    iopl1 = v8551
    nt = v8552
    ?15 = v8553
    memory = {
        size=4; addr=v8528-0x4 [from 0x8048440:push   ebp]; value=v8529
    }
    ip = 0x8048446 [from 0x8048443:sub    esp, 0x08]
0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v8524
    cx = v8525
    dx = v8526
    bx = v8527
    sp = v8528-0xc [from 0x8048443:sub    esp, 0x08]
    bp = v8528-0x4 [from 0x8048440:push   ebp]
    si = v8530 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8531 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8532
    cs = v8533
    ss = v8534
    ds = v8535
    fs = v8536
    gs = v8537
    cf = -v8723-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v8539
    pf = -v8717-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v8541
    af = -v8721-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v8543
    zf = v8720 [from 0x8048443:sub    esp, 0x08]
    sf = v8719 [from 0x8048443:sub    esp, 0x08]
    tf = v8546
    if = v8547
    df = v8548
    of = v8727 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v8550
    iopl1 = v8551
    nt = v8552
    ?15 = v8553
    memory = {
        size=4; addr=v8528-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8528-0x4 [from 0x8048440:push   ebp]; value=v8529
    }
    ip = 0x804844d [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804844d:call   0x08048300
    ax = v8524
    cx = v8525
    dx = v8526
    bx = v8527
    sp = v8528-0x10 [from 0x804844d:call   0x08048300]
    bp = v8528-0x4 [from 0x8048440:push   ebp]
    si = v8530 [from 0x8048434:lea    esi, [esi + 0x00000000]]
    di = v8531 [from 0x804843a:lea    edi, [edi + 0x00000000]]
    es = v8532
    cs = v8533
    ss = v8534
    ds = v8535
    fs = v8536
    gs = v8537
    cf = -v8723-0x1 [from 0x8048443:sub    esp, 0x08]
    ?1 = v8539
    pf = -v8717-0x1 [from 0x8048443:sub    esp, 0x08]
    ?3 = v8541
    af = -v8721-0x1 [from 0x8048443:sub    esp, 0x08]
    ?5 = v8543
    zf = v8720 [from 0x8048443:sub    esp, 0x08]
    sf = v8719 [from 0x8048443:sub    esp, 0x08]
    tf = v8546
    if = v8547
    df = v8548
    of = v8727 [from 0x8048443:sub    esp, 0x08]
    iopl0 = v8550
    iopl1 = v8551
    nt = v8552
    ?15 = v8553
    memory = {
        size=4; addr=v8528-0x10 [from 0x804844d:call   0x08048300]; value=0x8048452 [from 0x804844d:call   0x08048300]
        size=4; addr=v8528-0xc [from 0x8048443:sub    esp, 0x08]; value=0x80485d4 [from 0x8048446:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v8528-0x4 [from 0x8048440:push   ebp]; value=v8529
    }
    ip = 0x8048300 [from 0x804844d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048452:mov    esp, ebp
    ax = v8981
    cx = v8982
    dx = v8983
    bx = v8984
    sp = v8986
    bp = v8986
    si = v8987
    di = v8988
    es = v8989
    cs = v8990
    ss = v8991
    ds = v8992
    fs = v8993
    gs = v8994
    cf = v8995
    ?1 = v8996
    pf = v8997
    ?3 = v8998
    af = v8999
    ?5 = v9000
    zf = v9001
    sf = v9002
    tf = v9003
    if = v9004
    df = v9005
    of = v9006
    iopl0 = v9007
    iopl1 = v9008
    nt = v9009
    ?15 = v9010
    memory = {}
    ip = 0x8048454 [from 0x8048452:mov    esp, ebp]
0x8048454:pop    ebp
    ax = v8981
    cx = v8982
    dx = v8983
    bx = v8984
    sp = v8986+0x4 [from 0x8048454:pop    ebp]
    bp = v9047 [from 0x8048454:pop    ebp]
    si = v8987
    di = v8988
    es = v8989
    cs = v8990
    ss = v8991
    ds = v8992
    fs = v8993
    gs = v8994
    cf = v8995
    ?1 = v8996
    pf = v8997
    ?3 = v8998
    af = v8999
    ?5 = v9000
    zf = v9001
    sf = v9002
    tf = v9003
    if = v9004
    df = v9005
    of = v9006
    iopl0 = v9007
    iopl1 = v9008
    nt = v9009
    ?15 = v9010
    memory = {}
    ip = 0x8048455 [from 0x8048454:pop    ebp]
0x8048455:ret    
    ax = v8981
    cx = v8982
    dx = v8983
    bx = v8984
    sp = v8986+0x8 [from 0x8048455:ret    ]
    bp = v9047 [from 0x8048454:pop    ebp]
    si = v8987
    di = v8988
    es = v8989
    cs = v8990
    ss = v8991
    ds = v8992
    fs = v8993
    gs = v8994
    cf = v8995
    ?1 = v8996
    pf = v8997
    ?3 = v8998
    af = v8999
    ?5 = v9000
    zf = v9001
    sf = v9002
    tf = v9003
    if = v9004
    df = v9005
    of = v9006
    iopl0 = v9007
    iopl1 = v9008
    nt = v9009
    ?15 = v9010
    memory = {}
    ip = v9085 [from 0x8048455:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048456:lea    esi, [esi + 0x00]
    ax = v9147
    cx = v9148
    dx = v9149
    bx = v9150
    sp = v9151
    bp = v9152
    si = v9153 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v9154
    es = v9155
    cs = v9156
    ss = v9157
    ds = v9158
    fs = v9159
    gs = v9160
    cf = v9161
    ?1 = v9162
    pf = v9163
    ?3 = v9164
    af = v9165
    ?5 = v9166
    zf = v9167
    sf = v9168
    tf = v9169
    if = v9170
    df = v9171
    of = v9172
    iopl0 = v9173
    iopl1 = v9174
    nt = v9175
    ?15 = v9176
    memory = {}
    ip = 0x8048459 [from 0x8048456:lea    esi, [esi + 0x00]]
0x8048459:lea    edi, [edi + 0x00000000]
    ax = v9147
    cx = v9148
    dx = v9149
    bx = v9150
    sp = v9151
    bp = v9152
    si = v9153 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v9154 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v9155
    cs = v9156
    ss = v9157
    ds = v9158
    fs = v9159
    gs = v9160
    cf = v9161
    ?1 = v9162
    pf = v9163
    ?3 = v9164
    af = v9165
    ?5 = v9166
    zf = v9167
    sf = v9168
    tf = v9169
    if = v9170
    df = v9171
    of = v9172
    iopl0 = v9173
    iopl1 = v9174
    nt = v9175
    ?15 = v9176
    memory = {}
    ip = 0x8048460 [from 0x8048459:lea    edi, [edi + 0x00000000]]
0x8048460:push   ebp
    ax = v9147
    cx = v9148
    dx = v9149
    bx = v9150
    sp = v9151-0x4 [from 0x8048460:push   ebp]
    bp = v9152
    si = v9153 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v9154 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v9155
    cs = v9156
    ss = v9157
    ds = v9158
    fs = v9159
    gs = v9160
    cf = v9161
    ?1 = v9162
    pf = v9163
    ?3 = v9164
    af = v9165
    ?5 = v9166
    zf = v9167
    sf = v9168
    tf = v9169
    if = v9170
    df = v9171
    of = v9172
    iopl0 = v9173
    iopl1 = v9174
    nt = v9175
    ?15 = v9176
    memory = {
        size=4; addr=v9151-0x4 [from 0x8048460:push   ebp]; value=v9152
    }
    ip = 0x8048461 [from 0x8048460:push   ebp]
0x8048461:mov    ebp, esp
    ax = v9147
    cx = v9148
    dx = v9149
    bx = v9150
    sp = v9151-0x4 [from 0x8048460:push   ebp]
    bp = v9151-0x4 [from 0x8048460:push   ebp]
    si = v9153 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v9154 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v9155
    cs = v9156
    ss = v9157
    ds = v9158
    fs = v9159
    gs = v9160
    cf = v9161
    ?1 = v9162
    pf = v9163
    ?3 = v9164
    af = v9165
    ?5 = v9166
    zf = v9167
    sf = v9168
    tf = v9169
    if = v9170
    df = v9171
    of = v9172
    iopl0 = v9173
    iopl1 = v9174
    nt = v9175
    ?15 = v9176
    memory = {
        size=4; addr=v9151-0x4 [from 0x8048460:push   ebp]; value=v9152
    }
    ip = 0x8048463 [from 0x8048461:mov    ebp, esp]
0x8048463:sub    esp, 0x08
    ax = v9147
    cx = v9148
    dx = v9149
    bx = v9150
    sp = v9151-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v9151-0x4 [from 0x8048460:push   ebp]
    si = v9153 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v9154 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v9155
    cs = v9156
    ss = v9157
    ds = v9158
    fs = v9159
    gs = v9160
    cf = -v9346-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v9162
    pf = -v9340-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v9164
    af = -v9344-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v9166
    zf = v9343 [from 0x8048463:sub    esp, 0x08]
    sf = v9342 [from 0x8048463:sub    esp, 0x08]
    tf = v9169
    if = v9170
    df = v9171
    of = v9350 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v9173
    iopl1 = v9174
    nt = v9175
    ?15 = v9176
    memory = {
        size=4; addr=v9151-0x4 [from 0x8048460:push   ebp]; value=v9152
    }
    ip = 0x8048466 [from 0x8048463:sub    esp, 0x08]
0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v9147
    cx = v9148
    dx = v9149
    bx = v9150
    sp = v9151-0xc [from 0x8048463:sub    esp, 0x08]
    bp = v9151-0x4 [from 0x8048460:push   ebp]
    si = v9153 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v9154 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v9155
    cs = v9156
    ss = v9157
    ds = v9158
    fs = v9159
    gs = v9160
    cf = -v9346-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v9162
    pf = -v9340-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v9164
    af = -v9344-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v9166
    zf = v9343 [from 0x8048463:sub    esp, 0x08]
    sf = v9342 [from 0x8048463:sub    esp, 0x08]
    tf = v9169
    if = v9170
    df = v9171
    of = v9350 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v9173
    iopl1 = v9174
    nt = v9175
    ?15 = v9176
    memory = {
        size=4; addr=v9151-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v9151-0x4 [from 0x8048460:push   ebp]; value=v9152
    }
    ip = 0x804846d [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
0x804846d:call   0x08048300
    ax = v9147
    cx = v9148
    dx = v9149
    bx = v9150
    sp = v9151-0x10 [from 0x804846d:call   0x08048300]
    bp = v9151-0x4 [from 0x8048460:push   ebp]
    si = v9153 [from 0x8048456:lea    esi, [esi + 0x00]]
    di = v9154 [from 0x8048459:lea    edi, [edi + 0x00000000]]
    es = v9155
    cs = v9156
    ss = v9157
    ds = v9158
    fs = v9159
    gs = v9160
    cf = -v9346-0x1 [from 0x8048463:sub    esp, 0x08]
    ?1 = v9162
    pf = -v9340-0x1 [from 0x8048463:sub    esp, 0x08]
    ?3 = v9164
    af = -v9344-0x1 [from 0x8048463:sub    esp, 0x08]
    ?5 = v9166
    zf = v9343 [from 0x8048463:sub    esp, 0x08]
    sf = v9342 [from 0x8048463:sub    esp, 0x08]
    tf = v9169
    if = v9170
    df = v9171
    of = v9350 [from 0x8048463:sub    esp, 0x08]
    iopl0 = v9173
    iopl1 = v9174
    nt = v9175
    ?15 = v9176
    memory = {
        size=4; addr=v9151-0x10 [from 0x804846d:call   0x08048300]; value=0x8048472 [from 0x804846d:call   0x08048300]
        size=4; addr=v9151-0xc [from 0x8048463:sub    esp, 0x08]; value=0x80485d4 [from 0x8048466:mov    DWORD PTR ss:[esp], 0x080485d4]
        size=4; addr=v9151-0x4 [from 0x8048460:push   ebp]; value=v9152
    }
    ip = 0x8048300 [from 0x804846d:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048472:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v9604
    cx = v9605
    dx = v9606
    bx = v9607
    sp = v9608
    bp = v9609
    si = v9610
    di = v9611
    es = v9612
    cs = v9613
    ss = v9614
    ds = v9615
    fs = v9616
    gs = v9617
    cf = v9618
    ?1 = v9619
    pf = v9620
    ?3 = v9621
    af = v9622
    ?5 = v9623
    zf = v9624
    sf = v9625
    tf = v9626
    if = v9627
    df = v9628
    of = v9629
    iopl0 = v9630
    iopl1 = v9631
    nt = v9632
    ?15 = v9633
    memory = {
        size=4; addr=v9608; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x8048479 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
0x8048479:call   0x08048320
    ax = v9604
    cx = v9605
    dx = v9606
    bx = v9607
    sp = v9608-0x4 [from 0x8048479:call   0x08048320]
    bp = v9609
    si = v9610
    di = v9611
    es = v9612
    cs = v9613
    ss = v9614
    ds = v9615
    fs = v9616
    gs = v9617
    cf = v9618
    ?1 = v9619
    pf = v9620
    ?3 = v9621
    af = v9622
    ?5 = v9623
    zf = v9624
    sf = v9625
    tf = v9626
    if = v9627
    df = v9628
    of = v9629
    iopl0 = v9630
    iopl1 = v9631
    nt = v9632
    ?15 = v9633
    memory = {
        size=4; addr=v9608; value=0x0 [from 0x8048472:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v9608-0x4 [from 0x8048479:call   0x08048320]; value=0x804847e [from 0x8048479:call   0x08048320]
    }
    ip = 0x8048320 [from 0x8048479:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804847e:mov    esi, esi
    ax = v9856
    cx = v9857
    dx = v9858
    bx = v9859
    sp = v9860
    bp = v9861
    si = v9862
    di = v9863
    es = v9864
    cs = v9865
    ss = v9866
    ds = v9867
    fs = v9868
    gs = v9869
    cf = v9870
    ?1 = v9871
    pf = v9872
    ?3 = v9873
    af = v9874
    ?5 = v9875
    zf = v9876
    sf = v9877
    tf = v9878
    if = v9879
    df = v9880
    of = v9881
    iopl0 = v9882
    iopl1 = v9883
    nt = v9884
    ?15 = v9885
    memory = {}
    ip = 0x8048480 [from 0x804847e:mov    esi, esi]
0x8048480:push   ebp
    ax = v9856
    cx = v9857
    dx = v9858
    bx = v9859
    sp = v9860-0x4 [from 0x8048480:push   ebp]
    bp = v9861
    si = v9862
    di = v9863
    es = v9864
    cs = v9865
    ss = v9866
    ds = v9867
    fs = v9868
    gs = v9869
    cf = v9870
    ?1 = v9871
    pf = v9872
    ?3 = v9873
    af = v9874
    ?5 = v9875
    zf = v9876
    sf = v9877
    tf = v9878
    if = v9879
    df = v9880
    of = v9881
    iopl0 = v9882
    iopl1 = v9883
    nt = v9884
    ?15 = v9885
    memory = {
        size=4; addr=v9860-0x4 [from 0x8048480:push   ebp]; value=v9861
    }
    ip = 0x8048481 [from 0x8048480:push   ebp]
0x8048481:mov    ebp, esp
    ax = v9856
    cx = v9857
    dx = v9858
    bx = v9859
    sp = v9860-0x4 [from 0x8048480:push   ebp]
    bp = v9860-0x4 [from 0x8048480:push   ebp]
    si = v9862
    di = v9863
    es = v9864
    cs = v9865
    ss = v9866
    ds = v9867
    fs = v9868
    gs = v9869
    cf = v9870
    ?1 = v9871
    pf = v9872
    ?3 = v9873
    af = v9874
    ?5 = v9875
    zf = v9876
    sf = v9877
    tf = v9878
    if = v9879
    df = v9880
    of = v9881
    iopl0 = v9882
    iopl1 = v9883
    nt = v9884
    ?15 = v9885
    memory = {
        size=4; addr=v9860-0x4 [from 0x8048480:push   ebp]; value=v9861
    }
    ip = 0x8048483 [from 0x8048481:mov    ebp, esp]
0x8048483:sub    esp, 0x08
    ax = v9856
    cx = v9857
    dx = v9858
    bx = v9859
    sp = v9860-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v9860-0x4 [from 0x8048480:push   ebp]
    si = v9862
    di = v9863
    es = v9864
    cs = v9865
    ss = v9866
    ds = v9867
    fs = v9868
    gs = v9869
    cf = -v10019-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v9871
    pf = -v10013-0x1 [from 0x8048483:sub    esp, 0x08]
    ?3 = v9873
    af = -v10017-0x1 [from 0x8048483:sub    esp, 0x08]
    ?5 = v9875
    zf = v10016 [from 0x8048483:sub    esp, 0x08]
    sf = v10015 [from 0x8048483:sub    esp, 0x08]
    tf = v9878
    if = v9879
    df = v9880
    of = v10023 [from 0x8048483:sub    esp, 0x08]
    iopl0 = v9882
    iopl1 = v9883
    nt = v9884
    ?15 = v9885
    memory = {
        size=4; addr=v9860-0x4 [from 0x8048480:push   ebp]; value=v9861
    }
    ip = 0x8048486 [from 0x8048483:sub    esp, 0x08]
0x8048486:inc    DWORD PTR ds:[0x080496f8]
    ax = v9856
    cx = v9857
    dx = v9858
    bx = v9859
    sp = v9860-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v9860-0x4 [from 0x8048480:push   ebp]
    si = v9862
    di = v9863
    es = v9864
    cs = v9865
    ss = v9866
    ds = v9867
    fs = v9868
    gs = v9869
    cf = -v10019-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v9871
    pf = -v10083-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v9873
    af = v10087 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v9875
    zf = v10086 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v10085 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v9878
    if = v9879
    df = v9880
    of = v10090 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v9882
    iopl1 = v9883
    nt = v9884
    ?15 = v9885
    memory = {
        size=4; addr=0x80496f8 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]; value=v10058+0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    }
    ip = 0x804848c [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4
    ax = v9856
    cx = v9857
    dx = v9858
    bx = v9859
    sp = v9860-0xc [from 0x8048483:sub    esp, 0x08]
    bp = v9860-0x4 [from 0x8048480:push   ebp]
    si = v9862
    di = v9863
    es = v9864
    cs = v9865
    ss = v9866
    ds = v9867
    fs = v9868
    gs = v9869
    cf = -v10019-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v9871
    pf = -v10083-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v9873
    af = v10087 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v9875
    zf = v10086 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v10085 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v9878
    if = v9879
    df = v9880
    of = v10090 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v9882
    iopl1 = v9883
    nt = v9884
    ?15 = v9885
    memory = {
        size=4; addr=v9860-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048493 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
0x8048493:call   0x08048300
    ax = v9856
    cx = v9857
    dx = v9858
    bx = v9859
    sp = v9860-0x10 [from 0x8048493:call   0x08048300]
    bp = v9860-0x4 [from 0x8048480:push   ebp]
    si = v9862
    di = v9863
    es = v9864
    cs = v9865
    ss = v9866
    ds = v9867
    fs = v9868
    gs = v9869
    cf = -v10019-0x1 [from 0x8048483:sub    esp, 0x08]
    ?1 = v9871
    pf = -v10083-0x1 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?3 = v9873
    af = v10087 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    ?5 = v9875
    zf = v10086 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    sf = v10085 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    tf = v9878
    if = v9879
    df = v9880
    of = v10090 [from 0x8048486:inc    DWORD PTR ds:[0x080496f8]]
    iopl0 = v9882
    iopl1 = v9883
    nt = v9884
    ?15 = v9885
    memory = {
        size=4; addr=v9860-0x10 [from 0x8048493:call   0x08048300]; value=0x8048498 [from 0x8048493:call   0x08048300]
        size=4; addr=v9860-0xc [from 0x8048483:sub    esp, 0x08]; value=0x80485d4 [from 0x804848c:mov    DWORD PTR ss:[esp], 0x080485d4]
    }
    ip = 0x8048300 [from 0x8048493:call   0x08048300]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048498:mov    DWORD PTR ss:[esp], 0x00000000
    ax = v10347
    cx = v10348
    dx = v10349
    bx = v10350
    sp = v10351
    bp = v10352
    si = v10353
    di = v10354
    es = v10355
    cs = v10356
    ss = v10357
    ds = v10358
    fs = v10359
    gs = v10360
    cf = v10361
    ?1 = v10362
    pf = v10363
    ?3 = v10364
    af = v10365
    ?5 = v10366
    zf = v10367
    sf = v10368
    tf = v10369
    if = v10370
    df = v10371
    of = v10372
    iopl0 = v10373
    iopl1 = v10374
    nt = v10375
    ?15 = v10376
    memory = {
        size=4; addr=v10351; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
    }
    ip = 0x804849f [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
0x804849f:call   0x08048320
    ax = v10347
    cx = v10348
    dx = v10349
    bx = v10350
    sp = v10351-0x4 [from 0x804849f:call   0x08048320]
    bp = v10352
    si = v10353
    di = v10354
    es = v10355
    cs = v10356
    ss = v10357
    ds = v10358
    fs = v10359
    gs = v10360
    cf = v10361
    ?1 = v10362
    pf = v10363
    ?3 = v10364
    af = v10365
    ?5 = v10366
    zf = v10367
    sf = v10368
    tf = v10369
    if = v10370
    df = v10371
    of = v10372
    iopl0 = v10373
    iopl1 = v10374
    nt = v10375
    ?15 = v10376
    memory = {
        size=4; addr=v10351; value=0x0 [from 0x8048498:mov    DWORD PTR ss:[esp], 0x00000000]
        size=4; addr=v10351-0x4 [from 0x804849f:call   0x08048320]; value=0x80484a4 [from 0x804849f:call   0x08048320]
    }
    ip = 0x8048320 [from 0x804849f:call   0x08048320]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484a4:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484a5 [from 0x80484a4:nop    ]
0x80484a5:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484a6 [from 0x80484a5:nop    ]
0x80484a6:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484a7 [from 0x80484a6:nop    ]
0x80484a7:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484a8 [from 0x80484a7:nop    ]
0x80484a8:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484a9 [from 0x80484a8:nop    ]
0x80484a9:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484aa [from 0x80484a9:nop    ]
0x80484aa:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484ab [from 0x80484aa:nop    ]
0x80484ab:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484ac [from 0x80484ab:nop    ]
0x80484ac:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484ad [from 0x80484ac:nop    ]
0x80484ad:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484ae [from 0x80484ad:nop    ]
0x80484ae:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484af [from 0x80484ae:nop    ]
0x80484af:nop    
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {}
    ip = 0x80484b0 [from 0x80484af:nop    ]
0x80484b0:push   ebp
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603-0x4 [from 0x80484b0:push   ebp]
    bp = v10604
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {
        size=4; addr=v10603-0x4 [from 0x80484b0:push   ebp]; value=v10604
    }
    ip = 0x80484b1 [from 0x80484b0:push   ebp]
0x80484b1:mov    ebp, esp
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603-0x4 [from 0x80484b0:push   ebp]
    bp = v10603-0x4 [from 0x80484b0:push   ebp]
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {
        size=4; addr=v10603-0x4 [from 0x80484b0:push   ebp]; value=v10604
    }
    ip = 0x80484b3 [from 0x80484b1:mov    ebp, esp]
0x80484b3:push   edi
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603-0x8 [from 0x80484b3:push   edi]
    bp = v10603-0x4 [from 0x80484b0:push   ebp]
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {
        size=4; addr=v10603-0x8 [from 0x80484b3:push   edi]; value=v10606
        size=4; addr=v10603-0x4 [from 0x80484b0:push   ebp]; value=v10604
    }
    ip = 0x80484b4 [from 0x80484b3:push   edi]
0x80484b4:push   esi
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603-0xc [from 0x80484b4:push   esi]
    bp = v10603-0x4 [from 0x80484b0:push   ebp]
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {
        size=4; addr=v10603-0xc [from 0x80484b4:push   esi]; value=v10605
        size=4; addr=v10603-0x8 [from 0x80484b3:push   edi]; value=v10606
        size=4; addr=v10603-0x4 [from 0x80484b0:push   ebp]; value=v10604
    }
    ip = 0x80484b5 [from 0x80484b4:push   esi]
0x80484b5:push   ebx
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603-0x10 [from 0x80484b5:push   ebx]
    bp = v10603-0x4 [from 0x80484b0:push   ebp]
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = v10613
    ?1 = v10614
    pf = v10615
    ?3 = v10616
    af = v10617
    ?5 = v10618
    zf = v10619
    sf = v10620
    tf = v10621
    if = v10622
    df = v10623
    of = v10624
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {
        size=4; addr=v10603-0x10 [from 0x80484b5:push   ebx]; value=v10602
        size=4; addr=v10603-0xc [from 0x80484b4:push   esi]; value=v10605
        size=4; addr=v10603-0x8 [from 0x80484b3:push   edi]; value=v10606
        size=4; addr=v10603-0x4 [from 0x80484b0:push   ebp]; value=v10604
    }
    ip = 0x80484b6 [from 0x80484b5:push   ebx]
0x80484b6:sub    esp, 0x0c
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603-0x1c [from 0x80484b6:sub    esp, 0x0c]
    bp = v10603-0x4 [from 0x80484b0:push   ebp]
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = -v11222-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v10614
    pf = -v11216-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v10616
    af = -v11220-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v10618
    zf = v11219 [from 0x80484b6:sub    esp, 0x0c]
    sf = v11218 [from 0x80484b6:sub    esp, 0x0c]
    tf = v10621
    if = v10622
    df = v10623
    of = v11226 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {
        size=4; addr=v10603-0x10 [from 0x80484b5:push   ebx]; value=v10602
        size=4; addr=v10603-0xc [from 0x80484b4:push   esi]; value=v10605
        size=4; addr=v10603-0x8 [from 0x80484b3:push   edi]; value=v10606
        size=4; addr=v10603-0x4 [from 0x80484b0:push   ebp]; value=v10604
    }
    ip = 0x80484b9 [from 0x80484b6:sub    esp, 0x0c]
0x80484b9:call   0x080484be
    ax = v10599
    cx = v10600
    dx = v10601
    bx = v10602
    sp = v10603-0x20 [from 0x80484b9:call   0x080484be]
    bp = v10603-0x4 [from 0x80484b0:push   ebp]
    si = v10605
    di = v10606
    es = v10607
    cs = v10608
    ss = v10609
    ds = v10610
    fs = v10611
    gs = v10612
    cf = -v11222-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?1 = v10614
    pf = -v11216-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?3 = v10616
    af = -v11220-0x1 [from 0x80484b6:sub    esp, 0x0c]
    ?5 = v10618
    zf = v11219 [from 0x80484b6:sub    esp, 0x0c]
    sf = v11218 [from 0x80484b6:sub    esp, 0x0c]
    tf = v10621
    if = v10622
    df = v10623
    of = v11226 [from 0x80484b6:sub    esp, 0x0c]
    iopl0 = v10625
    iopl1 = v10626
    nt = v10627
    ?15 = v10628
    memory = {
        size=4; addr=v10603-0x20 [from 0x80484b9:call   0x080484be]; value=0x80484be [from 0x80484b9:call   0x080484be]
        size=4; addr=v10603-0x10 [from 0x80484b5:push   ebx]; value=v10602
        size=4; addr=v10603-0xc [from 0x80484b4:push   esi]; value=v10605
        size=4; addr=v10603-0x8 [from 0x80484b3:push   edi]; value=v10606
        size=4; addr=v10603-0x4 [from 0x80484b0:push   ebp]; value=v10604
    }
    ip = 0x80484be [from 0x80484b9:call   0x080484be]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484be:pop    ebx
    ax = v11355
    cx = v11356
    dx = v11357
    bx = v11389 [from 0x80484be:pop    ebx]
    sp = v11359+0x4 [from 0x80484be:pop    ebx]
    bp = v11360
    si = v11361
    di = v11362
    es = v11363
    cs = v11364
    ss = v11365
    ds = v11366
    fs = v11367
    gs = v11368
    cf = v11369
    ?1 = v11370
    pf = v11371
    ?3 = v11372
    af = v11373
    ?5 = v11374
    zf = v11375
    sf = v11376
    tf = v11377
    if = v11378
    df = v11379
    of = v11380
    iopl0 = v11381
    iopl1 = v11382
    nt = v11383
    ?15 = v11384
    memory = {}
    ip = 0x80484bf [from 0x80484be:pop    ebx]
0x80484bf:add    ebx, 0x0000120a
    ax = v11355
    cx = v11356
    dx = v11357
    bx = v11389+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v11359+0x4 [from 0x80484be:pop    ebx]
    bp = v11360
    si = v11361
    di = v11362
    es = v11363
    cs = v11364
    ss = v11365
    ds = v11366
    fs = v11367
    gs = v11368
    cf = v11451 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v11370
    pf = -v11446-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v11372
    af = v11450 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v11374
    zf = v11449 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v11448 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v11377
    if = v11378
    df = v11379
    of = v11454 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v11381
    iopl1 = v11382
    nt = v11383
    ?15 = v11384
    memory = {}
    ip = 0x80484c5 [from 0x80484bf:add    ebx, 0x0000120a]
0x80484c5:call   0x080482c8
    ax = v11355
    cx = v11356
    dx = v11357
    bx = v11389+0x120a [from 0x80484bf:add    ebx, 0x0000120a]
    sp = v11359 [from 0x80484c5:call   0x080482c8]
    bp = v11360
    si = v11361
    di = v11362
    es = v11363
    cs = v11364
    ss = v11365
    ds = v11366
    fs = v11367
    gs = v11368
    cf = v11451 [from 0x80484bf:add    ebx, 0x0000120a]
    ?1 = v11370
    pf = -v11446-0x1 [from 0x80484bf:add    ebx, 0x0000120a]
    ?3 = v11372
    af = v11450 [from 0x80484bf:add    ebx, 0x0000120a]
    ?5 = v11374
    zf = v11449 [from 0x80484bf:add    ebx, 0x0000120a]
    sf = v11448 [from 0x80484bf:add    ebx, 0x0000120a]
    tf = v11377
    if = v11378
    df = v11379
    of = v11454 [from 0x80484bf:add    ebx, 0x0000120a]
    iopl0 = v11381
    iopl1 = v11382
    nt = v11383
    ?15 = v11384
    memory = {
        size=4; addr=v11359 [from 0x80484c5:call   0x080482c8]; value=0x80484ca [from 0x80484c5:call   0x080482c8]
    }
    ip = 0x80482c8 [from 0x80484c5:call   0x080482c8]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v11676-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v11674
    dx = v11675
    bx = v11676
    sp = v11677
    bp = v11678
    si = v11679
    di = v11680
    es = v11681
    cs = v11682
    ss = v11683
    ds = v11684
    fs = v11685
    gs = v11686
    cf = v11687
    ?1 = v11688
    pf = v11689
    ?3 = v11690
    af = v11691
    ?5 = v11692
    zf = v11693
    sf = v11694
    tf = v11695
    if = v11696
    df = v11697
    of = v11698
    iopl0 = v11699
    iopl1 = v11700
    nt = v11701
    ?15 = v11702
    memory = {}
    ip = 0x80484d0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v11676-0xe0 [from 0x80484ca:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v11674
    dx = v11676-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11676
    sp = v11677
    bp = v11678
    si = v11679
    di = v11680
    es = v11681
    cs = v11682
    ss = v11683
    ds = v11684
    fs = v11685
    gs = v11686
    cf = v11687
    ?1 = v11688
    pf = v11689
    ?3 = v11690
    af = v11691
    ?5 = v11692
    zf = v11693
    sf = v11694
    tf = v11695
    if = v11696
    df = v11697
    of = v11698
    iopl0 = v11699
    iopl1 = v11700
    nt = v11701
    ?15 = v11702
    memory = {}
    ip = 0x80484d6 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x80484d6:sub    eax, edx
    ax = -v23352 [from 0x80484d6:sub    eax, edx]
    cx = v11674
    dx = v11676-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11676
    sp = v11677
    bp = v11678
    si = v11679
    di = v11680
    es = v11681
    cs = v11682
    ss = v11683
    ds = v11684
    fs = v11685
    gs = v11686
    cf = -v11803-0x1 [from 0x80484d6:sub    eax, edx]
    ?1 = v11688
    pf = -v11797-0x1 [from 0x80484d6:sub    eax, edx]
    ?3 = v11690
    af = -v11801-0x1 [from 0x80484d6:sub    eax, edx]
    ?5 = v11692
    zf = v11800 [from 0x80484d6:sub    eax, edx]
    sf = v11799 [from 0x80484d6:sub    eax, edx]
    tf = v11695
    if = v11696
    df = v11697
    of = v11807 [from 0x80484d6:sub    eax, edx]
    iopl0 = v11699
    iopl1 = v11700
    nt = v11701
    ?15 = v11702
    memory = {}
    ip = 0x80484d8 [from 0x80484d6:sub    eax, edx]
0x80484d8:sar    eax, 0x02
    ax = v11846 [from 0x80484d8:sar    eax, 0x02]
    cx = v11674
    dx = v11676-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11676
    sp = v11677
    bp = v11678
    si = v11679
    di = v11680
    es = v11681
    cs = v11682
    ss = v11683
    ds = v11684
    fs = v11685
    gs = v11686
    cf = v11849 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v11688
    pf = -v11869-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v11690
    af = <top>
    ?5 = v11692
    zf = v11874 [from 0x80484d8:sar    eax, 0x02]
    sf = v11872 [from 0x80484d8:sar    eax, 0x02]
    tf = v11695
    if = v11696
    df = v11697
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v11699
    iopl1 = v11700
    nt = v11701
    ?15 = v11702
    memory = {}
    ip = 0x80484db [from 0x80484d8:sar    eax, 0x02]
0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v11846 [from 0x80484d8:sar    eax, 0x02]
    cx = v11674
    dx = v11676-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11676
    sp = v11677
    bp = v11678
    si = v11679
    di = v11680
    es = v11681
    cs = v11682
    ss = v11683
    ds = v11684
    fs = v11685
    gs = v11686
    cf = v11849 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v11688
    pf = -v11869-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v11690
    af = <top>
    ?5 = v11692
    zf = v11874 [from 0x80484d8:sar    eax, 0x02]
    sf = v11872 [from 0x80484d8:sar    eax, 0x02]
    tf = v11695
    if = v11696
    df = v11697
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v11699
    iopl1 = v11700
    nt = v11701
    ?15 = v11702
    memory = {
        size=4; addr=v11678-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11846 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = 0x80484de [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x80484de:jne    0x080484f0
    ax = v11846 [from 0x80484d8:sar    eax, 0x02]
    cx = v11674
    dx = v11676-0xe0 [from 0x80484d0:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v11676
    sp = v11677
    bp = v11678
    si = v11679
    di = v11680
    es = v11681
    cs = v11682
    ss = v11683
    ds = v11684
    fs = v11685
    gs = v11686
    cf = v11849 [from 0x80484d8:sar    eax, 0x02]
    ?1 = v11688
    pf = -v11869-0x1 [from 0x80484d8:sar    eax, 0x02]
    ?3 = v11690
    af = <top>
    ?5 = v11692
    zf = v11874 [from 0x80484d8:sar    eax, 0x02]
    sf = v11872 [from 0x80484d8:sar    eax, 0x02]
    tf = v11695
    if = v11696
    df = v11697
    of = 0x0 [from 0x80484d8:sar    eax, 0x02]
    iopl0 = v11699
    iopl1 = v11700
    nt = v11701
    ?15 = v11702
    memory = {
        size=4; addr=v11678-0x10 [from 0x80484db:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v11846 [from 0x80484d8:sar    eax, 0x02]
    }
    ip = v11946 [from 0x80484de:jne    0x080484f0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e0:add    esp, 0x0c
    ax = v12068
    cx = v12069
    dx = v12070
    bx = v12071
    sp = v12072+0xc [from 0x80484e0:add    esp, 0x0c]
    bp = v12073
    si = v12074
    di = v12075
    es = v12076
    cs = v12077
    ss = v12078
    ds = v12079
    fs = v12080
    gs = v12081
    cf = v12128 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v12083
    pf = -v12123-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v12085
    af = v12127 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v12087
    zf = v12126 [from 0x80484e0:add    esp, 0x0c]
    sf = v12125 [from 0x80484e0:add    esp, 0x0c]
    tf = v12090
    if = v12091
    df = v12092
    of = v12131 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v12094
    iopl1 = v12095
    nt = v12096
    ?15 = v12097
    memory = {}
    ip = 0x80484e3 [from 0x80484e0:add    esp, 0x0c]
0x80484e3:pop    ebx
    ax = v12068
    cx = v12069
    dx = v12070
    bx = v12167 [from 0x80484e3:pop    ebx]
    sp = v12072+0x10 [from 0x80484e3:pop    ebx]
    bp = v12073
    si = v12074
    di = v12075
    es = v12076
    cs = v12077
    ss = v12078
    ds = v12079
    fs = v12080
    gs = v12081
    cf = v12128 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v12083
    pf = -v12123-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v12085
    af = v12127 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v12087
    zf = v12126 [from 0x80484e0:add    esp, 0x0c]
    sf = v12125 [from 0x80484e0:add    esp, 0x0c]
    tf = v12090
    if = v12091
    df = v12092
    of = v12131 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v12094
    iopl1 = v12095
    nt = v12096
    ?15 = v12097
    memory = {}
    ip = 0x80484e4 [from 0x80484e3:pop    ebx]
0x80484e4:pop    esi
    ax = v12068
    cx = v12069
    dx = v12070
    bx = v12167 [from 0x80484e3:pop    ebx]
    sp = v12072+0x14 [from 0x80484e4:pop    esi]
    bp = v12073
    si = v12203 [from 0x80484e4:pop    esi]
    di = v12075
    es = v12076
    cs = v12077
    ss = v12078
    ds = v12079
    fs = v12080
    gs = v12081
    cf = v12128 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v12083
    pf = -v12123-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v12085
    af = v12127 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v12087
    zf = v12126 [from 0x80484e0:add    esp, 0x0c]
    sf = v12125 [from 0x80484e0:add    esp, 0x0c]
    tf = v12090
    if = v12091
    df = v12092
    of = v12131 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v12094
    iopl1 = v12095
    nt = v12096
    ?15 = v12097
    memory = {}
    ip = 0x80484e5 [from 0x80484e4:pop    esi]
0x80484e5:pop    edi
    ax = v12068
    cx = v12069
    dx = v12070
    bx = v12167 [from 0x80484e3:pop    ebx]
    sp = v12072+0x18 [from 0x80484e5:pop    edi]
    bp = v12073
    si = v12203 [from 0x80484e4:pop    esi]
    di = v12239 [from 0x80484e5:pop    edi]
    es = v12076
    cs = v12077
    ss = v12078
    ds = v12079
    fs = v12080
    gs = v12081
    cf = v12128 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v12083
    pf = -v12123-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v12085
    af = v12127 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v12087
    zf = v12126 [from 0x80484e0:add    esp, 0x0c]
    sf = v12125 [from 0x80484e0:add    esp, 0x0c]
    tf = v12090
    if = v12091
    df = v12092
    of = v12131 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v12094
    iopl1 = v12095
    nt = v12096
    ?15 = v12097
    memory = {}
    ip = 0x80484e6 [from 0x80484e5:pop    edi]
0x80484e6:pop    ebp
    ax = v12068
    cx = v12069
    dx = v12070
    bx = v12167 [from 0x80484e3:pop    ebx]
    sp = v12072+0x1c [from 0x80484e6:pop    ebp]
    bp = v12275 [from 0x80484e6:pop    ebp]
    si = v12203 [from 0x80484e4:pop    esi]
    di = v12239 [from 0x80484e5:pop    edi]
    es = v12076
    cs = v12077
    ss = v12078
    ds = v12079
    fs = v12080
    gs = v12081
    cf = v12128 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v12083
    pf = -v12123-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v12085
    af = v12127 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v12087
    zf = v12126 [from 0x80484e0:add    esp, 0x0c]
    sf = v12125 [from 0x80484e0:add    esp, 0x0c]
    tf = v12090
    if = v12091
    df = v12092
    of = v12131 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v12094
    iopl1 = v12095
    nt = v12096
    ?15 = v12097
    memory = {}
    ip = 0x80484e7 [from 0x80484e6:pop    ebp]
0x80484e7:ret    
    ax = v12068
    cx = v12069
    dx = v12070
    bx = v12167 [from 0x80484e3:pop    ebx]
    sp = v12072+0x20 [from 0x80484e7:ret    ]
    bp = v12275 [from 0x80484e6:pop    ebp]
    si = v12203 [from 0x80484e4:pop    esi]
    di = v12239 [from 0x80484e5:pop    edi]
    es = v12076
    cs = v12077
    ss = v12078
    ds = v12079
    fs = v12080
    gs = v12081
    cf = v12128 [from 0x80484e0:add    esp, 0x0c]
    ?1 = v12083
    pf = -v12123-0x1 [from 0x80484e0:add    esp, 0x0c]
    ?3 = v12085
    af = v12127 [from 0x80484e0:add    esp, 0x0c]
    ?5 = v12087
    zf = v12126 [from 0x80484e0:add    esp, 0x0c]
    sf = v12125 [from 0x80484e0:add    esp, 0x0c]
    tf = v12090
    if = v12091
    df = v12092
    of = v12131 [from 0x80484e0:add    esp, 0x0c]
    iopl0 = v12094
    iopl1 = v12095
    nt = v12096
    ?15 = v12097
    memory = {}
    ip = v12313 [from 0x80484e7:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80484e8:nop    
    ax = v12375
    cx = v12376
    dx = v12377
    bx = v12378
    sp = v12379
    bp = v12380
    si = v12381
    di = v12382
    es = v12383
    cs = v12384
    ss = v12385
    ds = v12386
    fs = v12387
    gs = v12388
    cf = v12389
    ?1 = v12390
    pf = v12391
    ?3 = v12392
    af = v12393
    ?5 = v12394
    zf = v12395
    sf = v12396
    tf = v12397
    if = v12398
    df = v12399
    of = v12400
    iopl0 = v12401
    iopl1 = v12402
    nt = v12403
    ?15 = v12404
    memory = {}
    ip = 0x80484e9 [from 0x80484e8:nop    ]
0x80484e9:lea    esi, [esi + 0x00000000]
    ax = v12375
    cx = v12376
    dx = v12377
    bx = v12378
    sp = v12379
    bp = v12380
    si = v12381 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
    di = v12382
    es = v12383
    cs = v12384
    ss = v12385
    ds = v12386
    fs = v12387
    gs = v12388
    cf = v12389
    ?1 = v12390
    pf = v12391
    ?3 = v12392
    af = v12393
    ?5 = v12394
    zf = v12395
    sf = v12396
    tf = v12397
    if = v12398
    df = v12399
    of = v12400
    iopl0 = v12401
    iopl1 = v12402
    nt = v12403
    ?15 = v12404
    memory = {}
    ip = 0x80484f0 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
0x80484f0:xor    edi, edi
    ax = v12375
    cx = v12376
    dx = v12377
    bx = v12378
    sp = v12379
    bp = v12380
    si = v12381 [from 0x80484e9:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v12383
    cs = v12384
    ss = v12385
    ds = v12386
    fs = v12387
    gs = v12388
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v12390
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v12392
    af = <top>
    ?5 = v12394
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v12397
    if = v12398
    df = v12399
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v12401
    iopl1 = v12402
    nt = v12403
    ?15 = v12404
    memory = {}
    ip = 0x80484f2 [from 0x80484f0:xor    edi, edi]
0x80484f2:mov    esi, edx
    ax = v12375
    cx = v12376
    dx = v12377
    bx = v12378
    sp = v12379
    bp = v12380
    si = v12377
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v12383
    cs = v12384
    ss = v12385
    ds = v12386
    fs = v12387
    gs = v12388
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v12390
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v12392
    af = <top>
    ?5 = v12394
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v12397
    if = v12398
    df = v12399
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v12401
    iopl1 = v12402
    nt = v12403
    ?15 = v12404
    memory = {}
    ip = 0x80484f4 [from 0x80484f2:mov    esi, edx]
0x80484f4:lea    esi, [esi + 0x00000000]
    ax = v12375
    cx = v12376
    dx = v12377
    bx = v12378
    sp = v12379
    bp = v12380
    si = v12377 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484f0:xor    edi, edi]
    es = v12383
    cs = v12384
    ss = v12385
    ds = v12386
    fs = v12387
    gs = v12388
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v12390
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v12392
    af = <top>
    ?5 = v12394
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v12397
    if = v12398
    df = v12399
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v12401
    iopl1 = v12402
    nt = v12403
    ?15 = v12404
    memory = {}
    ip = 0x80484fa [from 0x80484f4:lea    esi, [esi + 0x00000000]]
0x80484fa:lea    edi, [edi + 0x00000000]
    ax = v12375
    cx = v12376
    dx = v12377
    bx = v12378
    sp = v12379
    bp = v12380
    si = v12377 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
    es = v12383
    cs = v12384
    ss = v12385
    ds = v12386
    fs = v12387
    gs = v12388
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v12390
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v12392
    af = <top>
    ?5 = v12394
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v12397
    if = v12398
    df = v12399
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v12401
    iopl1 = v12402
    nt = v12403
    ?15 = v12404
    memory = {}
    ip = 0x8048500 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
0x8048500:call   DWORD PTR ds:[esi]
    ax = v12375
    cx = v12376
    dx = v12377
    bx = v12378
    sp = v12379-0x4 [from 0x8048500:call   DWORD PTR ds:[esi]]
    bp = v12380
    si = v12377 [from 0x80484f4:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x80484fa:lea    edi, [edi + 0x00000000]]
    es = v12383
    cs = v12384
    ss = v12385
    ds = v12386
    fs = v12387
    gs = v12388
    cf = 0x0 [from 0x80484f0:xor    edi, edi]
    ?1 = v12390
    pf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    ?3 = v12392
    af = <top>
    ?5 = v12394
    zf = 0x1 (-0x1) [from 0x80484f0:xor    edi, edi]
    sf = 0x0 [from 0x80484f0:xor    edi, edi]
    tf = v12397
    if = v12398
    df = v12399
    of = 0x0 [from 0x80484f0:xor    edi, edi]
    iopl0 = v12401
    iopl1 = v12402
    nt = v12403
    ?15 = v12404
    memory = {
        size=4; addr=v12379-0x4 [from 0x8048500:call   DWORD PTR ds:[esi]]; value=0x8048502 [from 0x8048500:call   DWORD PTR ds:[esi]]
    }
    ip = v12632 [from 0x8048500:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048502:inc    edi
    ax = v12784
    cx = v12785
    dx = v12786
    bx = v12787
    sp = v12788
    bp = v12789
    si = v12790
    di = v12791+0x1 [from 0x8048502:inc    edi]
    es = v12792
    cs = v12793
    ss = v12794
    ds = v12795
    fs = v12796
    gs = v12797
    cf = v12798
    ?1 = v12799
    pf = -v12839-0x1 [from 0x8048502:inc    edi]
    ?3 = v12801
    af = v12843 [from 0x8048502:inc    edi]
    ?5 = v12803
    zf = v12842 [from 0x8048502:inc    edi]
    sf = v12841 [from 0x8048502:inc    edi]
    tf = v12806
    if = v12807
    df = v12808
    of = v12846 [from 0x8048502:inc    edi]
    iopl0 = v12810
    iopl1 = v12811
    nt = v12812
    ?15 = v12813
    memory = {}
    ip = 0x8048503 [from 0x8048502:inc    edi]
0x8048503:add    esi, 0x04
    ax = v12784
    cx = v12785
    dx = v12786
    bx = v12787
    sp = v12788
    bp = v12789
    si = v12790+0x4 [from 0x8048503:add    esi, 0x04]
    di = v12791+0x1 [from 0x8048502:inc    edi]
    es = v12792
    cs = v12793
    ss = v12794
    ds = v12795
    fs = v12796
    gs = v12797
    cf = v12908 [from 0x8048503:add    esi, 0x04]
    ?1 = v12799
    pf = -v12903-0x1 [from 0x8048503:add    esi, 0x04]
    ?3 = v12801
    af = v12907 [from 0x8048503:add    esi, 0x04]
    ?5 = v12803
    zf = v12906 [from 0x8048503:add    esi, 0x04]
    sf = v12905 [from 0x8048503:add    esi, 0x04]
    tf = v12806
    if = v12807
    df = v12808
    of = v12911 [from 0x8048503:add    esi, 0x04]
    iopl0 = v12810
    iopl1 = v12811
    nt = v12812
    ?15 = v12813
    memory = {}
    ip = 0x8048506 [from 0x8048503:add    esi, 0x04]
0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]
    ax = v12784
    cx = v12785
    dx = v12786
    bx = v12787
    sp = v12788
    bp = v12789
    si = v12790+0x4 [from 0x8048503:add    esi, 0x04]
    di = v12791+0x1 [from 0x8048502:inc    edi]
    es = v12792
    cs = v12793
    ss = v12794
    ds = v12795
    fs = v12796
    gs = v12797
    cf = -v12979-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?1 = v12799
    pf = -v12973-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?3 = v12801
    af = -v12977-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?5 = v12803
    zf = v12976 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    sf = v12975 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    tf = v12806
    if = v12807
    df = v12808
    of = v12983 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    iopl0 = v12810
    iopl1 = v12811
    nt = v12812
    ?15 = v12813
    memory = {}
    ip = 0x8048509 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
0x8048509:jb     0x08048500
    ax = v12784
    cx = v12785
    dx = v12786
    bx = v12787
    sp = v12788
    bp = v12789
    si = v12790+0x4 [from 0x8048503:add    esi, 0x04]
    di = v12791+0x1 [from 0x8048502:inc    edi]
    es = v12792
    cs = v12793
    ss = v12794
    ds = v12795
    fs = v12796
    gs = v12797
    cf = -v12979-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?1 = v12799
    pf = -v12973-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?3 = v12801
    af = -v12977-0x1 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    ?5 = v12803
    zf = v12976 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    sf = v12975 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    tf = v12806
    if = v12807
    df = v12808
    of = v12983 [from 0x8048506:cmp    edi, DWORD PTR ss:[ebp + 0xf0<-0x10>]]
    iopl0 = v12810
    iopl1 = v12811
    nt = v12812
    ?15 = v12813
    memory = {}
    ip = v13017 [from 0x8048509:jb     0x08048500]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804850b:add    esp, 0x0c
    ax = v13139
    cx = v13140
    dx = v13141
    bx = v13142
    sp = v13143+0xc [from 0x804850b:add    esp, 0x0c]
    bp = v13144
    si = v13145
    di = v13146
    es = v13147
    cs = v13148
    ss = v13149
    ds = v13150
    fs = v13151
    gs = v13152
    cf = v13199 [from 0x804850b:add    esp, 0x0c]
    ?1 = v13154
    pf = -v13194-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v13156
    af = v13198 [from 0x804850b:add    esp, 0x0c]
    ?5 = v13158
    zf = v13197 [from 0x804850b:add    esp, 0x0c]
    sf = v13196 [from 0x804850b:add    esp, 0x0c]
    tf = v13161
    if = v13162
    df = v13163
    of = v13202 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v13165
    iopl1 = v13166
    nt = v13167
    ?15 = v13168
    memory = {}
    ip = 0x804850e [from 0x804850b:add    esp, 0x0c]
0x804850e:pop    ebx
    ax = v13139
    cx = v13140
    dx = v13141
    bx = v13238 [from 0x804850e:pop    ebx]
    sp = v13143+0x10 [from 0x804850e:pop    ebx]
    bp = v13144
    si = v13145
    di = v13146
    es = v13147
    cs = v13148
    ss = v13149
    ds = v13150
    fs = v13151
    gs = v13152
    cf = v13199 [from 0x804850b:add    esp, 0x0c]
    ?1 = v13154
    pf = -v13194-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v13156
    af = v13198 [from 0x804850b:add    esp, 0x0c]
    ?5 = v13158
    zf = v13197 [from 0x804850b:add    esp, 0x0c]
    sf = v13196 [from 0x804850b:add    esp, 0x0c]
    tf = v13161
    if = v13162
    df = v13163
    of = v13202 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v13165
    iopl1 = v13166
    nt = v13167
    ?15 = v13168
    memory = {}
    ip = 0x804850f [from 0x804850e:pop    ebx]
0x804850f:pop    esi
    ax = v13139
    cx = v13140
    dx = v13141
    bx = v13238 [from 0x804850e:pop    ebx]
    sp = v13143+0x14 [from 0x804850f:pop    esi]
    bp = v13144
    si = v13274 [from 0x804850f:pop    esi]
    di = v13146
    es = v13147
    cs = v13148
    ss = v13149
    ds = v13150
    fs = v13151
    gs = v13152
    cf = v13199 [from 0x804850b:add    esp, 0x0c]
    ?1 = v13154
    pf = -v13194-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v13156
    af = v13198 [from 0x804850b:add    esp, 0x0c]
    ?5 = v13158
    zf = v13197 [from 0x804850b:add    esp, 0x0c]
    sf = v13196 [from 0x804850b:add    esp, 0x0c]
    tf = v13161
    if = v13162
    df = v13163
    of = v13202 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v13165
    iopl1 = v13166
    nt = v13167
    ?15 = v13168
    memory = {}
    ip = 0x8048510 [from 0x804850f:pop    esi]
0x8048510:pop    edi
    ax = v13139
    cx = v13140
    dx = v13141
    bx = v13238 [from 0x804850e:pop    ebx]
    sp = v13143+0x18 [from 0x8048510:pop    edi]
    bp = v13144
    si = v13274 [from 0x804850f:pop    esi]
    di = v13310 [from 0x8048510:pop    edi]
    es = v13147
    cs = v13148
    ss = v13149
    ds = v13150
    fs = v13151
    gs = v13152
    cf = v13199 [from 0x804850b:add    esp, 0x0c]
    ?1 = v13154
    pf = -v13194-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v13156
    af = v13198 [from 0x804850b:add    esp, 0x0c]
    ?5 = v13158
    zf = v13197 [from 0x804850b:add    esp, 0x0c]
    sf = v13196 [from 0x804850b:add    esp, 0x0c]
    tf = v13161
    if = v13162
    df = v13163
    of = v13202 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v13165
    iopl1 = v13166
    nt = v13167
    ?15 = v13168
    memory = {}
    ip = 0x8048511 [from 0x8048510:pop    edi]
0x8048511:pop    ebp
    ax = v13139
    cx = v13140
    dx = v13141
    bx = v13238 [from 0x804850e:pop    ebx]
    sp = v13143+0x1c [from 0x8048511:pop    ebp]
    bp = v13346 [from 0x8048511:pop    ebp]
    si = v13274 [from 0x804850f:pop    esi]
    di = v13310 [from 0x8048510:pop    edi]
    es = v13147
    cs = v13148
    ss = v13149
    ds = v13150
    fs = v13151
    gs = v13152
    cf = v13199 [from 0x804850b:add    esp, 0x0c]
    ?1 = v13154
    pf = -v13194-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v13156
    af = v13198 [from 0x804850b:add    esp, 0x0c]
    ?5 = v13158
    zf = v13197 [from 0x804850b:add    esp, 0x0c]
    sf = v13196 [from 0x804850b:add    esp, 0x0c]
    tf = v13161
    if = v13162
    df = v13163
    of = v13202 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v13165
    iopl1 = v13166
    nt = v13167
    ?15 = v13168
    memory = {}
    ip = 0x8048512 [from 0x8048511:pop    ebp]
0x8048512:ret    
    ax = v13139
    cx = v13140
    dx = v13141
    bx = v13238 [from 0x804850e:pop    ebx]
    sp = v13143+0x20 [from 0x8048512:ret    ]
    bp = v13346 [from 0x8048511:pop    ebp]
    si = v13274 [from 0x804850f:pop    esi]
    di = v13310 [from 0x8048510:pop    edi]
    es = v13147
    cs = v13148
    ss = v13149
    ds = v13150
    fs = v13151
    gs = v13152
    cf = v13199 [from 0x804850b:add    esp, 0x0c]
    ?1 = v13154
    pf = -v13194-0x1 [from 0x804850b:add    esp, 0x0c]
    ?3 = v13156
    af = v13198 [from 0x804850b:add    esp, 0x0c]
    ?5 = v13158
    zf = v13197 [from 0x804850b:add    esp, 0x0c]
    sf = v13196 [from 0x804850b:add    esp, 0x0c]
    tf = v13161
    if = v13162
    df = v13163
    of = v13202 [from 0x804850b:add    esp, 0x0c]
    iopl0 = v13165
    iopl1 = v13166
    nt = v13167
    ?15 = v13168
    memory = {}
    ip = v13384 [from 0x8048512:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048513:lea    esi, [esi + 0x00000000]
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450
    bp = v13451
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = v13460
    ?1 = v13461
    pf = v13462
    ?3 = v13463
    af = v13464
    ?5 = v13465
    zf = v13466
    sf = v13467
    tf = v13468
    if = v13469
    df = v13470
    of = v13471
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {}
    ip = 0x8048519 [from 0x8048513:lea    esi, [esi + 0x00000000]]
0x8048519:lea    edi, [edi + 0x00000000]
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450
    bp = v13451
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = v13460
    ?1 = v13461
    pf = v13462
    ?3 = v13463
    af = v13464
    ?5 = v13465
    zf = v13466
    sf = v13467
    tf = v13468
    if = v13469
    df = v13470
    of = v13471
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {}
    ip = 0x8048520 [from 0x8048519:lea    edi, [edi + 0x00000000]]
0x8048520:push   ebp
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450-0x4 [from 0x8048520:push   ebp]
    bp = v13451
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = v13460
    ?1 = v13461
    pf = v13462
    ?3 = v13463
    af = v13464
    ?5 = v13465
    zf = v13466
    sf = v13467
    tf = v13468
    if = v13469
    df = v13470
    of = v13471
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {
        size=4; addr=v13450-0x4 [from 0x8048520:push   ebp]; value=v13451
    }
    ip = 0x8048521 [from 0x8048520:push   ebp]
0x8048521:mov    ebp, esp
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450-0x4 [from 0x8048520:push   ebp]
    bp = v13450-0x4 [from 0x8048520:push   ebp]
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = v13460
    ?1 = v13461
    pf = v13462
    ?3 = v13463
    af = v13464
    ?5 = v13465
    zf = v13466
    sf = v13467
    tf = v13468
    if = v13469
    df = v13470
    of = v13471
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {
        size=4; addr=v13450-0x4 [from 0x8048520:push   ebp]; value=v13451
    }
    ip = 0x8048523 [from 0x8048521:mov    ebp, esp]
0x8048523:push   edi
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450-0x8 [from 0x8048523:push   edi]
    bp = v13450-0x4 [from 0x8048520:push   ebp]
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = v13460
    ?1 = v13461
    pf = v13462
    ?3 = v13463
    af = v13464
    ?5 = v13465
    zf = v13466
    sf = v13467
    tf = v13468
    if = v13469
    df = v13470
    of = v13471
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {
        size=4; addr=v13450-0x8 [from 0x8048523:push   edi]; value=v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v13450-0x4 [from 0x8048520:push   ebp]; value=v13451
    }
    ip = 0x8048524 [from 0x8048523:push   edi]
0x8048524:push   esi
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450-0xc [from 0x8048524:push   esi]
    bp = v13450-0x4 [from 0x8048520:push   ebp]
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = v13460
    ?1 = v13461
    pf = v13462
    ?3 = v13463
    af = v13464
    ?5 = v13465
    zf = v13466
    sf = v13467
    tf = v13468
    if = v13469
    df = v13470
    of = v13471
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {
        size=4; addr=v13450-0xc [from 0x8048524:push   esi]; value=v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
        size=4; addr=v13450-0x8 [from 0x8048523:push   edi]; value=v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v13450-0x4 [from 0x8048520:push   ebp]; value=v13451
    }
    ip = 0x8048525 [from 0x8048524:push   esi]
0x8048525:push   ebx
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450-0x10 [from 0x8048525:push   ebx]
    bp = v13450-0x4 [from 0x8048520:push   ebp]
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = v13460
    ?1 = v13461
    pf = v13462
    ?3 = v13463
    af = v13464
    ?5 = v13465
    zf = v13466
    sf = v13467
    tf = v13468
    if = v13469
    df = v13470
    of = v13471
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {
        size=4; addr=v13450-0x10 [from 0x8048525:push   ebx]; value=v13449
        size=4; addr=v13450-0xc [from 0x8048524:push   esi]; value=v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
        size=4; addr=v13450-0x8 [from 0x8048523:push   edi]; value=v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v13450-0x4 [from 0x8048520:push   ebp]; value=v13451
    }
    ip = 0x8048526 [from 0x8048525:push   ebx]
0x8048526:sub    esp, 0x0c
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450-0x1c [from 0x8048526:sub    esp, 0x0c]
    bp = v13450-0x4 [from 0x8048520:push   ebp]
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = -v13753-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v13461
    pf = -v13747-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v13463
    af = -v13751-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v13465
    zf = v13750 [from 0x8048526:sub    esp, 0x0c]
    sf = v13749 [from 0x8048526:sub    esp, 0x0c]
    tf = v13468
    if = v13469
    df = v13470
    of = v13757 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {
        size=4; addr=v13450-0x10 [from 0x8048525:push   ebx]; value=v13449
        size=4; addr=v13450-0xc [from 0x8048524:push   esi]; value=v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
        size=4; addr=v13450-0x8 [from 0x8048523:push   edi]; value=v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v13450-0x4 [from 0x8048520:push   ebp]; value=v13451
    }
    ip = 0x8048529 [from 0x8048526:sub    esp, 0x0c]
0x8048529:call   0x0804852e
    ax = v13446
    cx = v13447
    dx = v13448
    bx = v13449
    sp = v13450-0x20 [from 0x8048529:call   0x0804852e]
    bp = v13450-0x4 [from 0x8048520:push   ebp]
    si = v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
    di = v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
    es = v13454
    cs = v13455
    ss = v13456
    ds = v13457
    fs = v13458
    gs = v13459
    cf = -v13753-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?1 = v13461
    pf = -v13747-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?3 = v13463
    af = -v13751-0x1 [from 0x8048526:sub    esp, 0x0c]
    ?5 = v13465
    zf = v13750 [from 0x8048526:sub    esp, 0x0c]
    sf = v13749 [from 0x8048526:sub    esp, 0x0c]
    tf = v13468
    if = v13469
    df = v13470
    of = v13757 [from 0x8048526:sub    esp, 0x0c]
    iopl0 = v13472
    iopl1 = v13473
    nt = v13474
    ?15 = v13475
    memory = {
        size=4; addr=v13450-0x20 [from 0x8048529:call   0x0804852e]; value=0x804852e [from 0x8048529:call   0x0804852e]
        size=4; addr=v13450-0x10 [from 0x8048525:push   ebx]; value=v13449
        size=4; addr=v13450-0xc [from 0x8048524:push   esi]; value=v13452 [from 0x8048513:lea    esi, [esi + 0x00000000]]
        size=4; addr=v13450-0x8 [from 0x8048523:push   edi]; value=v13453 [from 0x8048519:lea    edi, [edi + 0x00000000]]
        size=4; addr=v13450-0x4 [from 0x8048520:push   ebp]; value=v13451
    }
    ip = 0x804852e [from 0x8048529:call   0x0804852e]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804852e:pop    ebx
    ax = v13886
    cx = v13887
    dx = v13888
    bx = v13920 [from 0x804852e:pop    ebx]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = v13900
    ?1 = v13901
    pf = v13902
    ?3 = v13903
    af = v13904
    ?5 = v13905
    zf = v13906
    sf = v13907
    tf = v13908
    if = v13909
    df = v13910
    of = v13911
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {}
    ip = 0x804852f [from 0x804852e:pop    ebx]
0x804852f:add    ebx, 0x0000119a
    ax = v13886
    cx = v13887
    dx = v13888
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = v13982 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v13901
    pf = -v13977-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v13903
    af = v13981 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v13905
    zf = v13980 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v13979 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v13908
    if = v13909
    df = v13910
    of = v13985 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {}
    ip = 0x8048535 [from 0x804852f:add    ebx, 0x0000119a]
0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]
    ax = v13920+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v13887
    dx = v13888
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = v13982 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v13901
    pf = -v13977-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v13903
    af = v13981 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v13905
    zf = v13980 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v13979 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v13908
    if = v13909
    df = v13910
    of = v13985 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {}
    ip = 0x804853b [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]
    ax = v13920+0x10ba [from 0x8048535:lea    eax, [ebx + 0xffffff20<-0x000000e0>]]
    cx = v13887
    dx = v13920+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = v13982 [from 0x804852f:add    ebx, 0x0000119a]
    ?1 = v13901
    pf = -v13977-0x1 [from 0x804852f:add    ebx, 0x0000119a]
    ?3 = v13903
    af = v13981 [from 0x804852f:add    ebx, 0x0000119a]
    ?5 = v13905
    zf = v13980 [from 0x804852f:add    ebx, 0x0000119a]
    sf = v13979 [from 0x804852f:add    ebx, 0x0000119a]
    tf = v13908
    if = v13909
    df = v13910
    of = v13985 [from 0x804852f:add    ebx, 0x0000119a]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {}
    ip = 0x8048541 [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
0x8048541:sub    eax, edx
    ax = -v27840 [from 0x8048541:sub    eax, edx]
    cx = v13887
    dx = v13920+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = -v14117-0x1 [from 0x8048541:sub    eax, edx]
    ?1 = v13901
    pf = -v14111-0x1 [from 0x8048541:sub    eax, edx]
    ?3 = v13903
    af = -v14115-0x1 [from 0x8048541:sub    eax, edx]
    ?5 = v13905
    zf = v14114 [from 0x8048541:sub    eax, edx]
    sf = v14113 [from 0x8048541:sub    eax, edx]
    tf = v13908
    if = v13909
    df = v13910
    of = v14121 [from 0x8048541:sub    eax, edx]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {}
    ip = 0x8048543 [from 0x8048541:sub    eax, edx]
0x8048543:sar    eax, 0x02
    ax = v14160 [from 0x8048543:sar    eax, 0x02]
    cx = v13887
    dx = v13920+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = v14163 [from 0x8048543:sar    eax, 0x02]
    ?1 = v13901
    pf = -v14183-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v13903
    af = <top>
    ?5 = v13905
    zf = v14188 [from 0x8048543:sar    eax, 0x02]
    sf = v14186 [from 0x8048543:sar    eax, 0x02]
    tf = v13908
    if = v13909
    df = v13910
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {}
    ip = 0x8048546 [from 0x8048543:sar    eax, 0x02]
0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax
    ax = v14160 [from 0x8048543:sar    eax, 0x02]
    cx = v13887
    dx = v13920+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = v14163 [from 0x8048543:sar    eax, 0x02]
    ?1 = v13901
    pf = -v14183-0x1 [from 0x8048543:sar    eax, 0x02]
    ?3 = v13903
    af = <top>
    ?5 = v13905
    zf = v14188 [from 0x8048543:sar    eax, 0x02]
    sf = v14186 [from 0x8048543:sar    eax, 0x02]
    tf = v13908
    if = v13909
    df = v13910
    of = 0x0 [from 0x8048543:sar    eax, 0x02]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {
        size=4; addr=v13891-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v14160 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x8048549 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]
0x8048549:dec    eax
    ax = v14160-0x1 [from 0x8048549:dec    eax]
    cx = v13887
    dx = v13920+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = v14163 [from 0x8048543:sar    eax, 0x02]
    ?1 = v13901
    pf = -v14282-0x1 [from 0x8048549:dec    eax]
    ?3 = v13903
    af = -v14286-0x1 [from 0x8048549:dec    eax]
    ?5 = v13905
    zf = v14285 [from 0x8048549:dec    eax]
    sf = v14284 [from 0x8048549:dec    eax]
    tf = v13908
    if = v13909
    df = v13910
    of = v14290 [from 0x8048549:dec    eax]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {
        size=4; addr=v13891-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v14160 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854a [from 0x8048549:dec    eax]
0x804854a:cmp    eax, 0xff<-0x01>
    ax = v14160-0x1 [from 0x8048549:dec    eax]
    cx = v13887
    dx = v13920+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = -v14355-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v13901
    pf = -v14349-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v13903
    af = -v14353-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v13905
    zf = v14352 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v14351 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v13908
    if = v13909
    df = v13910
    of = v14359 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {
        size=4; addr=v13891-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v14160 [from 0x8048543:sar    eax, 0x02]
    }
    ip = 0x804854d [from 0x804854a:cmp    eax, 0xff<-0x01>]
0x804854d:je     0x0804856b
    ax = v14160-0x1 [from 0x8048549:dec    eax]
    cx = v13887
    dx = v13920+0x10ba [from 0x804853b:lea    edx, [ebx + 0xffffff20<-0x000000e0>]]
    bx = v13920+0x119a [from 0x804852f:add    ebx, 0x0000119a]
    sp = v13890+0x4 [from 0x804852e:pop    ebx]
    bp = v13891
    si = v13892
    di = v13893
    es = v13894
    cs = v13895
    ss = v13896
    ds = v13897
    fs = v13898
    gs = v13899
    cf = -v14355-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?1 = v13901
    pf = -v14349-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?3 = v13903
    af = -v14353-0x1 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    ?5 = v13905
    zf = v14352 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    sf = v14351 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    tf = v13908
    if = v13909
    df = v13910
    of = v14359 [from 0x804854a:cmp    eax, 0xff<-0x01>]
    iopl0 = v13912
    iopl1 = v13913
    nt = v13914
    ?15 = v13915
    memory = {
        size=4; addr=v13891-0x10 [from 0x8048546:mov    DWORD PTR ss:[ebp + 0xf0<-0x10>], eax]; value=v14160 [from 0x8048543:sar    eax, 0x02]
    }
    ip = v14393 [from 0x804854d:je     0x0804856b]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804854f:lea    esi, [edx + eax*0x04]
    ax = v14515
    cx = v14516
    dx = v14517
    bx = v14518
    sp = v14519
    bp = v14520
    si = v14549 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = v14522
    es = v14523
    cs = v14524
    ss = v14525
    ds = v14526
    fs = v14527
    gs = v14528
    cf = v14529
    ?1 = v14530
    pf = v14531
    ?3 = v14532
    af = v14533
    ?5 = v14534
    zf = v14535
    sf = v14536
    tf = v14537
    if = v14538
    df = v14539
    of = v14540
    iopl0 = v14541
    iopl1 = v14542
    nt = v14543
    ?15 = v14544
    memory = {}
    ip = 0x8048552 [from 0x804854f:lea    esi, [edx + eax*0x04]]
0x8048552:xor    edi, edi
    ax = v14515
    cx = v14516
    dx = v14517
    bx = v14518
    sp = v14519
    bp = v14520
    si = v14549 [from 0x804854f:lea    esi, [edx + eax*0x04]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v14523
    cs = v14524
    ss = v14525
    ds = v14526
    fs = v14527
    gs = v14528
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v14530
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v14532
    af = <top>
    ?5 = v14534
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v14537
    if = v14538
    df = v14539
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v14541
    iopl1 = v14542
    nt = v14543
    ?15 = v14544
    memory = {}
    ip = 0x8048554 [from 0x8048552:xor    edi, edi]
0x8048554:lea    esi, [esi + 0x00000000]
    ax = v14515
    cx = v14516
    dx = v14517
    bx = v14518
    sp = v14519
    bp = v14520
    si = v14549 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x8048552:xor    edi, edi]
    es = v14523
    cs = v14524
    ss = v14525
    ds = v14526
    fs = v14527
    gs = v14528
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v14530
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v14532
    af = <top>
    ?5 = v14534
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v14537
    if = v14538
    df = v14539
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v14541
    iopl1 = v14542
    nt = v14543
    ?15 = v14544
    memory = {}
    ip = 0x804855a [from 0x8048554:lea    esi, [esi + 0x00000000]]
0x804855a:lea    edi, [edi + 0x00000000]
    ax = v14515
    cx = v14516
    dx = v14517
    bx = v14518
    sp = v14519
    bp = v14520
    si = v14549 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v14523
    cs = v14524
    ss = v14525
    ds = v14526
    fs = v14527
    gs = v14528
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v14530
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v14532
    af = <top>
    ?5 = v14534
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v14537
    if = v14538
    df = v14539
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v14541
    iopl1 = v14542
    nt = v14543
    ?15 = v14544
    memory = {}
    ip = 0x8048560 [from 0x804855a:lea    edi, [edi + 0x00000000]]
0x8048560:call   DWORD PTR ds:[esi]
    ax = v14515
    cx = v14516
    dx = v14517
    bx = v14518
    sp = v14519-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]
    bp = v14520
    si = v14549 [from 0x8048554:lea    esi, [esi + 0x00000000]]
    di = 0x0 [from 0x804855a:lea    edi, [edi + 0x00000000]]
    es = v14523
    cs = v14524
    ss = v14525
    ds = v14526
    fs = v14527
    gs = v14528
    cf = 0x0 [from 0x8048552:xor    edi, edi]
    ?1 = v14530
    pf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    ?3 = v14532
    af = <top>
    ?5 = v14534
    zf = 0x1 (-0x1) [from 0x8048552:xor    edi, edi]
    sf = 0x0 [from 0x8048552:xor    edi, edi]
    tf = v14537
    if = v14538
    df = v14539
    of = 0x0 [from 0x8048552:xor    edi, edi]
    iopl0 = v14541
    iopl1 = v14542
    nt = v14543
    ?15 = v14544
    memory = {
        size=4; addr=v14519-0x4 [from 0x8048560:call   DWORD PTR ds:[esi]]; value=0x8048562 [from 0x8048560:call   DWORD PTR ds:[esi]]
    }
    ip = v14710 [from 0x8048560:call   DWORD PTR ds:[esi]]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048562:inc    edi
    ax = v14862
    cx = v14863
    dx = v14864
    bx = v14865
    sp = v14866
    bp = v14867
    si = v14868
    di = v14869+0x1 [from 0x8048562:inc    edi]
    es = v14870
    cs = v14871
    ss = v14872
    ds = v14873
    fs = v14874
    gs = v14875
    cf = v14876
    ?1 = v14877
    pf = -v14917-0x1 [from 0x8048562:inc    edi]
    ?3 = v14879
    af = v14921 [from 0x8048562:inc    edi]
    ?5 = v14881
    zf = v14920 [from 0x8048562:inc    edi]
    sf = v14919 [from 0x8048562:inc    edi]
    tf = v14884
    if = v14885
    df = v14886
    of = v14924 [from 0x8048562:inc    edi]
    iopl0 = v14888
    iopl1 = v14889
    nt = v14890
    ?15 = v14891
    memory = {}
    ip = 0x8048563 [from 0x8048562:inc    edi]
0x8048563:sub    esi, 0x04
    ax = v14862
    cx = v14863
    dx = v14864
    bx = v14865
    sp = v14866
    bp = v14867
    si = v14868-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v14869+0x1 [from 0x8048562:inc    edi]
    es = v14870
    cs = v14871
    ss = v14872
    ds = v14873
    fs = v14874
    gs = v14875
    cf = -v14989-0x1 [from 0x8048563:sub    esi, 0x04]
    ?1 = v14877
    pf = -v14983-0x1 [from 0x8048563:sub    esi, 0x04]
    ?3 = v14879
    af = -v14987-0x1 [from 0x8048563:sub    esi, 0x04]
    ?5 = v14881
    zf = v14986 [from 0x8048563:sub    esi, 0x04]
    sf = v14985 [from 0x8048563:sub    esi, 0x04]
    tf = v14884
    if = v14885
    df = v14886
    of = v14993 [from 0x8048563:sub    esi, 0x04]
    iopl0 = v14888
    iopl1 = v14889
    nt = v14890
    ?15 = v14891
    memory = {}
    ip = 0x8048566 [from 0x8048563:sub    esi, 0x04]
0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi
    ax = v14862
    cx = v14863
    dx = v14864
    bx = v14865
    sp = v14866
    bp = v14867
    si = v14868-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v14869+0x1 [from 0x8048562:inc    edi]
    es = v14870
    cs = v14871
    ss = v14872
    ds = v14873
    fs = v14874
    gs = v14875
    cf = -v15061-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v14877
    pf = -v15055-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v14879
    af = -v15059-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v14881
    zf = v15058 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v15057 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v14884
    if = v14885
    df = v14886
    of = v15065 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v14888
    iopl1 = v14889
    nt = v14890
    ?15 = v14891
    memory = {}
    ip = 0x8048569 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
0x8048569:jne    0x08048560
    ax = v14862
    cx = v14863
    dx = v14864
    bx = v14865
    sp = v14866
    bp = v14867
    si = v14868-0x4 [from 0x8048563:sub    esi, 0x04]
    di = v14869+0x1 [from 0x8048562:inc    edi]
    es = v14870
    cs = v14871
    ss = v14872
    ds = v14873
    fs = v14874
    gs = v14875
    cf = -v15061-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?1 = v14877
    pf = -v15055-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?3 = v14879
    af = -v15059-0x1 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    ?5 = v14881
    zf = v15058 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    sf = v15057 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    tf = v14884
    if = v14885
    df = v14886
    of = v15065 [from 0x8048566:cmp    DWORD PTR ss:[ebp + 0xf0<-0x10>], edi]
    iopl0 = v14888
    iopl1 = v14889
    nt = v14890
    ?15 = v14891
    memory = {}
    ip = v15100 [from 0x8048569:jne    0x08048560]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x804856b:call   0x080485b0
    ax = v15222
    cx = v15223
    dx = v15224
    bx = v15225
    sp = v15226-0x4 [from 0x804856b:call   0x080485b0]
    bp = v15227
    si = v15228
    di = v15229
    es = v15230
    cs = v15231
    ss = v15232
    ds = v15233
    fs = v15234
    gs = v15235
    cf = v15236
    ?1 = v15237
    pf = v15238
    ?3 = v15239
    af = v15240
    ?5 = v15241
    zf = v15242
    sf = v15243
    tf = v15244
    if = v15245
    df = v15246
    of = v15247
    iopl0 = v15248
    iopl1 = v15249
    nt = v15250
    ?15 = v15251
    memory = {
        size=4; addr=v15226-0x4 [from 0x804856b:call   0x080485b0]; value=0x8048570 [from 0x804856b:call   0x080485b0]
    }
    ip = 0x80485b0 [from 0x804856b:call   0x080485b0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048570:add    esp, 0x0c
    ax = v15439
    cx = v15440
    dx = v15441
    bx = v15442
    sp = v15443+0xc [from 0x8048570:add    esp, 0x0c]
    bp = v15444
    si = v15445
    di = v15446
    es = v15447
    cs = v15448
    ss = v15449
    ds = v15450
    fs = v15451
    gs = v15452
    cf = v15499 [from 0x8048570:add    esp, 0x0c]
    ?1 = v15454
    pf = -v15494-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v15456
    af = v15498 [from 0x8048570:add    esp, 0x0c]
    ?5 = v15458
    zf = v15497 [from 0x8048570:add    esp, 0x0c]
    sf = v15496 [from 0x8048570:add    esp, 0x0c]
    tf = v15461
    if = v15462
    df = v15463
    of = v15502 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v15465
    iopl1 = v15466
    nt = v15467
    ?15 = v15468
    memory = {}
    ip = 0x8048573 [from 0x8048570:add    esp, 0x0c]
0x8048573:pop    ebx
    ax = v15439
    cx = v15440
    dx = v15441
    bx = v15538 [from 0x8048573:pop    ebx]
    sp = v15443+0x10 [from 0x8048573:pop    ebx]
    bp = v15444
    si = v15445
    di = v15446
    es = v15447
    cs = v15448
    ss = v15449
    ds = v15450
    fs = v15451
    gs = v15452
    cf = v15499 [from 0x8048570:add    esp, 0x0c]
    ?1 = v15454
    pf = -v15494-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v15456
    af = v15498 [from 0x8048570:add    esp, 0x0c]
    ?5 = v15458
    zf = v15497 [from 0x8048570:add    esp, 0x0c]
    sf = v15496 [from 0x8048570:add    esp, 0x0c]
    tf = v15461
    if = v15462
    df = v15463
    of = v15502 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v15465
    iopl1 = v15466
    nt = v15467
    ?15 = v15468
    memory = {}
    ip = 0x8048574 [from 0x8048573:pop    ebx]
0x8048574:pop    esi
    ax = v15439
    cx = v15440
    dx = v15441
    bx = v15538 [from 0x8048573:pop    ebx]
    sp = v15443+0x14 [from 0x8048574:pop    esi]
    bp = v15444
    si = v15574 [from 0x8048574:pop    esi]
    di = v15446
    es = v15447
    cs = v15448
    ss = v15449
    ds = v15450
    fs = v15451
    gs = v15452
    cf = v15499 [from 0x8048570:add    esp, 0x0c]
    ?1 = v15454
    pf = -v15494-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v15456
    af = v15498 [from 0x8048570:add    esp, 0x0c]
    ?5 = v15458
    zf = v15497 [from 0x8048570:add    esp, 0x0c]
    sf = v15496 [from 0x8048570:add    esp, 0x0c]
    tf = v15461
    if = v15462
    df = v15463
    of = v15502 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v15465
    iopl1 = v15466
    nt = v15467
    ?15 = v15468
    memory = {}
    ip = 0x8048575 [from 0x8048574:pop    esi]
0x8048575:pop    edi
    ax = v15439
    cx = v15440
    dx = v15441
    bx = v15538 [from 0x8048573:pop    ebx]
    sp = v15443+0x18 [from 0x8048575:pop    edi]
    bp = v15444
    si = v15574 [from 0x8048574:pop    esi]
    di = v15610 [from 0x8048575:pop    edi]
    es = v15447
    cs = v15448
    ss = v15449
    ds = v15450
    fs = v15451
    gs = v15452
    cf = v15499 [from 0x8048570:add    esp, 0x0c]
    ?1 = v15454
    pf = -v15494-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v15456
    af = v15498 [from 0x8048570:add    esp, 0x0c]
    ?5 = v15458
    zf = v15497 [from 0x8048570:add    esp, 0x0c]
    sf = v15496 [from 0x8048570:add    esp, 0x0c]
    tf = v15461
    if = v15462
    df = v15463
    of = v15502 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v15465
    iopl1 = v15466
    nt = v15467
    ?15 = v15468
    memory = {}
    ip = 0x8048576 [from 0x8048575:pop    edi]
0x8048576:pop    ebp
    ax = v15439
    cx = v15440
    dx = v15441
    bx = v15538 [from 0x8048573:pop    ebx]
    sp = v15443+0x1c [from 0x8048576:pop    ebp]
    bp = v15646 [from 0x8048576:pop    ebp]
    si = v15574 [from 0x8048574:pop    esi]
    di = v15610 [from 0x8048575:pop    edi]
    es = v15447
    cs = v15448
    ss = v15449
    ds = v15450
    fs = v15451
    gs = v15452
    cf = v15499 [from 0x8048570:add    esp, 0x0c]
    ?1 = v15454
    pf = -v15494-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v15456
    af = v15498 [from 0x8048570:add    esp, 0x0c]
    ?5 = v15458
    zf = v15497 [from 0x8048570:add    esp, 0x0c]
    sf = v15496 [from 0x8048570:add    esp, 0x0c]
    tf = v15461
    if = v15462
    df = v15463
    of = v15502 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v15465
    iopl1 = v15466
    nt = v15467
    ?15 = v15468
    memory = {}
    ip = 0x8048577 [from 0x8048576:pop    ebp]
0x8048577:ret    
    ax = v15439
    cx = v15440
    dx = v15441
    bx = v15538 [from 0x8048573:pop    ebx]
    sp = v15443+0x20 [from 0x8048577:ret    ]
    bp = v15646 [from 0x8048576:pop    ebp]
    si = v15574 [from 0x8048574:pop    esi]
    di = v15610 [from 0x8048575:pop    edi]
    es = v15447
    cs = v15448
    ss = v15449
    ds = v15450
    fs = v15451
    gs = v15452
    cf = v15499 [from 0x8048570:add    esp, 0x0c]
    ?1 = v15454
    pf = -v15494-0x1 [from 0x8048570:add    esp, 0x0c]
    ?3 = v15456
    af = v15498 [from 0x8048570:add    esp, 0x0c]
    ?5 = v15458
    zf = v15497 [from 0x8048570:add    esp, 0x0c]
    sf = v15496 [from 0x8048570:add    esp, 0x0c]
    tf = v15461
    if = v15462
    df = v15463
    of = v15502 [from 0x8048570:add    esp, 0x0c]
    iopl0 = v15465
    iopl1 = v15466
    nt = v15467
    ?15 = v15468
    memory = {}
    ip = v15684 [from 0x8048577:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048578:nop    
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {}
    ip = 0x8048579 [from 0x8048578:nop    ]
0x8048579:nop    
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {}
    ip = 0x804857a [from 0x8048579:nop    ]
0x804857a:nop    
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {}
    ip = 0x804857b [from 0x804857a:nop    ]
0x804857b:nop    
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {}
    ip = 0x804857c [from 0x804857b:nop    ]
0x804857c:nop    
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {}
    ip = 0x804857d [from 0x804857c:nop    ]
0x804857d:nop    
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {}
    ip = 0x804857e [from 0x804857d:nop    ]
0x804857e:nop    
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {}
    ip = 0x804857f [from 0x804857e:nop    ]
0x804857f:nop    
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {}
    ip = 0x8048580 [from 0x804857f:nop    ]
0x8048580:push   ebp
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750-0x4 [from 0x8048580:push   ebp]
    bp = v15751
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {
        size=4; addr=v15750-0x4 [from 0x8048580:push   ebp]; value=v15751
    }
    ip = 0x8048581 [from 0x8048580:push   ebp]
0x8048581:mov    ebp, esp
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750-0x4 [from 0x8048580:push   ebp]
    bp = v15750-0x4 [from 0x8048580:push   ebp]
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {
        size=4; addr=v15750-0x4 [from 0x8048580:push   ebp]; value=v15751
    }
    ip = 0x8048583 [from 0x8048581:mov    ebp, esp]
0x8048583:push   ebx
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750-0x8 [from 0x8048583:push   ebx]
    bp = v15750-0x4 [from 0x8048580:push   ebp]
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = v15760
    ?1 = v15761
    pf = v15762
    ?3 = v15763
    af = v15764
    ?5 = v15765
    zf = v15766
    sf = v15767
    tf = v15768
    if = v15769
    df = v15770
    of = v15771
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {
        size=4; addr=v15750-0x8 [from 0x8048583:push   ebx]; value=v15749
        size=4; addr=v15750-0x4 [from 0x8048580:push   ebp]; value=v15751
    }
    ip = 0x8048584 [from 0x8048583:push   ebx]
0x8048584:sub    esp, 0x04
    ax = v15746
    cx = v15747
    dx = v15748
    bx = v15749
    sp = v15750-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v15750-0x4 [from 0x8048580:push   ebp]
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = -v16169-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v15761
    pf = -v16163-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v15763
    af = -v16167-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v15765
    zf = v16166 [from 0x8048584:sub    esp, 0x04]
    sf = v16165 [from 0x8048584:sub    esp, 0x04]
    tf = v15768
    if = v15769
    df = v15770
    of = v16173 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {
        size=4; addr=v15750-0x8 [from 0x8048583:push   ebx]; value=v15749
        size=4; addr=v15750-0x4 [from 0x8048580:push   ebp]; value=v15751
    }
    ip = 0x8048587 [from 0x8048584:sub    esp, 0x04]
0x8048587:mov    ebx, 0x080495e8
    ax = v15746
    cx = v15747
    dx = v15748
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v15750-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v15750-0x4 [from 0x8048580:push   ebp]
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = -v16169-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v15761
    pf = -v16163-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v15763
    af = -v16167-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v15765
    zf = v16166 [from 0x8048584:sub    esp, 0x04]
    sf = v16165 [from 0x8048584:sub    esp, 0x04]
    tf = v15768
    if = v15769
    df = v15770
    of = v16173 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {
        size=4; addr=v15750-0x8 [from 0x8048583:push   ebx]; value=v15749
        size=4; addr=v15750-0x4 [from 0x8048580:push   ebp]; value=v15751
    }
    ip = 0x804858c [from 0x8048587:mov    ebx, 0x080495e8]
0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]
    ax = v16241 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v15747
    dx = v15748
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v15750-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v15750-0x4 [from 0x8048580:push   ebp]
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = -v16169-0x1 [from 0x8048584:sub    esp, 0x04]
    ?1 = v15761
    pf = -v16163-0x1 [from 0x8048584:sub    esp, 0x04]
    ?3 = v15763
    af = -v16167-0x1 [from 0x8048584:sub    esp, 0x04]
    ?5 = v15765
    zf = v16166 [from 0x8048584:sub    esp, 0x04]
    sf = v16165 [from 0x8048584:sub    esp, 0x04]
    tf = v15768
    if = v15769
    df = v15770
    of = v16173 [from 0x8048584:sub    esp, 0x04]
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {
        size=4; addr=v15750-0x8 [from 0x8048583:push   ebx]; value=v15749
        size=4; addr=v15750-0x4 [from 0x8048580:push   ebp]; value=v15751
    }
    ip = 0x8048591 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
0x8048591:cmp    eax, 0xff<-0x01>
    ax = v16241 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v15747
    dx = v15748
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v15750-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v15750-0x4 [from 0x8048580:push   ebp]
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = -v16306-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v15761
    pf = -v16300-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v15763
    af = -v16304-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v15765
    zf = v16303 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v16302 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v15768
    if = v15769
    df = v15770
    of = v16310 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {
        size=4; addr=v15750-0x8 [from 0x8048583:push   ebx]; value=v15749
        size=4; addr=v15750-0x4 [from 0x8048580:push   ebp]; value=v15751
    }
    ip = 0x8048594 [from 0x8048591:cmp    eax, 0xff<-0x01>]
0x8048594:je     0x080485ac
    ax = v16241 [from 0x804858c:mov    eax, DWORD PTR ds:[0x080495e8]]
    cx = v15747
    dx = v15748
    bx = 0x80495e8 [from 0x8048587:mov    ebx, 0x080495e8]
    sp = v15750-0xc [from 0x8048584:sub    esp, 0x04]
    bp = v15750-0x4 [from 0x8048580:push   ebp]
    si = v15752
    di = v15753
    es = v15754
    cs = v15755
    ss = v15756
    ds = v15757
    fs = v15758
    gs = v15759
    cf = -v16306-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?1 = v15761
    pf = -v16300-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?3 = v15763
    af = -v16304-0x1 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    ?5 = v15765
    zf = v16303 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    sf = v16302 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    tf = v15768
    if = v15769
    df = v15770
    of = v16310 [from 0x8048591:cmp    eax, 0xff<-0x01>]
    iopl0 = v15772
    iopl1 = v15773
    nt = v15774
    ?15 = v15775
    memory = {
        size=4; addr=v15750-0x8 [from 0x8048583:push   ebx]; value=v15749
        size=4; addr=v15750-0x4 [from 0x8048580:push   ebp]; value=v15751
    }
    ip = v16344 [from 0x8048594:je     0x080485ac]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x8048596:lea    esi, [esi + 0x00]
    ax = v16466
    cx = v16467
    dx = v16468
    bx = v16469
    sp = v16470
    bp = v16471
    si = v16472 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v16473
    es = v16474
    cs = v16475
    ss = v16476
    ds = v16477
    fs = v16478
    gs = v16479
    cf = v16480
    ?1 = v16481
    pf = v16482
    ?3 = v16483
    af = v16484
    ?5 = v16485
    zf = v16486
    sf = v16487
    tf = v16488
    if = v16489
    df = v16490
    of = v16491
    iopl0 = v16492
    iopl1 = v16493
    nt = v16494
    ?15 = v16495
    memory = {}
    ip = 0x8048599 [from 0x8048596:lea    esi, [esi + 0x00]]
0x8048599:lea    edi, [edi + 0x00000000]
    ax = v16466
    cx = v16467
    dx = v16468
    bx = v16469
    sp = v16470
    bp = v16471
    si = v16472 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v16473 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v16474
    cs = v16475
    ss = v16476
    ds = v16477
    fs = v16478
    gs = v16479
    cf = v16480
    ?1 = v16481
    pf = v16482
    ?3 = v16483
    af = v16484
    ?5 = v16485
    zf = v16486
    sf = v16487
    tf = v16488
    if = v16489
    df = v16490
    of = v16491
    iopl0 = v16492
    iopl1 = v16493
    nt = v16494
    ?15 = v16495
    memory = {}
    ip = 0x80485a0 [from 0x8048599:lea    edi, [edi + 0x00000000]]
0x80485a0:sub    ebx, 0x04
    ax = v16466
    cx = v16467
    dx = v16468
    bx = v16469-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v16470
    bp = v16471
    si = v16472 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v16473 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v16474
    cs = v16475
    ss = v16476
    ds = v16477
    fs = v16478
    gs = v16479
    cf = -v16597-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v16481
    pf = -v16591-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v16483
    af = -v16595-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v16485
    zf = v16594 [from 0x80485a0:sub    ebx, 0x04]
    sf = v16593 [from 0x80485a0:sub    ebx, 0x04]
    tf = v16488
    if = v16489
    df = v16490
    of = v16601 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v16492
    iopl1 = v16493
    nt = v16494
    ?15 = v16495
    memory = {}
    ip = 0x80485a3 [from 0x80485a0:sub    ebx, 0x04]
0x80485a3:call   eax
    ax = v16466
    cx = v16467
    dx = v16468
    bx = v16469-0x4 [from 0x80485a0:sub    ebx, 0x04]
    sp = v16470-0x4 [from 0x80485a3:call   eax]
    bp = v16471
    si = v16472 [from 0x8048596:lea    esi, [esi + 0x00]]
    di = v16473 [from 0x8048599:lea    edi, [edi + 0x00000000]]
    es = v16474
    cs = v16475
    ss = v16476
    ds = v16477
    fs = v16478
    gs = v16479
    cf = -v16597-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?1 = v16481
    pf = -v16591-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?3 = v16483
    af = -v16595-0x1 [from 0x80485a0:sub    ebx, 0x04]
    ?5 = v16485
    zf = v16594 [from 0x80485a0:sub    ebx, 0x04]
    sf = v16593 [from 0x80485a0:sub    ebx, 0x04]
    tf = v16488
    if = v16489
    df = v16490
    of = v16601 [from 0x80485a0:sub    ebx, 0x04]
    iopl0 = v16492
    iopl1 = v16493
    nt = v16494
    ?15 = v16495
    memory = {
        size=4; addr=v16470-0x4 [from 0x80485a3:call   eax]; value=0x80485a5 [from 0x80485a3:call   eax]
    }
    ip = v16466
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485a5:mov    eax, DWORD PTR ds:[ebx]
    ax = v16821 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v16790
    dx = v16791
    bx = v16792
    sp = v16793
    bp = v16794
    si = v16795
    di = v16796
    es = v16797
    cs = v16798
    ss = v16799
    ds = v16800
    fs = v16801
    gs = v16802
    cf = v16803
    ?1 = v16804
    pf = v16805
    ?3 = v16806
    af = v16807
    ?5 = v16808
    zf = v16809
    sf = v16810
    tf = v16811
    if = v16812
    df = v16813
    of = v16814
    iopl0 = v16815
    iopl1 = v16816
    nt = v16817
    ?15 = v16818
    memory = {}
    ip = 0x80485a7 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
0x80485a7:cmp    eax, 0xff<-0x01>
    ax = v16821 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v16790
    dx = v16791
    bx = v16792
    sp = v16793
    bp = v16794
    si = v16795
    di = v16796
    es = v16797
    cs = v16798
    ss = v16799
    ds = v16800
    fs = v16801
    gs = v16802
    cf = -v16886-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v16804
    pf = -v16880-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v16806
    af = -v16884-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v16808
    zf = v16883 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v16882 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v16811
    if = v16812
    df = v16813
    of = v16890 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v16815
    iopl1 = v16816
    nt = v16817
    ?15 = v16818
    memory = {}
    ip = 0x80485aa [from 0x80485a7:cmp    eax, 0xff<-0x01>]
0x80485aa:jne    0x080485a0
    ax = v16821 [from 0x80485a5:mov    eax, DWORD PTR ds:[ebx]]
    cx = v16790
    dx = v16791
    bx = v16792
    sp = v16793
    bp = v16794
    si = v16795
    di = v16796
    es = v16797
    cs = v16798
    ss = v16799
    ds = v16800
    fs = v16801
    gs = v16802
    cf = -v16886-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?1 = v16804
    pf = -v16880-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?3 = v16806
    af = -v16884-0x1 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    ?5 = v16808
    zf = v16883 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    sf = v16882 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    tf = v16811
    if = v16812
    df = v16813
    of = v16890 [from 0x80485a7:cmp    eax, 0xff<-0x01>]
    iopl0 = v16815
    iopl1 = v16816
    nt = v16817
    ?15 = v16818
    memory = {}
    ip = v16925 [from 0x80485aa:jne    0x080485a0]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ac:pop    eax
    ax = v17081 [from 0x80485ac:pop    eax]
    cx = v17048
    dx = v17049
    bx = v17050
    sp = v17051+0x4 [from 0x80485ac:pop    eax]
    bp = v17052
    si = v17053
    di = v17054
    es = v17055
    cs = v17056
    ss = v17057
    ds = v17058
    fs = v17059
    gs = v17060
    cf = v17061
    ?1 = v17062
    pf = v17063
    ?3 = v17064
    af = v17065
    ?5 = v17066
    zf = v17067
    sf = v17068
    tf = v17069
    if = v17070
    df = v17071
    of = v17072
    iopl0 = v17073
    iopl1 = v17074
    nt = v17075
    ?15 = v17076
    memory = {}
    ip = 0x80485ad [from 0x80485ac:pop    eax]
0x80485ad:pop    ebx
    ax = v17081 [from 0x80485ac:pop    eax]
    cx = v17048
    dx = v17049
    bx = v17117 [from 0x80485ad:pop    ebx]
    sp = v17051+0x8 [from 0x80485ad:pop    ebx]
    bp = v17052
    si = v17053
    di = v17054
    es = v17055
    cs = v17056
    ss = v17057
    ds = v17058
    fs = v17059
    gs = v17060
    cf = v17061
    ?1 = v17062
    pf = v17063
    ?3 = v17064
    af = v17065
    ?5 = v17066
    zf = v17067
    sf = v17068
    tf = v17069
    if = v17070
    df = v17071
    of = v17072
    iopl0 = v17073
    iopl1 = v17074
    nt = v17075
    ?15 = v17076
    memory = {}
    ip = 0x80485ae [from 0x80485ad:pop    ebx]
0x80485ae:pop    ebp
    ax = v17081 [from 0x80485ac:pop    eax]
    cx = v17048
    dx = v17049
    bx = v17117 [from 0x80485ad:pop    ebx]
    sp = v17051+0xc [from 0x80485ae:pop    ebp]
    bp = v17153 [from 0x80485ae:pop    ebp]
    si = v17053
    di = v17054
    es = v17055
    cs = v17056
    ss = v17057
    ds = v17058
    fs = v17059
    gs = v17060
    cf = v17061
    ?1 = v17062
    pf = v17063
    ?3 = v17064
    af = v17065
    ?5 = v17066
    zf = v17067
    sf = v17068
    tf = v17069
    if = v17070
    df = v17071
    of = v17072
    iopl0 = v17073
    iopl1 = v17074
    nt = v17075
    ?15 = v17076
    memory = {}
    ip = 0x80485af [from 0x80485ae:pop    ebp]
0x80485af:ret    
    ax = v17081 [from 0x80485ac:pop    eax]
    cx = v17048
    dx = v17049
    bx = v17117 [from 0x80485ad:pop    ebx]
    sp = v17051+0x10 [from 0x80485af:ret    ]
    bp = v17153 [from 0x80485ae:pop    ebp]
    si = v17053
    di = v17054
    es = v17055
    cs = v17056
    ss = v17057
    ds = v17058
    fs = v17059
    gs = v17060
    cf = v17061
    ?1 = v17062
    pf = v17063
    ?3 = v17064
    af = v17065
    ?5 = v17066
    zf = v17067
    sf = v17068
    tf = v17069
    if = v17070
    df = v17071
    of = v17072
    iopl0 = v17073
    iopl1 = v17074
    nt = v17075
    ?15 = v17076
    memory = {}
    ip = v17191 [from 0x80485af:ret    ]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485b0:push   ebp
    ax = v17253
    cx = v17254
    dx = v17255
    bx = v17256
    sp = v17257-0x4 [from 0x80485b0:push   ebp]
    bp = v17258
    si = v17259
    di = v17260
    es = v17261
    cs = v17262
    ss = v17263
    ds = v17264
    fs = v17265
    gs = v17266
    cf = v17267
    ?1 = v17268
    pf = v17269
    ?3 = v17270
    af = v17271
    ?5 = v17272
    zf = v17273
    sf = v17274
    tf = v17275
    if = v17276
    df = v17277
    of = v17278
    iopl0 = v17279
    iopl1 = v17280
    nt = v17281
    ?15 = v17282
    memory = {
        size=4; addr=v17257-0x4 [from 0x80485b0:push   ebp]; value=v17258
    }
    ip = 0x80485b1 [from 0x80485b0:push   ebp]
0x80485b1:mov    ebp, esp
    ax = v17253
    cx = v17254
    dx = v17255
    bx = v17256
    sp = v17257-0x4 [from 0x80485b0:push   ebp]
    bp = v17257-0x4 [from 0x80485b0:push   ebp]
    si = v17259
    di = v17260
    es = v17261
    cs = v17262
    ss = v17263
    ds = v17264
    fs = v17265
    gs = v17266
    cf = v17267
    ?1 = v17268
    pf = v17269
    ?3 = v17270
    af = v17271
    ?5 = v17272
    zf = v17273
    sf = v17274
    tf = v17275
    if = v17276
    df = v17277
    of = v17278
    iopl0 = v17279
    iopl1 = v17280
    nt = v17281
    ?15 = v17282
    memory = {
        size=4; addr=v17257-0x4 [from 0x80485b0:push   ebp]; value=v17258
    }
    ip = 0x80485b3 [from 0x80485b1:mov    ebp, esp]
0x80485b3:push   ebx
    ax = v17253
    cx = v17254
    dx = v17255
    bx = v17256
    sp = v17257-0x8 [from 0x80485b3:push   ebx]
    bp = v17257-0x4 [from 0x80485b0:push   ebp]
    si = v17259
    di = v17260
    es = v17261
    cs = v17262
    ss = v17263
    ds = v17264
    fs = v17265
    gs = v17266
    cf = v17267
    ?1 = v17268
    pf = v17269
    ?3 = v17270
    af = v17271
    ?5 = v17272
    zf = v17273
    sf = v17274
    tf = v17275
    if = v17276
    df = v17277
    of = v17278
    iopl0 = v17279
    iopl1 = v17280
    nt = v17281
    ?15 = v17282
    memory = {
        size=4; addr=v17257-0x8 [from 0x80485b3:push   ebx]; value=v17256
        size=4; addr=v17257-0x4 [from 0x80485b0:push   ebp]; value=v17258
    }
    ip = 0x80485b4 [from 0x80485b3:push   ebx]
0x80485b4:push   eax
    ax = v17253
    cx = v17254
    dx = v17255
    bx = v17256
    sp = v17257-0xc [from 0x80485b4:push   eax]
    bp = v17257-0x4 [from 0x80485b0:push   ebp]
    si = v17259
    di = v17260
    es = v17261
    cs = v17262
    ss = v17263
    ds = v17264
    fs = v17265
    gs = v17266
    cf = v17267
    ?1 = v17268
    pf = v17269
    ?3 = v17270
    af = v17271
    ?5 = v17272
    zf = v17273
    sf = v17274
    tf = v17275
    if = v17276
    df = v17277
    of = v17278
    iopl0 = v17279
    iopl1 = v17280
    nt = v17281
    ?15 = v17282
    memory = {
        size=4; addr=v17257-0xc [from 0x80485b4:push   eax]; value=v17253
        size=4; addr=v17257-0x8 [from 0x80485b3:push   ebx]; value=v17256
        size=4; addr=v17257-0x4 [from 0x80485b0:push   ebp]; value=v17258
    }
    ip = 0x80485b5 [from 0x80485b4:push   eax]
0x80485b5:call   0x080485ba
    ax = v17253
    cx = v17254
    dx = v17255
    bx = v17256
    sp = v17257-0x10 [from 0x80485b5:call   0x080485ba]
    bp = v17257-0x4 [from 0x80485b0:push   ebp]
    si = v17259
    di = v17260
    es = v17261
    cs = v17262
    ss = v17263
    ds = v17264
    fs = v17265
    gs = v17266
    cf = v17267
    ?1 = v17268
    pf = v17269
    ?3 = v17270
    af = v17271
    ?5 = v17272
    zf = v17273
    sf = v17274
    tf = v17275
    if = v17276
    df = v17277
    of = v17278
    iopl0 = v17279
    iopl1 = v17280
    nt = v17281
    ?15 = v17282
    memory = {
        size=4; addr=v17257-0x10 [from 0x80485b5:call   0x080485ba]; value=0x80485ba [from 0x80485b5:call   0x080485ba]
        size=4; addr=v17257-0xc [from 0x80485b4:push   eax]; value=v17253
        size=4; addr=v17257-0x8 [from 0x80485b3:push   ebx]; value=v17256
        size=4; addr=v17257-0x4 [from 0x80485b0:push   ebp]; value=v17258
    }
    ip = 0x80485ba [from 0x80485b5:call   0x080485ba]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485ba:pop    ebx
    ax = v17520
    cx = v17521
    dx = v17522
    bx = v17554 [from 0x80485ba:pop    ebx]
    sp = v17524+0x4 [from 0x80485ba:pop    ebx]
    bp = v17525
    si = v17526
    di = v17527
    es = v17528
    cs = v17529
    ss = v17530
    ds = v17531
    fs = v17532
    gs = v17533
    cf = v17534
    ?1 = v17535
    pf = v17536
    ?3 = v17537
    af = v17538
    ?5 = v17539
    zf = v17540
    sf = v17541
    tf = v17542
    if = v17543
    df = v17544
    of = v17545
    iopl0 = v17546
    iopl1 = v17547
    nt = v17548
    ?15 = v17549
    memory = {}
    ip = 0x80485bb [from 0x80485ba:pop    ebx]
0x80485bb:add    ebx, 0x0000110e
    ax = v17520
    cx = v17521
    dx = v17522
    bx = v17554+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v17524+0x4 [from 0x80485ba:pop    ebx]
    bp = v17525
    si = v17526
    di = v17527
    es = v17528
    cs = v17529
    ss = v17530
    ds = v17531
    fs = v17532
    gs = v17533
    cf = v17616 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v17535
    pf = -v17611-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v17537
    af = v17615 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v17539
    zf = v17614 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v17613 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v17542
    if = v17543
    df = v17544
    of = v17619 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v17546
    iopl1 = v17547
    nt = v17548
    ?15 = v17549
    memory = {}
    ip = 0x80485c1 [from 0x80485bb:add    ebx, 0x0000110e]
0x80485c1:call   0x08048390
    ax = v17520
    cx = v17521
    dx = v17522
    bx = v17554+0x110e [from 0x80485bb:add    ebx, 0x0000110e]
    sp = v17524 [from 0x80485c1:call   0x08048390]
    bp = v17525
    si = v17526
    di = v17527
    es = v17528
    cs = v17529
    ss = v17530
    ds = v17531
    fs = v17532
    gs = v17533
    cf = v17616 [from 0x80485bb:add    ebx, 0x0000110e]
    ?1 = v17535
    pf = -v17611-0x1 [from 0x80485bb:add    ebx, 0x0000110e]
    ?3 = v17537
    af = v17615 [from 0x80485bb:add    ebx, 0x0000110e]
    ?5 = v17539
    zf = v17614 [from 0x80485bb:add    ebx, 0x0000110e]
    sf = v17613 [from 0x80485bb:add    ebx, 0x0000110e]
    tf = v17542
    if = v17543
    df = v17544
    of = v17619 [from 0x80485bb:add    ebx, 0x0000110e]
    iopl0 = v17546
    iopl1 = v17547
    nt = v17548
    ?15 = v17549
    memory = {
        size=4; addr=v17524 [from 0x80485c1:call   0x08048390]; value=0x80485c6 [from 0x80485c1:call   0x08048390]
    }
    ip = 0x8048390 [from 0x80485c1:call   0x08048390]
=====================================================================================
=== Starting a new basic block                                                    ===
=====================================================================================
0x80485c6:pop    eax
    ax = v17872 [from 0x80485c6:pop    eax]
    cx = v17839
    dx = v17840
    bx = v17841
    sp = v17842+0x4 [from 0x80485c6:pop    eax]
    bp = v17843
    si = v17844
    di = v17845
    es = v17846
    cs = v17847
    ss = v17848
    ds = v17849
    fs = v17850
    gs = v17851
    cf = v17852
    ?1 = v17853
    pf = v17854
    ?3 = v17855
    af = v17856
    ?5 = v17857
    zf = v17858
    sf = v17859
    tf = v17860
    if = v17861
    df = v17862
    of = v17863
    iopl0 = v17864
    iopl1 = v17865
    nt = v17866
    ?15 = v17867
    memory = {}
    ip = 0x80485c7 [from 0x80485c6:pop    eax]
0x80485c7:pop    ebx
    ax = v17872 [from 0x80485c6:pop    eax]
    cx = v17839
    dx = v17840
    bx = v17908 [from 0x80485c7:pop    ebx]
    sp = v17842+0x8 [from 0x80485c7:pop    ebx]
    bp = v17843
    si = v17844
    di = v17845
    es = v17846
    cs = v17847
    ss = v17848
    ds = v17849
    fs = v17850
    gs = v17851
    cf = v17852
    ?1 = v17853
    pf = v17854
    ?3 = v17855
    af = v17856
    ?5 = v17857
    zf = v17858
    sf = v17859
    tf = v17860
    if = v17861
    df = v17862
    of = v17863
    iopl0 = v17864
    iopl1 = v17865
    nt = v17866
    ?15 = v17867
    memory = {}
    ip = 0x80485c8 [from 0x80485c7:pop    ebx]
0x80485c8:leave  
    ax = v17872 [from 0x80485c6:pop    eax]
    cx = v17839
    dx = v17840
    bx = v17908 [from 0x80485c7:pop    ebx]
    sp = v17843+0x4 [from 0x80485c8:leave  ]
    bp = v17944 [from 0x80485c8:leave  ]
    si = v17844
    di = v17845
    es = v17846
    cs = v17847
    ss = v17848
    ds = v17849
    fs = v17850
    gs = v17851
    cf = v17852
    ?1 = v17853
    pf = v17854
    ?3 = v17855
    af = v17856
    ?5 = v17857
    zf = v17858
    sf = v17859
    tf = v17860
    if = v17861
    df = v17862
    of = v17863
    iopl0 = v17864
    iopl1 = v17865
    nt = v17866
    ?15 = v17867
    memory = {}
    ip = 0x80485c9 [from 0x80485c8:leave  ]
0x80485c9:ret    
    ax = v17872 [from 0x80485c6:pop    eax]
    cx = v17839
    dx = v17840
    bx = v17908 [from 0x80485c7:pop    ebx]
    sp = v17843+0x8 [from 0x80485c9:ret    ]
    bp = v17944 [from 0x80485c8:leave  ]
    si = v17844
    di = v17845
    es = v17846
    cs = v17847
    ss = v17848
    ds = v17849
    fs = v17850
    gs = v17851
    cf = v17852
    ?1 = v17853
    pf = v17854
    ?3 = v17855
    af = v17856
    ?5 = v17857
    zf = v17858
    sf = v17859
    tf = v17860
    if = v17861
    df = v17862
    of = v17863
    iopl0 = v17864
    iopl1 = v17865
    nt = v17866
    ?15 = v17867
    memory = {}
    ip = v17982 [from 0x80485c9:ret    ]
analyzed headers: 1
